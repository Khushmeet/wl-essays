(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1029008,      19799]
NotebookOptionsPosition[   1022310,      19696]
NotebookOutlinePosition[   1022750,      19716]
CellTagsIndexPosition[   1022707,      19713]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
Uigy121m186wYD68cq6aahMN5+syWSb1kqlWZL3hhVMklC0h4puyBuT3ljhe
HxqX95Xs4MKuO7+3mmxZjwE9HfDkmha/b1ShSAE170M1riti43IJL2MlJN4W
Ub2SZOqvykyxT8Xj67n9GkymWNumhRpd2ksYGSBSreiA39dLKPOFiIAeDoih
2uggYbRguo7nnLfhwj6X03c1qK3BnQgBcbeVuHpU4vyA9YOz2oflA5YXrO4l
fwR4vCsuOd1VCBlLNdE2Pe5eVyHxiZL0oON1Cp7LEftIiRvnJHTvIPJ4YJ13
qAaTq9C6kQ4nDmpwn+LVbappwlZJ+LmhxLlCwx8It8NaXDqu4nV9drik2f41
khw9O2g4R2S929IltKZzeNO9eRk+5rFl2e/zG2O2G9kwy5fjhmpwYLvIe3CT
x6jRvBFxUvIfe7vM9cFwYmOG8udVUX1OXCWX+f6XcfzJ12WYjauJmyrTrc/m
dfC4aD6euUb5eHX+RmHckeRd8765N8S4LMspMrv0+rDu32W9v3UulNmbxwa9
X45MO/ZHoNdMdGyWdxmf/L73kTPj8f8vxc7+nXWaXti+nE+wXKYWIdPqIDe4
QO7mDnmOXJB5+UCevyCUnxeFrGhJCF+Wg6LCN3/r/f2PQ2RW+n0X2zVvK2O8
Ukn8TiIuYTBAcHeH4OUFoWBBqL8oDrFsWagrVoRQ9TsI1WtC/KEepIaNoGnW
DPr27eDcozOc+/WC59B+8Pq1L/JP6IPi0/qh9Nx+qLK4D+qs6okGG7uiVVhH
dNnVGn0P/Py/h0s29Zvxc6N+aV/iAwpJgpJslulX8vaC9FkhSKVKQv1VRagr
V4Wq9n9Irw1Jrz/DoU1bOHTtDNe+veEa0Bfuw/si77j+KDB5IIrNHEi6HYBv
lvZBrVXdUH9DF7Tc2g7dd/2Mfvsa4dcjdTHpeB1MO1UT8y5Uw+qr3yDselns
vlUCh+4VxqkHBXDpkReuRXsgMsYVd2Jc8DBOjyeJ6neq9z+sfrOOvVnp23of
8gMl1ThaLRTOLlB6ekKdPx+kokUglvaF9O030NSoBk29H6Bv3hyOnTvC0a8n
XAb1I90ORM7AgfCZPASFZw1BybmDUO43f1Re2Rd11vVEk62d0WFnO/Tc0xxD
DjRC0LEfMPvMd/jtYkWsv1waO2+UwMHbhXHybn5cfJAH10mvUdFuuBfrhAfx
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
Pi75PwSAVkc=
     "], {{0, 104}, {102, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{95.625, Automatic},
   ImageSizeRaw->{102, 104},
   PlotRange->{{0, 102}, {0, 104}}]], "Input",
  FontSize->24],
 StyleBox["Deep",
  FontSize->24],
 " ",
 StyleBox["Convolution Neural Networks for dummies!",
  FontSize->24,
  FontColor->GrayLevel[0]]
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellFrameColor->RGBColor[1, 1, 0],
 CellChangeTimes->{{3.7069150908882637`*^9, 3.706915137147071*^9}, {
  3.706915470209581*^9, 3.7069155049261913`*^9}, {3.706915652344268*^9, 
  3.706915657603814*^9}, {3.706959872863287*^9, 3.706959874240658*^9}},
 Background->RGBColor[
  0.9990997177080949, 0.937270160982681, 0.1552452887769894]],

Cell[TextData[StyleBox["What is Deep Convolution Neural Network? ",
 FontSize->14,
 FontColor->RGBColor[1, 1, 0]]], "Text",
 CellChangeTimes->{{3.7069164429574223`*^9, 3.706916477574133*^9}, {
  3.7069598759372673`*^9, 3.7069598770185003`*^9}},
 Background->GrayLevel[0]],

Cell[TextData[StyleBox["Seriously?! You never heard about Deep Convolution \
Neural Networks, have't you?\nThe Deep Convolution Neural Networks are state \
of the art algorithms in many Computer Vision problems such as image \
classification or detection. ",
 FontSize->14]], "Input",
 CellChangeTimes->{{3.706916717212112*^9, 3.706916741337358*^9}, {
  3.706916774629081*^9, 3.7069167848384247`*^9}, {3.706916867927868*^9, 
  3.706916870452342*^9}, {3.7069170372971487`*^9, 3.706917067805141*^9}, {
  3.706917104080062*^9, 3.7069171262046413`*^9}, {3.706917579933105*^9, 
  3.7069176174239063`*^9}, {3.7069176980658092`*^9, 3.7069176992896967`*^9}, {
  3.706917771595703*^9, 3.706917779310327*^9}, {3.706917938039433*^9, 
  3.7069179397644453`*^9}, {3.706918368186595*^9, 3.7069183701005*^9}, {
  3.706959879560787*^9, 3.706959889826269*^9}, {3.707080994782885*^9, 
  3.7070809993214073`*^9}},
 Background->RGBColor[
  0.9990997177080949, 0.937270160982681, 0.1552452887769894]]
}, Open  ]],

Cell[TextData[StyleBox["Ooww come on! State of the art algorithm? What do you \
mean by this? ",
 FontSize->14,
 FontColor->RGBColor[1, 1, 0]]], "Input",
 CellChangeTimes->{{3.7069177151741457`*^9, 3.70691773954916*^9}, 
   3.706918013531581*^9, {3.706955086914818*^9, 3.70695509401785*^9}},
 Background->GrayLevel[0]],

Cell[TextData[StyleBox["Have you heard about ImageNet Large Scale Visual \
Recognition Challenge (ILSVRC)?\[LineSeparator]Probably not. The goal of this \
competition is to predict one of the 1000 class which describes the image. \n\
Please, take a look at the competition results over time. ",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.70691807434798*^9, 3.706918100950767*^9}, {
   3.7069181629472437`*^9, 3.706918191554597*^9}, {3.706918288409091*^9, 
   3.706918292462226*^9}, {3.706918808449401*^9, 3.7069188759891777`*^9}, {
   3.706919066139887*^9, 3.70691908340291*^9}, 3.706919114491517*^9, 
   3.706919173492322*^9, 3.7069197676169252`*^9, {3.706955311033102*^9, 
   3.706955335156124*^9}},
 Background->RGBColor[
  0.9990997177080949, 0.937270160982681, 0.1552452887769894]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3Qe8FNX5//GDLXbsDQv2TpVqgwtIERA19iTG/BJLFDXRJJoIFzUqYhcV
e0usMVaK2LuigGIXo2KJUWyJ3Vjm/zw55/zvucPubZyZ2Xv38369Ht0puzsz
7O6d78w5M+v/4ojdDlzEGHPUkvKf3Q74Q//f/vaAY3dfQQb2OPyoQw46/Fe/
HHr40b866Fe/7f2LRWXkoe2M6SgPFjMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAALQJv5S6T2rrYFx7qclS5zbh+ftI3S/1H6l3pSZI
beCm9ZR6QurIRl5jF6nHpIa44c2lLpG6xb32Q1LXumVdspHXOsS9li7PJ1KX
SvVrYP4aqWlSU6SmSt0qdbnUX92wjr9T6iqpxRp57yysKnWh1A3B8kx2y6TL
uHQTXkO3iW6/291rTHY1Xerk+IvcZuwo9YDUbgUvRxa6SV0tdbGp+76mXSF1
h9QSeS0UAACoCn+XSqT2CsZt6MZ90chzL3Pzab0i9a9gWK0TDDe07/4PN8+2
bviw4HnzpT4Kht809bOSt57UC6nleS0YHlfmvQ8I5mmodBmK2A/r18Ayab5a
vgmv8U4Dr/Fo9CVuO44ydhs1JYe3NuNN3WfgtTLz+OntW/geWxibkUe28PkA
AKBt0mPruo8xPBi3rhv3cgPP28HN84zUKsH4ocbmEr+vfp+bb6cyr7NGiff6
uRv352DcSlJnuPEvSS0STNP3eiN4TrhPvpHUg1KPN7AuOv8yUj+S6u1e52E3
vLSbvngDz89SX7c804LlWaaZy+Rz2RbuNZZxtYIp5pxOa/Er03B2bc3+aOqO
Mej/9ysxz3tu2nItfI/h7vlnt/D5AACgbWpp/jjZzVOubUo79/993HxXl5nP
7+P9Jhi3vxt3Qon533XTNg3G/cmNu6aB5V2lgWmhDdxr3dPAPEtJ9ZDaXmq1
MvPoPlvHYFhzlrb1WreJy+H1cctzczOfF3rRvcbKjcynWWSjYHhLY9vpeHoc
PGyro1mtY5nX0edp+6W1yrzXssaeZ/N6pt67MZ2MPTe0XpnpS6RebyU3f7m2
RqWUyx/rm7pzApqDt5ParMTzuxi7Xg3R19F/476m8fMM+pkfaOw213aImkGX
LTNvJzfvmmWm+/xxutTXxp7fS2ssf+j23cmU/3fz3/3TjM3KTTlXBwAA2r6W
5o8/uHkua+T1dZ/je6mvTOlj7bPd64T7qT5/nFJi/lfdtC3dsO7/+fZZzd23
L6Wze60Hykw/xSzYhukmY/tphMYZu1+n489MzX9JM5bH548bm/GcNH/+Y+1G
5usn9Z3UIKmjTd3y/tJN13ZI+u+o+/yPBNPDHHGM1A+m/vpqn5P0fn+t1H/d
c+8I5u3SyDIeLPVZ6vX1/FbX1HxD3brs6JY/nF/78rQzjSuVP1Zxy62ff/23
+SZ43dvcPJp1ngvGP2UWzGm6nnebBT9LJ5ZYDt12j6Xm07aOH7jHYUbsL/V6
al79fC6Tek2fP/qZun/rg1PzlMsfmrUeT72Hfh42cdP1O/nPEuumtXeJ9QMA
ANWlpfkj7Nuhx1AbOrZ+q5tvcGr8qm78s6nxPn8cnRpf48brfpFve7SpGzev
gfdvjobyx81u2kypnxi7L+Xbl2l/k7B/iM8p/3b/P87YPja+r8uFTVwe3/5K
9+96GdvubeNmrI/y5z/KHSv3hrr53jJ1OelGU9c36GJT1+/E94vQf9v13fTz
TV1/gl+6593ixum+cvgZOdWN/zB4LZ23cwPLV+vm1bw52r3+FW7cd8FyqN2C
9/XrcqSpy6q1jWwLVSp/rJlabs1Wh5m6vka6Dv920/X9/ubGawYMM4/ff7/A
2PMEvzZ1uSpsC6Xt7XwO0HXWbOi38/tSR5i6c3A+q2o+2t/NO9GNeyK1bj5/
+L4Z+vhzU79NX6n8sZabz38/9RyLP//4sbGfsXZum/l8Ncstx0Wm8XwJAADa
vpbmD7Wnqcsgelx8nLF9CtJ8O/CbUuMPcuN/lRrv88f9xrbL+p3UOcbuY+o+
UY8Sr32biaNc/hjsxj9U4jk3uGnhdb78+SHdJ1snGK/9Lz5108q1jQltb0of
R9YMtHMTnq+edM/RHKL7gtpn53mpe03962f5fKf1ixKvc1IwPX2uqYsp/5nx
+8CnBeP89tHassRz0nzeLXUdgGPdtOuDcT5LJe6x18HU5cJFG3nPUvljdWPP
5/lM6Wnbqf+48ek+/XPc+E7BOP0Mp8+Zbe7muysY59swpa8hp+0DP02N8+cc
VkyNP8+NHxaM8/njUDfs/41+H8xTKn/4DL5d6j1+5sb/KRjXw407ygAAANRZ
mPyh9PzDX0zdvp4eb073CdH9PL/P9qNg/NNuXDqz+PyRLt2/Srcj2ctNu7YJ
y9oU5fLHtW78DiWe08ksmE2Oc+NGlZj/Kjftx01YHt2vPdDY/VCd//+MvXau
3ybbln/q//eEqWuz84ax18PSbanbP9yePn+Uy3Knuen7l5jmrw2wT4lpq5i6
8yKe3/9t7NrM3m/MgvvHIf18aXs3f/x+mKk7N5f2iptWru+OVy5/+PyX5s9p
rJQa/2c3fkQj72fcfM8Ew8e4cen2Zaeb+tltCzd8XYnX3MRNmxiMS+ePZdzw
18E875v6+WMpU3d+rNyyh9d58McG/lx6dgAAUKUWNn94un90k6nbL+6dmn61
qd/eYzVT164ozecPbZuibWq0D6/vI3Bcat4Rbvy0ZixrQ8rlj5fc+DVKPKe9
mzY/GDfGjSt1juJ3bprel8MkSXKH1PdSn0l9LvVfqQMaWc4TyyxnKb79VXq/
OM3nj1J9ENRZbnqpPtX3uGlblXnuV266P3fh938HNLJM3pVu/poy0+e66R3c
sM8fY0rM6/tSNHb+qaH8cW+J+R9209LXOhhnFvyOKc3uel5P+0BpJvJt8+4O
5ulubB+TG4Jxmgf0/I2eD1zKjfPnIjVjPuteT0vPc/nzIn8LXsNv/18H4/w1
eX/nhtP5Y0s3rO2v9JzOy+49tG2Z75cVZkz/3SR/AACAUKz84V1hSre16ufG
++s4+T7Be5kF+fyRzhpvu/Hhta82Mwvu+y+McvnD94lYvcRzlnXTPgzG+fxR
6vpgh7tp2p5f88c5Ug9KPSL1sNRDUrs0spw+8zR2jxbl+593aGQ+nz/KXS/V
96MfVGLao27a5mWe69sm+fMTfv+3qff2823cdiwz3bdx8n3sff44qcS8T5ny
/5ahhvLHwyXm97km3c/ft1sL2z/ta+qyup4302xwpymdbXwu0Wu/3Rc8L+wn
4ts/6XdW+6Bovxw9j6X3nNQ+PJNM/W1XKn9oWzztO6JZUc9T+m3q80d3N/y+
e4/bgvfQ77X279gzeD3yBwAAKCV2/vBt2J9Mjddr4mh79R/csN+PWsosyOeP
9PWvfuHGX5V63fmm6W2RGlMuf/h9y1L71+uZBdvk+PxRan/5bDdt34VYzhXM
gpmnHJ8/1m9kvoXJH/7cV78S0/Rasfrv/q9gXHPzxzmmfPsu9bWb7tv3VXL+
WNENa1vF9Dmp9OdI+0jpeQ79Tug2nmdsP5c+qeft5J57ZoNrVKdU/lC+vdfx
xva/CvPH2mbB9mENGenmr23i/AAAoDo0lD+ea+B55a5jc7BZMCN4/ro9/nqf
d5WYR5XLH3p89gdXYb8Fv8+k7YxK9SnW4/56raqmXHO1XP7w9zsp1TbJ9/U4
Nhjn9+/+UmJ+3x6msesFL9LANL+db2hgHs+3HWvsXoMLkz/8PetLXY/Z/3ue
H4xrbv4Y5eafWmLaADftjmBcJecPf4/L9DXQfJvEsP+6z+mN3QPQZ5qmngcs
lz/0M6eZVr9j2sbrm9R7+z7pjfWdUbuaBbcfAACAtpnQfYSRwbiObpzua2j/
BW1Hoe2BdB9QrwOlbfj1eLMeV9fj0Xr/Mb0m7KGmrm1IqWsadQumpzNP6AA3
/dQS03zf7XC/Sfer/X1E9N4Hesy4u6taN/7LMu+V5q/j9GBqvL9ukpbu++tx
a23nf6CpO5YdXkvq2GB+zVl63VK93tGlblxTrtelbZX0GLTuK+o9IPQ8gl4H
6pDgtUvd9y7N5w9d1iHG/ltq6f5h2J/e78efU+Z1fP+PUvey131Uf11eXXdd
Vz1H46/f9K2p33fGX7N19yYsv9Jc+Yap+1ys6d5TP0P+fiPhttjZjTu5xGvN
dNNK9eUJ+euzhffBXMONK9Vvyfc/Xyc13mdX3xfI54yPg2XW8xn+WsFTgufq
v4+/ZrBmAW37pOeR9PzioaY+f15N+49oP5yl3Xvpv5f2Sw+PGfjMfFiJ9fDZ
Vku/5+F9Efdz49809tye/hvov7NeG1qvcRxeb2FrN+/zbjm0j3xj5+AAAEDb
59vNhPuB4b52qdJ9sP8rM02PmTbUd+Ffbj5tZ17u+qd+/7rUPTJ8hvk+NV7P
h9xWZpl0X6l/A8tU6vXnlpim++5+XzAsbZ+fzlt+/07PGbyfml/3XRs7nu3N
KLNOeg2r9P1UyvHt+EuVtu3x54X8NWtLnbNRPvuVy416vdV5Jd5Dj8mnr9c6
wU3bzzSdZtznS7y+7iOnry3l7/9xQYnX8cfwGzv/caRZ8HyQzx9vlJjf9xFK
548LzILnekYHy/+FqTunov8P26npv43+W2u20/uvaL+Le0xd1kv/W11jyv9b
h/2m/P1Xyl1PzGc0raVT08LrMKcrfT7rztT0A8u8HwAAqB56LSM9zhu2p9B9
nn7G9k/YMygd1mvA+jb2ui+m5yr0uqx67Rw91l2qP0eoq3u/vg3Ms66bp1OZ
6doPJN1uxNP88Bu3THocvtz1kspZ1r13qWP8SnPOz429lqleA3XXMvP5/h/+
uqnabkvvsdeUa+6m6bbScyB67kT78pa6pm9DtE2Z7ufvYWx/f//vub+x94/z
9HyOrvs2ZV6nu5uevm9FqJ17j7Ndabu3Uu3ItnSv1Vif+FJ0/XXb630t9POX
viazWt29fqn7GY5w0xq7/8f6br4wWy7mxg0tMf8wNy19f5LObnw67+h3T8+N
aK7wnyPNduFnRNuKfV/iuUr7YSRmwXMK+rp6fkk/L5oVdiuxTJu7ZdrQlKbf
cf3MlPue6nkbbUep50/13+JnZZZR6b+RfvZ/a5qeuwEAANA8Pn/s2diMQBn+
GmelzrUof24sfb4FAAAA1UevH0T+wMLQ/j96DTr9HOn1c7UNm/ah0LaEt7rx
VxS2dAAAAKgk/p7X5A8sDG0fpdcgKNXXotS93QEAAFCdtE2MtulfoegFQZvQ
0dhr1GmfDO3TtHyhSwMAAAAAAAAAAAAAqGYNtYVYwix4jUIAAAAAaK7DpZ4z
9v5Q+v8+qel6v99XjL138rn5LhoAAACANkTvdzTZ2HuSbSv1orH3/F3STdf7
J+m1RPR+YyMN1xUBAAAA0HKLpYb13rCaMZZ1w/p4n2D6CW4cAAAAALTUSlKb
St0rdaMb18XYrNEhmG+QG7dGrksHAAAAoK3oJzVX6mtjs8UWbrzeG+y/UqsG
8/aS+lZqqxa8jz53rFQtRVEURVEURVVAHSe1jUHe9F5N3aQ6S50s9YWx5zw6
SX0vtXow73bG5pSOLXifnaVuk7qZoiiKoiiKogquW6RukBpsULTPpE5yjxNT
dz5E/dTYTLJI3gsFAAAAoNXbxNjzEt7GxmaOn7phPdcxOZj+L6m78lk0AAAA
AG2Mtrn6SOpZqVlSn0pdGUz3/c3nSL0q9Q+pVfJdRAAAAABtyIpSBxvbB2f7
EtPXNLZvzoF5LhQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
ZuSYP54gfwAAgIWnbbCWSI1bwo1fdMHZ69F76hxh7HkSve/O7NT006XmRljG
Qgx/9qxRNZPH5LGfnAx+5JSqyB87zzxrcF7bdOhjE6oif3yZ9NnhyaRL5tlj
hrzHm0lP8gcAAIhpJallWvjcm4y9J2hI792p5z9Oljp8IV67EIOmH99ryCOn
atuoTPeVB95zYjLsydNri17fPAx9YPzWgx8+JfNtOui+PydDH5+Qbg/YJt30
8MYbzEt6ZJ4/Xki6Jy9+3v2CotcXAAC0CeeY+u2unjVN7/vh3Sj1VGrcAKk7
pR6Q+lDqE6mtW7iM20udLXVGTnXiKr03vXXEcxOTgXefkOm+8ojnz0s2HT1i
lr6nseeM8lrHvOvElXtuctPwOedkvk1HvnR+stlhO8+phm3aYeMlrn8r6ZnM
Sbplmj8+S/omx1zc4UV5zxMqYL0piqIoqug609i+Bn0MmutqYzPHOKmBUvsZ
mz/+a+z5kKYqlT9C7YzNH7NatJTG7CT1V6m/5FRXrz6g0wPDn8l+X3n4nHOT
LX+/+0vG/lvktX5F1NVrDuhy786zz8o+00lu3OqY3edWwzbdtPdSd72TQ/74
JOmTnHRdx9erYJtSFEVRVFNK90uvMPZ4O5puWWOzx09LTPvI2FzXVNdJzWhk
niulvmrGaxZqpydO7z74wZMzbys04K7jk52fPXdM0eubh2Gzztp8pwdOkm1a
m+k21Xyz8+wzxxe9vnm4+7Ut1n0th/ZXmm/e/L7HeUWvLwAAaNXWNvY8x8ol
pul9ju9rxmvdYux5E0/7sO9o7HkP/16adS5u/mIWY+jM00dpP+ZMs4dUzdTa
ZNB9J1ZF//PBM04fnM82HZvs9OBJVdH//OOkzw4zcuh/rn3cX0m6/6Xo9QUA
AK3aosZeN/e0EuO/M7b/eGO03Zte9+prY/OF3u9D7yOymNRDxl7/Sttc6TV+
pxh7zaxWoWZKfvf/4Pq7GWQQrr8bvWZw/V0AALDwfm5sbnhE6hRj70OobaS0
v3j7Jjy/t7F9RvpJbSe1r9SWbpq279rL2HuEtLq2cdx/MD7uPxjfLO4/CAAA
Wh9tJ/WKsW2xvpD6u9TqhS5RBSB/xEf+iI/8AQAAWhHtm7Gb1HLBMBzyR3zk
j/jIHwAAoBVZwdi2V8OLXpBKRP6Ij/wRH/kDAAC0ItrPXO8PeE3RC1KJyB/x
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
qeS5ZF7Sc1LR6wsAKMwfjW1/9ZTUi1I/XYjXWszYviNL5VU9Jh2057Anz8h8
X3nww+OT/lPHTjRrr53buhVV214+esTQJ07LfJsOefTUpP+tf7y0Grbp7yeu
M+idpGcyO+P9uteSHsl9r3W6du21i1/nrOuEK9fZ8q2kx7dZb9M3ZJtOfW7L
C4te3zzqtBvXXf/tpMeXWW/TFySLv/hp98t771H8OmdcS0stafK1dKRlr/T6
UQ61hPt/0etKLVz576Huo6JyrCu1t9SvpK40Nosc2sLX0j7sz0k9mlPdu0zH
1V4a8dzEZODdJ2S6r7zLK5OSjntu/099T6lHclzHvOvepTqs/MLwOeckA+85
MdNtOurVi5L1993hX9WwTZdefpHnNBs8K/tdWe7XfZ1smxx4yuraj+ueCljv
LOt+qVmzv+/6w0tJ90y36TeyTff+3cr6Ob27AtY7y3pA6slZ33T9/uVkm0y3
6X+SvslvL+ig7X7b+nf/IanHOnXqNKdnz55zunfvnlltu+22czp06DBL3u/B
Nr5NtR6Wuk7qGqm/ZljXSt1SAetLLVw9aezv2yiDSnaX1L9b+NzVpXpJbZNT
ddl09PCjhz99djJg+vGZ7isPffKMpPclh+pvUZcc16+I6rLF0buOHjbzzMy3
qb5HrwsOubkatunOB6x44LtJr+SZjPOHvsfVD206tQq2adddDlx51JtJj++y
3qbvyTa9YMpGN8p7dq6A9c6yuu0xetUhb37f8+ust6lm8Xte2urWpVddvK1/
Tru1b9++5sQTT0y0xo4dm1mdeuqpyRFHHPH44ou3+W26zSbdl9zuhvs3u/Oy
+zZ+/KL7Nno4q7rmvk2fPOe6Dc43ixW/ztRCVU+p7lKrGlSKUn3Np5tW1B9k
5Evn9x+Y8X6ylvaHGP7CeScXvb55GPnKRb0GTM92e/5vm04dm4x4/ryqaFf/
dtKrkx6nz7pd/VNJl+TDpE9V9Ov9JNlxhZeSbpn3/9DrBnyc9D6t6PXNQ5Js
scSLSfcv8uj/MT/pNbHo9c3LMccc89nhhx+u+SCzGj16tOaQqvjuq6+T7b58
P+mdZFnzpb5Ptr+l6HUF2iBtE3ee1P5S3aRONLb91T5FLlRz7HT/CaNqptZm
vq+s1X/K2Kq4/tXAu44fPGBaDtt0ml5/d2xVXP/qraTHDrrPleU+nZbuN86u
kutfzU26b/hk0jnz61/pNn0m6Xpe0eubB8kea8o25fpXEf3hD39of+ihh36u
+SPrkvepiu/+B0nf5eTzMz+Pz+mMpPNNRa8v0Abp+Q89/vy6sf025hrbh6PV
yPP6u9Vz/48cr7/L/T+i11NVkj/yvP/HU1V0/V3u/xHXgQce2H706NG55A95
n6r47j+SbLrczKRrLvljZtKF/AFka8WiF6AluP9gfNx/ML5Z3H8wOu4/GB/5
Iz7yR3zkDwBFI3/ER/6Ij/wRH/kjPvJHfOSP+MgfAIpG/oiP/BEf+SM+8kd8
5I/4yB/xkT8AFI38ER/5Iz7yR3zkj/jIH/GRP+IjfwAoGvkjPvJHfOSP+Mgf
8ZE/4iN/xEf+AFA08kd85I/4yB/xkT/iI3/ER/6Ij/wBoGjkj/jIH/GRP+Ij
f8RH/oiP/BEf+QNA0cgf8ZE/4iN/xEf+iI/8ER/5Iz7yB4CikT/iI3/ER/6I
j/wRH/kjPvJHfOQPAEUjf8RH/oiP/BEf+SM+8kd85I/4yB8Aikb+iI/8ER/5
Iz7yR3zkj/jIH/GRPwAUjfwRH/kjPvJHfOSP+Mgf8ZE/4iN/xHdjsseisr4j
pfbOumYnXXYsen2BhUX+iI/8Ed8s8kd05I/4yB/xkT/iI3/E91jSe6n8/kZ1
fbro9QUWFvkjPvJHfLPIH9GRP+Ijf8RH/oiP/BHf/cmOS8p3/62c8sfUotcX
WFjkj/jIH/GRP+Ijf8RH/oiP/BEf+SM+lz/eJH8ATUP+iI/8ER/5Iz7yR3zk
j/jIH/GRP+IjfwDNQ/6Ij/wRH/kjPvJHfOSP+Mgf8ZE/4iN/AM1D/oiP/BEf
+SM+8kd85I/4yB/xkT/iI38AzUP+iI/8ER/5Iz7yR3zkj/jIH/GRP+IjfwDN
Q/6Ij/wRH/kjPvJHfOSP+Mgf8ZE/4iN/AM1D/oiP/BEf+SM+8kd85I/4yB/x
kT/iI38AzUP+iI/8ER/5Iz7yR3zkj/jIH/GRP+IjfwDNQ/6Ij/wRH/kjPvJH
fOSP+Mgf8ZE/4iN/AM1D/oiP/BEf+SM+8kd85I/4yB/xkT/iI38AzUP+iI/8
ER/5Iz7yR3zkj/jIH/GRP+IjfwDNQ/6Ij/wRH/kjPvJHfOSP+Mgf8ZE/4iN/
AM1D/oiP/BEf+SM+8kd85I/4yB/xkT/iI38AzUP+iI/8ER/5Iz7yR3zkj/jI
H/GRP+Ijf6BAK0i1L3ohmov8ER/5Iz7yR3zkj/jIH/GRP+Ijf8RH/kBBLpd6
W+pdqSsKXpZmIX/ER/6Ij/wRH/kjPvJHfOSP+Mgf8ZE/UIC/SiVSfaS2c48v
KHSJmqHm9uNyyx/9p4ytivzR744x+eWPKWOrIn/MyDF/zCB/ZLFNyR+R68kq
yh+HHXYY+SMizR9P5ZQ/nko6kz+i/552Jn9gWWPzxq7BuDFuXKsw/OmzRtVM
HpP9fvLUscmgB06qivyx88zTB9dMHptH9kgGPzK+KvLHp0mfHWQfNod9ui7J
60mPqtgH+XfSd0P5O5Z5/tB/tzeTHlWRP+Yn268p2zTz/DFT6pkqyR/jx49v
L9kg8/wh2SM58sgjq+K7nyR9/5c/ZmaePbomLyTdqiJ/JJI/nkw6Z54/9G/U
K0l38ge2NTZrrBWMq5H6ITWuYg154ozeu827JBnx7LmZ1i6vTEp2fe2icUWv
bx5GPHt2p11fvzjzbTpq7oVSk04ven3zcP+rW2yUJNsnHyS9k/kZ1hfJtskn
SZ9JRa9vHmYm3Rf/Ptnuu6y36ZeyTecnvU4uen3z8l2y/ZdZbk+tj5M+yffJ
tmcWva55kQzyeW1tbTJ27NjM6vjjj09OOumkqvjuqyTZ7r0PM/6c/ifpm3yd
9L266HXNi2zT17Pepp/JNv086fP3otcVhdtN6r9Sqwbjekl9K7VlC15veyn9
/Tszpzplha063tt53D7JZqOHZ1pb/2nPZJ2Rvd6S9xwvdUaO65h3jV+p2wbT
Oo3dO/Nt2mnM3kmHYd3fq4JtespKHRa7/dRL1k/+dOE6ybGTsqszr9ggGfHL
lT7W96yA9c6yTl1tvcWuPvVC2aYXrZvpNj1LtumgfVf4p7znyRWw3lnWhLU2
XuLSCZOy36YnX94xOfBPa77vPqdt+bs/QWpSTU1NMmjQoKR///6Z1ZAhQ5Ie
PXp8bNr+7+lppp05f+z56ya1F6+X6ef01MvWT/Y/evXP5D1PbevbdNEl2507
buJ6ydiMt+lpl6+f7HPEqt/kvE3PMfa72NegUgwx9lzHGsE47QOin431WvB6
A6VuMLY/ex51qZS2i6jNqc5w75nX+hVRun7n57hNT6+SbTopx206oQq26WVS
F0uNy2mbVsPnVLfpJTlu09OqZJvqOh6f0zad4N6z6PXOY5uekNM2PbVKtqnW
iTlt0/E5b1Ntl6h/L/oZVIoNjG1/1TkYd4DU91KLFrJEAAAAANqy/0jdEwx/
KnVrQcsCAAAAoG3T9lZfST0j9ZrUbKllCl0iAAAAAG3ZilIHSu1T9IIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAALCQVjIN3zNxCzdPOeXud9JRav0WLlNrp9cl
6NjA9M2lVmlgekP3kGnXkgVqA5Y3DX+edJuu1sD0cttUP/sNfb7bsmVNw9t0
U1P/Hqtp5T6Lm0it1dKFauWWMg1v08a2TbV+v5G/DU35z1tHY+9z1pBSz11c
akn3/2q8F5pus3Lrva6x27wh5f49Ohj72wG0BbqPrPcr+UjqY6lZxn4/vE5S
/5B63th7nfwx9fyhUi8Ze4/MtJuNvSbxG1LTpJaIueAVTPeRbzR2m2rNMfV/
bzaTetnYbfqJsff2DfWXekHq2hKvrfvJjxh7vefFoy51ZdNrWv/V2M/oh1Iv
GrsdPd3Xe8GN120+PvX8vlLPSv09NX641CtS/zL2vqGnxV7wCqb7yFcYu70+
kHpVautguv6t08/ui2762annay6ZIfVkanw/Y7f1c8Z+vvW3YZG4i16x9Dup
90D323SeVPdgumbjmcb+Zr4nNSn1/I5Sj0o9LbVYmfd4TOqfUutEWuZK8Qtj
f9dCur30d3KH/BenzTtWar6xn8PPpH6cmn6TsX+/50lNNTZPeKsa+zd9rtQK
wXjdn9B/rw/c6+r90A6Nv+gV6yhTt02/lPpparr+TX/d1X3GHvvx9PiX7ovp
/lL6uKT+Vk9x03Sb3y31o8jLDuRNf9cfkBoo1Ufqc2P3G5TuM3wjdYexxz/3
NPZ+7zu76Sca+13Q366Zqdf9m9TXxh6P3sI976aM1qHS9JJ6WGqQVG9jf4/+
EUzX7aX3rFxTapSx22YvN22Msb9Nut82O/W6+vdB9zvedq9RTfeZ6Sr1oLF5
t4fUm1LvBtP1753ut3Vw8+g2PcBN+4PUW8b+Ozyfel3NG5cZu4/4S/e8n2Wy
BpVHv5e6TUcau001E38STNdtrJ9B3c8dYOy2+bWbtp+x+yb6Wfw89bqHSJ1v
7L/FTu55f8pkDSqPHvd8yNjv6jbG7k/rfog/nvmyKz3Go/eO0m3zezdtd2P3
L/Szqt/vcH/P+717TuJevy0Za+x6hdZz43bNf3HatKWNzRS/Nfa39Xpjt7M/
J6fHz/5r7N/vLU39v981xv426N+pH0z9c6Mbu3n133KIsd+Dxs6ftBV6fPV2
Y4/R6ja9ytht4c+DXumGtzL22Nl3xmY4pcfH9Lv/qpunQ+q19XiEbvPO7vX0
uBn5A61d+hzhwabub8DuZsG/B3qM+T73WLP9clLnGrsv4i3vnrdbMG60G1cN
x+zT21TvC+O34yCz4DbVY8iPucf7Gvt7/mdjf4tCui+3rbHHl/W40vJxFrdV
SG9TzcB+O/Zxj8N59PjQHPdYs53+Zuu+2+uNvI9Ov2GhlrT1SB9f72fqtqk/
ZhBmXH9sTg0z9tyoZr2vG3kffZ3rF2ZBW5H0NtWMoOuv+cPvS4ftA6+Tet89
1u93T6kdjc106eMLmgO/kNrbPadXzAWvAPr9/DQ1To+B6f19hwbzjAqm6zGx
I9zjjlKHGbsvp8fMdF9Q97P1WPJkNy7cF97f2M/0XVInBOP1uJDmbP1d0f3w
O039c1htQam2QfrZ7B08DjPfYabut0G3r2YQ3Y/W7/7awXx6TlT3q5eKubCt
RLltOjR4HJ4P+bmp2yfS4z+6b9DR2O0XtkEZYhbcZwDaIv176LPEeWbB/bWL
Tf1j+UqPi7wcDOtvmH5fwu+Q/mbpsZKNoi1p63GpsectlB5vfyc1/XRjj22E
rjT1t2lIj+vrfshykZavNTrT2HZYSs8Z/TM1Xdu0fZQap5/ndKZL08/trxZ6
6Von3Qfz5zJ0n+6D1PRjTelzHd+UeC09Dqr7b2dIPWEa7lvWlun+8n/dY/3e
prffEW5c2D7t58aeM1k6Na+2jfVt4PRz2iPmglYA3efX/dmhrnS/SzPCt6au
/ZWu963Bc/Q8ss8sPuvNk5pg7Ll5bVt5r6k7RuY/05oB9XOpvx3+vOdVbtqm
blh/P/Tzq8eG9G9XQ331WjvNvLrOmhs0o+k+cNhmuK+bHrb5G+bmC4/Vb+jm
0/Oq+hs91FQv/3nU9mkru8dbBNO7Gfu52ioY58+JhttZv/N63HcXY9t2jjf1
27wBbYE/Pud/M64xC7YB0v3nN1Lj9HhxuK/sj/GvGIzr5MZ1jbWwrcTqxq73
Hm74SrNg1hhnbHvRkLYJKpc/9G+y7rNUa/7Qz5Vu0/3dsLb1SX8mdb8vfVz+
HNNw/rjA2O1ajf0l9Vi7btND3LD+jUt/TvUcZvr49EGm9PkPPd8x173mX+It
Zqui50J0/Y92w8eZBb/nPpOEba20/Z8eXwjzhx6L/sw9XtS9btj/qS3w54m1
TZ8eo9HP3wdunD//oBniguA5mhmedo+3cvMOcsMbueF93fA6bljPMaXPw+u+
8lfucQdTv/2mccP7tWy1WgU9n+bP+2qu0O90mCt0X1n7x3UJxul+wrep+fR3
RLel/v3Sdoi63c7IZpErnn5+p7jH2xu7/dL9QPXYxHbBuFL5Q49P6vGI+43t
S6ffD2173NB1VoDWxP9NuyoYp5/1uan59BjyK6lx6fzhj6WsGYzTY3X6W7Vx
jIVtRfR3POz3ov1N08fqTzb2mF2I/FGe9lGYFgzr73N6m2p/g49T4xrKH9qm
pS0eU24q7X//UDA8ztS1C/J0P/o/qXHl8oe2DdScqO3HdZ/7tihL2brovvKs
YFj7pqbzm+a9f5v67bbS+UO3pe67nGLsPoden8L3wwv7r7Z2vzE2AyznSvdl
9fOj59cGuHl0m54XPEevn+Dzh353dbu0d8Pab0G3m29/r+2E9LPq84n2eZxu
7G+J/k2b4cb74/8+32nbOc1+By3k+lUq/fv9VTCs21rXv2Mwzm/bsE1DqfyR
dox73toNzNMWaZsHXW9/zZ2ebnjTYB691sc3pv41P0rlDz0OnP67pfOcFHF5
gSLp7/q01Dj97fguNU6vdXN/apxel+jFYFh/a/T7EV6zRK9toucay13TpS3S
c6YPpMZpO9pvU+O0fcCjqXEXmvrbNKRtnj8rM62t0+sczEiN+7lZsH2sttEo
de4unZ2V7yM9IsLytUZ6rYQ5qXGl+n7p38F020vNwo31/wj7P1UL3a9NHz/w
7bjDcx1h20xPv99fBMN6zFSPN+h+tn5+33Kvo7lul3iLXLjfmQV/1zRL6L6x
zwx6DYnTg+naHsVfU0LPkeh26eiG9Vh9eMxez4fo/p7mEd82RjOFZpyJpq6t
sU7Xv3t93LD289XtH54PaSv0mIz+PQpzrF7bSrfN9sG4A8yC3+Ed3XMbOg62
uXtep4Ve0tZDjxOk23/4PrFDgnE/Ngv2ie1q6tpsefpvlD5vqucHL420vEBR
/PUN/d9Kbf+pn31tj9zR2O/Cb900f15jVDCv/n3Q3PKue56/JoOeI3zWPdbj
eLqPcnNG61BptK2nHvecZ2ze0v0N3TZ6jkn7lus2HOPm9X2n93HDfl69fphu
U/0N89t0cTftcPccbS+XbiPeVunn7HFjj8nrNtLjSrptdJv6trX+mrtdTP32
E36bXuGeH25Tv5892g3rtGq5rpiup57z0GPyuv+hny9df/3M6vbW7TLRzev7
o/vrXy3h5vmdqftbq9tZjxUfaOr23fTzqcfu/DX12jrdBnrtA21XodtHP59+
m+q20G11hZvXt5U/xg3777fv67u2e45uU+17sJF7zmBT1x6oLfXz1esGpfdx
1zX1jw1oBvPXvfPHlJ9IDfs+5j6P+LZbm5i6/v/hdVaUHiua7x77fxffLmZJ
U5dV2gr9XGqfGF2vzm6cXv81/Pvtv7P6GdSc4a9d7n8f/DnjrUzd3yF/zUel
vy9+u1ZDm1bdZ9K/QWE//nCb6rED305Yfz/1d/dON+y3qb+uiuY1/3fI96fd
3Q3v54b7ZrESQI70+KV+lnV/WX/b9RiQfkf8MSO9drceC9Jj8doGcVzw3FON
zeX/dtP08W/cND3P+I57PT2+94CpjmtfKX+dYr32ph6D122gbUH99Wq0v6P+
nus21eOcpwTP1T7A2uZZ2w7pNtXf7mPdNL2O079c6XE87R8Ztpdry/zvsmZa
PQeix+H18+XPsf3E2H0+3aZ6DDW8V4W2u9fcodvrS/d/v02fcq+rx6v174Nu
72q5/pVvx6PbTM9rak7QfTt/rFn/3ulxAz02oe2uwntV7O/m1e+8bvf5wXRt
n6+/Cbr/ovsxuo3Dtphtmd9X0G2p5+n0c6rbaaSbrtfN1M+gftb0Ox7eN8l/
v3V+/X7r70Cp7/dKbnpbu66pHleZnxqnnxttb7mTG9a/S/qbOc/Y68c+YOr2
i7WPgm4Xf60D3Yf70tQde9dc8akb1v1l/cy/6F5HH9/h5uvonud/r3VfUf+t
2tJ1uf05Dl0v7Ss+1z0+0k3Xv9/6OdR9Af37rW0e/H60trvyfRD0u6/XAfH/
BnocR7/7c9zz9NhmtVx7wvdL1L8/ur10m+q2+YObrufV5rnSv13a5sFnDH9N
Y91mum+g3wP9XPrrduv1MLX9iH5e9Tf58CxXBMiJ7mtouwo9JqdZXNsC6fV1
N3fTl3fT9dizXs8w3I/4nRuv/Uu1v4JeJyQ8R63txfV3XY9PDctsDSqPnifS
bab7Fn6b6u+RP86kxyyvNHbbaf+0sE2tXg9nhnu+blPddv64m25D3cZ6Huki
93hCdqtRUfR4ut8muk31ujd67N7319Bsq+ejH3fTw35+esxet+N1bh79TPpt
qtfJutrYPjrT3fPT99lrq3R/TbepbhM9h6nXIdV7W27rpuvfPs0Suu30mH7Y
dln7Q+vfT91u2lZQt5u/hqkeN77ZTdfPaPq+Zm2ZHgsOt6luN92mA4J5tD2F
blP9XQjbfvvvt+7LNfT91nMhes2Ftnb/Qc3D6fXVvz/af3nzYJwer9FjENrH
S3PdYW68bg/dLiu5Ye2XMNHU9U/Q7abb3uc2zdD6GdW/fdpH3V/3bmX3PN9v
RI/da59qf0y7LdB9ZW03rX+j9NrE+tunxwn2D+Y52o3Tz2rYbkiP+ehvr+4P
XOge+z45mu38d1+fl77/Xlum7dB0e+rnSbOsblPdBgcG82g+022qf4NGBuP1
s/WAsf8Wk9xjbVvo88e67jX1d1Z/X6rp2vsAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKDK/T/H65F1
    "], {{0, 363}, {800, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{800, 363},
  PlotRange->{{0, 800}, {0, 363}}]], "Input",
 Background->RGBColor[
  0.9990997177080949, 0.937270160982681, 0.1552452887769894]],

Cell[TextData[StyleBox["As you see since 2012 there is a huge improvement of \
the detection algorithms performance.  ",
 FontSize->14]], "Input",
 CellChangeTimes->{{3.706919132647976*^9, 3.7069191619657*^9}, {
   3.706919270265812*^9, 3.706919312138023*^9}, {3.706919613473031*^9, 
   3.706919638819906*^9}, {3.706919698960408*^9, 3.706919713207923*^9}, {
   3.706919825460321*^9, 3.706919850133402*^9}, 3.706920453711276*^9},
 Background->RGBColor[
  0.9990997177080949, 0.937270160982681, 0.1552452887769894]],

Cell[TextData[StyleBox["Hmmm. Ok, fine! So you mentioned about Deep Neural \
Network? How does it work? ",
 FontColor->RGBColor[1, 1, 0]]], "Text",
 CellChangeTimes->{{3.706920462180129*^9, 3.70692047362211*^9}, {
  3.706957349618102*^9, 3.7069573711855717`*^9}, {3.7069598657558203`*^9, 
  3.706959867189808*^9}},
 Background->GrayLevel[0]],

Cell[TextData[{
 StyleBox["Generally, this model have a formulation that can map your input ",
  
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox["x", TraditionalForm]],
  FontWeight->"Bold"],
 StyleBox[", all the way to the target objective, ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox["y", TraditionalForm]],
  FontWeight->"Bold"],
 StyleBox[" via a series of hierarchically stacked (this is where the' deep' \
comes from) operations.\nThose operations are typically linear \
operations/projections (",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["W", "i"], TraditionalForm]],
  FontWeight->"Bold"],
 StyleBox["), followed by a non - linearities (",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", "i"], TraditionalForm]],
  FontWeight->"Bold"],
 StyleBox["), like so",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.706958110648179*^9, 3.706958158431809*^9}, 
   3.7069586444881897`*^9, {3.706958725723431*^9, 3.706958781470422*^9}, {
   3.70695883517378*^9, 3.7069589508940573`*^9}, {3.70695898181249*^9, 
   3.706958982384112*^9}, {3.706959441906927*^9, 3.706959458961301*^9}, {
   3.7069594932239943`*^9, 3.706959537923739*^9}, 3.706959683969543*^9},
 Background->RGBColor[
  0.9990997177080949, 0.937270160982681, 0.1552452887769894]],

Cell[BoxData[
 RowBox[{"y", " ", "=", " ", 
  RowBox[{
   SubscriptBox["f", "N"], 
   RowBox[{"(", 
    RowBox[{"\[Ellipsis]", " ", 
     SubscriptBox["f", "2"], 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["f", "1"], 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["x", "T"], 
         SubscriptBox["W", "1"]}], ")"}], 
       SubscriptBox["W", "2"]}], ")"}], 
     SubscriptBox["\[Ellipsis]W", "N"]}], ")"}]}]}]], "DisplayFormulaNumbered",\

 CellChangeTimes->{{3.706959244398361*^9, 3.706959434508315*^9}, 
   3.706959699843068*^9},
 Background->RGBColor[
  0.9990997177080949, 0.937270160982681, 0.1552452887769894]],

Cell[TextData[StyleBox["The one of the most traditional and easiest to \
understand DL architecture is known as a multi - layer perceptron, (MLP).  In \
that kind of network every element of a previous layer, is connected to every \
element of the next layer. It looks like this :",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.70695977050128*^9, 3.7069598096309*^9}, {
   3.706959852834248*^9, 3.706959857485626*^9}, 3.706959946860271*^9, {
   3.706960004363846*^9, 3.706960120567897*^9}, 3.706960178134515*^9, {
   3.706960211705768*^9, 3.706960232104039*^9}},
 Background->RGBColor[
  0.9990997177080949, 0.937270160982681, 0.1552452887769894]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvd2vHVd63vnOx8VcDq/m9gz/AgG8mRujzwC6GSQQhAx0YUgXJ8GEgSIg
w9hjEC1gZg40xIRKbDGjyTRD9HSYjGTRUTfBQY9kuiE7pGy5JXfUodVOS922
ZfVXOu12InfbzofjJJrzYNcP9dS716pdtXcd8pBcD7B5uGtXrVq1vt5nvV/1
X/+l//EvnP1PI+Kn/4ujf/7CXzz/3/7UT/3FT//3/+XRlyf+2k8//Vf+2l/+
H/67v/Y//eW/8pd/6r/5S//Z0cH/6j+JeOTo/P88GhoaGhoaGhoaGhoaGhoa
GhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaKjh99Hmj+4zhzNHniQ3n
vNqVc2bL35fA1Oc5CViyHaY89xJ9OPWcXXHS+/HU0efR7nNqoTKXmoutD6fj
OPqxoaHh7kFz95MN51w8+nw8oaxPuvK2/X0JTHmeewXVTW2J/Fi67LHnXqoP
p56zK05qP56NVVs+2v3/w1iuLZaai60PN0N9dz5WvEU87t3YzO8bGhpOFqau
MVP2J42/TINk0N3mL8ISfTj1nF1xUvtR/ebtKBk4hRdOwVJzsfXhZqgfL9r3
45iTDQ0NxwtfY6TzLemU0bOWcMauKa2Jm36n7HzfU3asVq8Samvm6e630xPL
mVvHObLguPlLqb126cNN59Tah9+W6sdd+pC67NqPH6frl5TRu8zFXfvQy34Y
5uLpdH/pRK9sUZ+GhoZ7B9YY7SOf6D7v2u+a41difR3SWvFqdz52EV8TN/0u
nO3KfrQ7j70t93xjpF6bnsdxMXqd//no16lHu3u4DUD3/jj6vdlYHbEDXezO
eXVC/ajPcfGXUntt24dTzqm1j993iX6s9SHn3ot+pF4fzjh/DNvMxSX6UHhY
5+KZrh6vRvOBaWi438Aa43uRd2O4tuV1SPP841jfP7Embvo9ut8+ieGaobXn
/Ix6jT2PQ+Wete+lNTLXY04dWUOn7iePk7/U2mtuH045Z1P7TKnXpufxcmt9
GHFv+vFMV4+l/GDnzsUl+jDi4Z2L6HLgRcfpz9zQ0LA8SmvMGzHOX2p6YdbE
Tb8LWnc+tPPZF7K2TalXCbV7P9Hdk/2yl3Mlhns81r4pddyGh9wt/xdvr7l9
OOWcTe0zpV41lK4b60PhbvbjqVhe5s2di0v0ofAwz0VA+Q0NDfcP7hV/IXZj
l3pNvU57RffVKz0fPph+3pQ6Psz8ZVP7TKnX1Os29SHX3I1+PNWVjy5g07NM
xb3iLw/bXFS/yV7kOhrqulRfNjQ0HD+24S+a/3nfdCqG9qOx3/mefSF1bOk9
X6kc6pbXUX18TZtSx/uVv0zto039PNY+U+o15Xmm9iFlH2c/4kvieoCl/D7n
zsUl+pDvD9NcxO7n5Z+NddtVQ0PDyYX7A7J+4Nt3JXo7Mue4XDrTHcefL1+3
6XfKeLUrl7wa7jM4Vq+pzyPg18c6SQ6W7KdRWv/G6qjj+BdOsbef7s591647
O3rFNGxqr0/Fdn045Zxa+0yp15x+nNKHEcffjx939fLPElx027m4RB9yzsM0
F/Gd0b3UJh9Gy//S0PCwQWsF8qq0d9n0O8ePe9/DOlcDe+mx6x/UvdmUPtp0
zknoQ+Fh7ccl+pDj97of71Yfev7dhoYxTMlffhJwP+S9blgG+BBGDPeIDfcX
Wj/e/2h92HCSMTV/+XFhjp6+5vPW8GCB3A/kEW+4P9H68f5H68OGk457OS7n
cPrGXxoaGhoaGhqEUt7rKXmp/ZwzhXNK5Z6JIVeS7mWOPajEX05C7vKGhoaG
hoaGu4dS3uspeak5R77h/s5X3v1eKjfnxn40lTFFD5P5y0nNXd7Q0NDQ0NBw
vCjpNDi2KV92ftfGWTs2NWfCLvqXk5i7vKGhoaGhoeH4McZfHFO4B/mXzuxQ
xty6nqTc5Q0NDQ0NDQ13B0vyF3QaNf5S0uFQxhQdx0nOXd7Q0NDQ0NBw97AL
f8ny/3z0Mv9MKiPnxqYMtzfdr7nLGxoaGhoaGu4eSnmvp+alhnt4zmn8XwE+
wP57fj/Xu9HnnJ5a15OWu7yhoaGhoaHh/kC2/dTgOanHcmNvi5a7vKGhoaGh
oWEqSvFHJwkt73VDQ0NDQ0ODw3PEnFRu0PJeNzQ0NDQ0NDQ0NDQ0NDQ0NDQ0
NDQ0NDQ0NDQ0NDQ0NDQ0NDTMhXyjFIvOO6VK7/5sONmQv5j6jj58IpoP2f0I
zT2fiy0PRENDQ8M6eH+DPryzQR/FqH3cHWsy8GSDmEL1l/IfeU4l5V0q5bdu
OFnQHNNcUx+Sn4t30DI/T2rMRUNDQ8PdhPZ4WidzXkKH1lStmVpTn7hL9WqY
DvpHsm2sf7SXJ6dj46InD+q7Tf2jOSoeqjnbdKMNDQ0PK5BnUzkJ75xo+7+T
A8kz+mQKJ9E5r3bXNA5zciD9yhxOorwSmrtnN53Y0NDQ8IBB66TWv7k2dcm8
Tfv8hrsH3vExF9iVGu49xEG2ySW67RxuaGhouJ+h9XIbuSfwTvC2f7+38Pet
bgONgcZD7y3EPfJ7aOeA99I1NDQ0PAzYVe4J+BQ23BtgN9pl783+vfHQewf8
rHeB5nKzIzU0NDwM0L571zgUybyPF6hLw3R4n0leLcEfJT+bDubuQXzT+eIn
C5Sp/mu2wIaGhgcdS/KOFgNxd6F9Ou0tebXEntvfk9pw/BB/ob3FO5aw/bS9
RENDw4MKcplF93epvdrFaHv3uw04jLjjEnYfldX8J+4uNAfJ67KtD1qG+rD5
8TY0NDyIII8na+cSUDkvRL8Wt8/xfq52f7969HlrQv9MxVsn4Nkels/l7u/b
R5+bsVw+wcZBGxoaHjRoj07+8RtHn1+JZfUvzW/w7kHtfS16/csS++2mf7m7
UHuLt2jeqD+X0r8sNR4aGhoa7hacn9T2fFojpSe5FKv1cwmfQUHxLxeirZt3
C+e7z2vdZyn/F/Ha9l6BuwPNledjpYf5B9H8XxoaGh5cTOEn+LeM+UMgpw5j
ZS/Y1W+F+N0z0fuAoo9pfGZZYPN7J1Y2JO3fz8Uy8UeSn89EH8/Eu68an1kW
vBf187HSoX02Vn24RPy6ym3xRw0NuwFZq0+LS5mGpfjJJrwRvd1dOpNt8n06
tF5eKxxvfGZ3wFfgE7Sh+l9tLv5yePT5w9htnuk+3431/kHWNj6zPWhD14HS
V5rPd2KlD73e/b4tWj7shobtwbvj/D3F+fvDzGXuFj8pQe1Of2iPrfVS/EW6
a3w2t4HqqzXz8ejl61gdGp8ZR42vlPDF7txbR5+D2J6HIvcej75vavdsfGYz
xvhKxk8ffb509Ll99Pl0rNbJbdtT9/pyLOdH09DwsMDf51eaq8xp3qn6IOJe
8pMS1OZay8gP4vf8h7GSf7929Plzsd3+nXznsmN4TPYmHgMan5nHVwB5Q2R/
EA/9Sqx0aq/HdnNL971m17IPGeMxXpeHnc/M4SuANpbvkuxH2kvIpvuZ2O59
mmrzHx99fjLaO6kbGuZA81Bzbsq6xTtv70cf+ZPGT2rwtbTUxvpdOpe/HisO
o7Xz78SKw0yVf3pOcRfZL87Y/cAcHgMeBj6zDV8B8BZ9GF+Sed8++nwtVvt4
/Z2a/+N0d67Ggvwv1P6v2rVzeIyX+aDzmW34CqBN1c7O+b939PnNWPWh+mTO
u+BV3o9ixWd5f5LvFds7IRoayuD9OXPniK7b1e9iadwv/KQEtw/V1j2tu54j
/mePPn909PkgVuunuIxk2di7/JBx34je7/CN7jj58LxttuExfq/7nc/swldA
ibdEV5b4488ffX5w9Pno6PNb3THJrvOVe6GX0/niP+jn0NGpnt7/2/AYv9f9
zmd24SugxFsoW8d+8ejz60ef944+//To84VY7QlfHbmX+khz9fXur85/OlZ9
733ZfGIaGtax63vj8CO9W7if+UkJY/ahjCz/9JyyPfz9WK1334+V/vn3jz7P
xqpvPon+nXKvdudpnVTMp3wOX+/K2I+ew6BfyzJqFx4D7gc+swRfATXeglzC
z0F+n/K9Vf/8i1hx0l/tzqHPKOfD7qPfFMN0I/o2hcNElN8lsAuP8Wc66Xxm
Cb4CarxF0By80p2j8v/Z0ef9WOlS/iRWc1K22exPyNx8I3peovJvdOc9GT1/
jeht+65ba2h42KH5s4uvGP4TS82pB42f1LDJPuRAJ5Lf94dswlau9U3r59dj
uFd71D7eZlorpa++0pW/Fz2HCatfqT678hhwEvjMknwF1HiLgP6Lduae2r9L
3ol/isv8ZrqmFAuI/uaVWOnRzsaQw2R7EliCx4CTwGeW5CtgjLeE3Seit7/+
+aPPN48+/zJWfel6E4/nLJWHDzb6lr1YzWuPq9c9nNc0NDysQPeyK2pyroSH
hZ+UMMU+5HAZ40DO839k1OeOPm/Gyp/w0oTy1cbym5EN6SB6u5FzmJI9ya9f
iseAu8FnjoOvgDHeEtHLeX7j/swH7dXFWzQvX4tpPED2wkvRjy18J+iXkj0p
7LeleAy4G3zmOPgK2MRbsBdxP7gL7Xx49Hk5VrY9ccvLM+6t+4mfqD/FXfZi
NR99DuLz1Px7Gx5msMbsCs058k4+zPykhDn2IQc5rLJMce6jvkMWy2ZO/Mmn
uv9PkUforPV3P/p12DlMzZ4EjoPHgCX4zHHyFbCJt2R7UVhdzthvPxMrW5Li
oBUj/8qEe6ODeS5WYwNZ5xwmYvzd1MfBY8ASfOY4+QrYxFsEtxdF9NwluuOP
dX95t9V+rPpzTl2xL12Jfl3V//M7Ppt/b8PDjCVljvwuHkZ+UsMc+5Aj++eC
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
mSVu4Rwu699Z9/djyBfH+MwUe9KYvYh6OLdz/xXnDdmuVOJ0bjcStDbdip47
jdXdc6IRPyTdyOdjuq5JZUkPQx7svRhymJrNBZ3QK919w87PsqY0Lvw5GIdZ
PzPGZ6bYk8bii7JOjzGzX6irc7SS3jSvT/KNIz/PpcIzeN3dHqpjssfejpVe
NMfnTYHzhpLfLfv1TW13uqv7v40Vl8rxS1dis6zj2ZZ45+oU/150+n5Otqeo
TT5J17h/Cvd71/7vHDDL/6zz2aX8EjJ/KfEZdCqZ02SuSvucScceRv2L5vES
/j3I9nxMthDezap+8fxsyE2tm6W+L+2Patjk3wsH2MV/Akhuo5Me4zCud/D4
oXPd9Q6Xf5xbk7+u90G+4nPIGvMzMW9vi9w7H70Mypw/8z63fX0YPecq2ZGE
16N/307JdyH7w9RkU7b7ltbwkr2oxlccNV9d2vlmrLdrjnUX97hu3/OaV7NP
kDtf4+tS9/8XY7rMgPs/ZvfIfom5TXyM4itOfUuc4Vx3Xm0ulXRtm/jMmD0p
646mjIkxX13WnFcKv5dsuafsOi8n23BpZ57/1ej1k1P3OqX6EvOM363Xw31M
ptjspNfTuMzxS2P57RzYtXbd62IHG7NLMSa8PfNcxZ7k9tQ8jmg/bzd4x8V0
bYnbb1N+hvsDZ27idWA/4O1S4yK5fVhTmePY7B5035eabnku1HayA2T/E/LH
iqPQltmeMtb/mzhCRvbv9b3XrijJ2Jp9SXU+jH7/7WMp+x+X/AUPC+dRbrY5
cP0u45VxgJwhrtDbLduTfK+gdng2er3389Gvj8gDydbM2xyl9s2/l2SX5Lxz
Atr8kdjMVxw17gJ0r2uF8+Ck6DLeSL+BPA69fbH7YAPK/hVT4DyUvim1aZ7z
1Be5TPvxLil+Y329FuPtOBaXFFHmM9ghfczgkzVVJ0fZY3Mdexc82n0KnrE6
eY5GPy9zLW/fM3b9z8Q679oG6B3Qa5dsOWP+vQ7sMtm+pGcl/8EmoPfZNjYJ
TPXvhT+O/e59UTvHke0+Y9im/Dnw8kvYpNfZ1D4POuB/S6Bks8Q25Pbzki19
bM2b6mcCWIevx3K5CLJfTume7BMko+WDUmrb0nP6Ple+PNr3lXQnORaGOci+
fReORpsh92sxRtme5LzB968qRzEYfy+G6+oU+TInxx2yTTLp97p7/lpM4yuO
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
wF+uJD/9XvAW2Qku2Tm5b1xO6jmUQ/3T9izSk12PMvT7Y7Hu5+v3km/GO7H9
2ogfRmmsZL/c0j0eifV36fxyrOJlXLfjdc5y8HZ3zgsx5BY5z8NY3zgYTzX5
h7yEt9zo6nDKrs8cxnNjyC6IXZhn1u97hXvxvNnPN9cHX+FtcCbKPrXUl7F2
EPU1QfU/tHM1RhU/zXxxjlFqH9rSeYzrYsKu1fEp+VJ4p80cbg5fyf7Rpfjq
DDgHbTDmczw1vx0cXfFLfxrL+680/96GMbBnn2LH1NgUz5bvJvzB80bUxphk
APGt2ge5PCz501HetRj3z50TXw3gVeIuem8eub6n6G/Oxub8kZdi3U6V7VD6
Tgxyyd/T5eXV7pjLxZIOZI4dGp5Sin1/tru/PofdMbdBUEfqAJ/F10B99o0Y
tltJb+91L/n5ur2o5n+6Ca4PcntS9stFn1Arw9tVMbffi75/xI2ei+G+vPR8
zmPe7H7jOSP6/fqcvQTX5DG0FysfeXgL98oc2v1hsr/tR7Eul2vyLOePgcdk
e9Gc/DAgx25hT8p+uTW9rZDHH/E2f7e7XmMXf+DSWPN68+56nc/7M7x+U/in
A5+POeuY57dzTLHlcD9x1G8WygDwpKn10vni5/8uVlxmbK+1DdifNf/ehhKy
zhp5y14R/aNyk+VcE8yBMb9a32+Ky/j7A0rxljr/Zmxe76bEV/tz6PNcqmPJ
vzfrb7R/JHalxG90//cK5WQ/H/wES/LY89MJB9Hn45MOAnu+rmM9dj+kufC8
Vi4PsB/4s9DfyFxiTtUOOf+afsv502v8KuumiD96J4btOJfDlGxZsmP9IIbv
VRzjwB5vRD09p7RwNXq7CzF2+IL4Gs7/VSeNvzej3wNgj90mHt5tAe6X+0L0
843n4//4/Pg7x/T9lpWrc+H19JvHI2VkeaXr1I/Z7jaHw5T44Omunv5eRdcb
ZuT9UckWhR7wMFa85mr0a6DXwe1+N6LP6ft89PNnmzhqeM+c/sd/N8+Hsfhq
h/rxx7HyYdofqVfW9Uypl3JqqI9q8Uvbovn3NozB973Z95PxojmGzRide46j
LsU1Zzl1w65TWZetLNfjjO2Nvd4l+0PJr7hmdxrz7y2to85vtI5pzfhSrPOb
bEfmPSxjtht/pujqTJ5zeIHLvW3nMte/aOVFDOXc6939tE4T916LxcjyxOtZ
07N5OR5flPUxlDuFw2TuUtK3cL9andy/lvGcY03we8k6AmKY3oyeLxOnxf00
Pv5mrOyXu+bVgleV8uVGd294+DvRv88p67Yyt9D5n4qhDmXMh8Vjw5lHJbvS
FA6T51xJ38I6UbP9eZ1cd+PPQH3z2NLfw1iNefZor9v5+If9bKy4lPYZYz4l
m4CdZM71Ob8dGIuvduBf9mdRX2M3xTnVynW/qFL80i5o/r0NuwAfEs+X5TIP
XEzH3M/R94VaBxTH+cdRXh+n6CLd364WP+S6ohpq/r1jvpaSB+fSb7r+szHk
el+I1X4HeYLsK93D113nfSpL71nRXp9Yz10AXwRw2Le7esp39UX7Le8v3Zcx
72l5PuTLmB3ppVjJ+9zOmcds4jDOXTJvcWjsSl7sjZST9Ym12PYSt+WYyv9y
9538ALruM9HbBneRexE9D3Wex3ubxFcuRR/7FrE+n7xNnW/n/Afso2ucT/zu
O1Hum8xjxjhMtk/mdcTrrTb9uUo5jDfnOsRLg4vR56DM9fb+Vl9pLmv/oLnx
bPd/zf29mPY+xU2o7Z/GgCwv+RBO5R23jz7/POr5IBijc32NPb7a7bZj+fHm
lN/8exu2ATKF2BPW+pItJ/v3+toHv2B92o8+f2n2DdkUd4n81NryXOH3KXoc
gNzCZ68kW+A5T0aZQ2R9g+bunejXB9ffsH+D5+j7Z6OPT/Y15TBWeyZ0zkv4
tPGOVGQU+g+ey3Ugpbh35E2W754/De6Yz3G919ia5jymJm/gLmO8xc/dj7J/
leryePotx5qo7NJ7i0p809uT3xmrNwplbAM9z0sxjA9ynV7OBVPqB7XZhViX
77QBuouDWJ9L/LYf48/jPKbEYRhLY7zF78mYLdmZrhR+y7E7muO1/MQlPSPt
+VNHn78dvR3140od5wBfxLnI+e28vLH4asBacmPkfM9vNwcln5wcv7SLfan5
9zZsA405+a+xB3VZVdLnIruejX7NkozQfs3lB3sm+DrrMe8jKc0Dtw9FDPUs
c/0mHNq7vhLr70DxfVLNr8PrqrrwXpfSeV435IyOSc9yK/pn/FxXH62Zes/Q
h3MfqAK1T4nbUY8sk7M/b3Tn5dz5ea9LO1y1azIv3eSH7Hnw3rJrkd+beEvE
Opd1Hcvp6G0xXo9sB7we5f7065wzuBzWvLkZvX1x1327kPVoIOtQztjxfD5z
5Z10zGU+1/k7/9xeRF029QFz+wU7V3VjnmyyDWTbn+tYBPxTcj97W4u7+Biq
1d91zP6c6LbOpbrsglqO/02o+eO7LWcM2KLYG5T0SWqTbXSFcJXSGryUfeli
NP/ehnlgvLFnz/u7PF7Zh38z+jWKvBO53BJPwUdSsY8l+5ADWVnyi5kCX+vx
730+lVfTF/g6l/1AHJkHZJ5QstUcRm9DWmrNrOmmXHZNzd3zQZTtYH6O1v3r
UbYV5jaoQX2g8SD/U733T76iU3TlNX9d9GmKR7uUfsvvDZCO4lqhDG8Tf46S
bY1YtqXeiQv3KIF5ktu2pEvTOWrLC3asxEfURneirhedah9QubIb/r+xnh+x
hpq/Lsd/MVb2suz/7c+6F+WcJdke6JzH2071Zk+VfdV3wZRYhBrQT2bQ71Pi
qxlDtfy9+r5NvjrsXLUxsYR9qfn3NsyBx/QQE1Napx36/puxkhOsC3ktKskw
7vVLR5/fifW9VIbq816sy6IpyP6GKouYIWR4LQ+u6+apY0lOlGRC5kb5+U5F
Hzvh74DeFSqH3CT5Iz0BNg7e04ht7YPo46b5yIf5e/Yd/fpFu059rxjLX67c
M19T+9yMPu/EN2K4d6+Ve6fym+r1w6PP78fQhslzehk/qNTlpn1/O/q+yvdE
N6D7eMzPrnhr5Nl4hmsxbNtbqd6c/6+t/jyD97WeQW317VgfA3xK4yN/1Gca
D/8qVlz02obzqcvVym96tj+O9fHzdgzHrmJkPj/STnkc3kx1u2Hl6vhSPhi7
8JdNupYp8dXuS84aluP6ie+YC3Q8m7jerval5t/bMBUaI27bKcUwEIuY/WBY
2/ZjXRZrrLPeZPvQme7amp+u86ip8dXA6+/+m24TuBHje939GNqssg4CnanD
fVtd5+9+Mj/ffdQuklVL7d1Vv02+IkLmlSUbhKBnd94IL8vxRcTnlPpmzAbB
Po0YZF2v9kCnU9K31fbsgtr3daszfc7/3WcJu48j79lzTr8s22Q/Iv53qb3i
pneyuu/8xXTP/F2QTeR9O55tYXB32TNvFK4XxnRprlOl3VVHfHhqexNdM6Yr
xE/Z7UlZN3wr1nMMR5T9t0o+9JSjPpQPVMn/ZltIZosTyieNnBWMRz33ozG+
ljGmanNnU3z16cLvOX+vMDW/XQZ+xVPtPNval5p/b8MUuK3I1zefP1rz78S6
DEc26HrWQPd70frwWJThcdDuB6P1L+tcavHVpTKZVzkOyXEjyu+Gw6bhchI/
RZBlnb5rDXQ/l9p7LOFT5LPd1lae8XF3v9p7WVx2Zb1TSbeE37HLDN4V4PU9
H71tbooNwv1yc4w09pNaPt+xe9DueXw6pzlj5zmybPPvtVgdlXkQvf/uEjZ7
xgVyrjQuvF6lOudrNCadh4s3vx7DduQZndM4xuKg92N97Jy1T+YxNdsfXOX5
KPuqsX9hjGSf+Igyp3O+l8/Xb5q3anPexb4rTqdyTke/fjD23ujOGeM32k+O
6Tk2xVfX3i+AToR1b05+O8dUn5x8zTb2pebf27AJ7DFdh6DxpflNDEcpvtpl
xv8Vq9jiy7Eed1ST0SVdj9tBcv6ZMT9e/AGzf26Gl8s1PLPKv5Hqez16/Yme
7bvRr0X6exirOOj97vxN72fUNf9b9DqgXe3u7K0EYpyR/85nvO8yNyj586rf
9qPPR3wryuslMWyZ8/rv0gX4s2buAryPPV5J7V56vwVjM/u3APIQE2d0tnBe
Hp++rvL/UzF8p9Kt6H2Qd8k/6MA/Mt/L+Yz7ZWXeWcrPo+el7XWddC0le+wT
9inpuFTOszHUZZbizv18j4FXmU8X6hfR6z5q+YVUp+vRxxntF+6b15FS/DbH
uZ/6Tvuyvxt9nM+u8hF7VI1rZ2ziN8rr8k6U9Teb4qt1fs0fHB+Tx2N+fjvA
XJ2TN9zrMNe+hB2s+fc+2CD/h9uFp8wlxiHxrdip/dpsy1FuLOar7vlXo9dD
eH3GeDrzMuuVc/zSWD481qtSHt7SefmYYp31LoLfs/vpr9Y3+Mt+lNd2b9/a
fh2o3l+Jfg+pMnfVwWj+vxxl+e18RrLrVpTjkYQ8TtDBUNcoXCPkPH3Ok852
93T5XuMuIPNU5f0jb7LHgPt7C0pyFFmvcvCByH1Tembq/0z0Y7ukE5F/7N/r
6vq12G1dVfl6d3aN0zmfUVscRK/LK9XfgS3wt6Mf/6WxwthGn+pxTsjl/e7Y
GHcB2Y4r/d1Vuzdzhbm8KQ7wne5ZLsd6nu1cF8rC1xxd69l07V6sxqf8X74Y
2/mEAHQv0h+e7/7Pu5G25UWyU+p96hprJX4j+6D8jhjfzm822aHw71Wf/OHI
eZswxSdnDHPsS2P+vbV1wO/jMjGPhYZ7C/Rs+iAj6DP199g7bwX6X/u178Qw
3sHH5l6s1iJ03Xk90b1z7o0xXwiVrTiCJyfUjefCd4brtUblWEuA/8lhrHz7
nJ/AeZSL7NuxrrdxfX3JB2dKTI/r26nzM9HnRua9dttAZb7e/b+kr8/QvV6M
fh38xRhyL+9rYi33opcROZ4auN5O52p8vGPnuu1myjpJez8ZPeeAJ+GDDGo+
MXAgxrz0erfT8/kYOojh+JDeZm+kfmob+Woop+F+DPPPzYHqKPmhPQNr+Vgb
+fsor3Z1dm6V/bA09y9E36b7UY9x8eNqY/YilI1ObqrNwe1IZ+yY1o7b0bdX
LS+i7uPv296LVf9zbubhZ6LnI+hynx+pn2zVvxGrOfRod+22PJT55D4m6HeR
zdtwBGxFpTGu+6h9vhU9xy/xG2zB2f8GDvzjWPm0b+vHhS5lFz+wOfalkn9v
LRYPvQ12OvRd9EuLdbq3oI82vX+DuV7rL80FrYXo4t33AU6CHIafuJ7fy+Fa
1zfXZDv76k357QB1k25EeybFrUiGHMaQlzg/0TXXoyxf0LPkvf2FqPtLet1B
9jEkn0dp//WrsdqzE+u7zf5da5Hk3rkYztsxHpNllNqEmHLiy7GN5HHA89X2
yW4nok6+XovTvDT14WIlq2Sr27e66x7kLKK+pedU3XNuOniOyvjpWH8n9Q27
V2ktpA60gc75K7GSWdJtSN7P3YfCL67EcPxv4jGuj3y88iz/qz0zegX+n3Pc
AY0p3nOhz0EM+eF+rNaIObgZwzGH/YZx+lTU+VTOTcdzU0Z+J7Wey7ltbV/g
7Ss+qPVDOgzls5v7Dk7q9V70/nelvSLrAe+omyMza/ntAOO6lHtUuuVvRVl/
g/+N+J7WEtmr/ueR+4xhU3z1HEyxL7l/78sxHOeC+82MPY/HmTfcXbgP1tQx
V3pPLvN/L/o5r+9PdX+vR3n+sA75espx5Arc5CDW90o+3xiP+R4ev+Nr9Jdi
9a7Ufxmr+VfzE44o63+QRT8T62N3L/qYWXLEZ5Ry0R9YHWscEbmr55EtSbJP
caD4Wm7aw7NWaW/1s91z5dxfEXUe4/E0ef8qfYfm/Dei5zDeR8Shl9ZmxQ+9
WThOG/L/qeub7r/f3R8/LG9v2S6zXYlnyu8jEp96zuryL2Lo55T5SsnH13kL
EA9VH0r2qR8VWzZV/qltpXf8+11992Kds9R4TO63bMOUP9Y/i76vVMY5+133
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
bMv74YgHse6Xy+/IwfMxjBnT3M0xq34dHJc9adbxAD3joZVzsbuW8eH+uvDo
sTgsXbMf/Xjx8aN91ZdiOF7JtZzXcfQ0buPxOO98rscL6xzxLWJ8Sxz257vz
3u6ef9vcn3BDYnlK9hDPZyedw+Xo58NjUd9n4r9Om+Z8KkDlEH8c0ftDaU/7
SvTzjjnu/jAl6J4H0etd0Iew/3mzqwvjSb/hi5ShYy9YGYyvkkylHOcz0oU+
E/265vNTc11riXjep2M3f0J46K5g/azxKOcnGt/ywda6JftJiZ+o7f6oUlYJ
alfpMbQeEv9Vil/KdZrjvwJn8D2I24dYF0vjy+123E/PKfvXt2Klk9ce50fR
zxl404cxlIvMj4aTB9dDl6C+249+zcj+I6w1WZZzDj4IHp+sPVXeQzEfsac4
9qL3l3JZy3jW2vOilce6WrJB+POwdrn/ifMznxfMB8VGaw/9dPTrpNY1l/mX
umNPxzpy++W9Mvil7re3Y7o/yBjYtzp8T3oner/Zg1ifr2M+zCpHezdyi2U7
lEC/kYcl6wrw981xRCU7i+rmftKnunK/E328PePjYvR2j9I6R5/vx2p9fzLW
5Rf3yDYjxsh+VyfsRuzj1Aa8Q0uyMeesnQtdq/V2r3Bc98SOpH7CByfbjUoc
BjmnZ/8g6r7MEX3fuW8yc1tyXm1AjibarMRDsRt5m6pcjYELMfTx9vcnlfYJ
jBXdT339ktUpozSOqbvuc62rg+sadT7t+kql3DmYkw+uBvpI807+JeLsY/E7
er5rMa4DOR/z9EpqHziR+0Tl+KV8zRz+p/PFq+5098n2IcZYnvPZzgPX24vV
HFK9xb1cR+tl+t+G+xfoJ9hfC8SqOJgn5CRzsJdDhsgnhbnl5xIXk/d+OvdZ
O1f3J1eY769Za1znmeE2EukT34tefpZikZgPl2KYR83r7vXV71pLnN/Aa7Sf
JFYG/+LaWqjrb3VllN4hORf46uX8tqzRWXdQar/S2q9yeUcwvLH2npjbseJ1
mVe+Ef3YwqcCf5XLMeQdyD23m7h/S36/NLElavcc3+D+y/q7FytuWuJ5mbtE
DHma25DgE9hE1H8Xoq6HmAP2gvglZHuQ91v2YeFYicPAD5gftEl+ZnLCKD7a
5y48PvvH0Hb5XQYaA7cK5/OM3gfMqRtRtmuxJ2EOn43eR9tRGr/uL5RtqcSB
k3dbNvUlcn5gfx9Dzf+kxE80tiXjS/ulUrljPibI+algT5rtPWP58c7G5vid
HD+kZxR/GdPHyh9PcsF5u9va9rr/awxLH6U8Hr8YTbfyoMPja51n5/hJrf1v
xPoYI47Ddd669hErB76QfSxZQ5GTl6JfF51z6Pc37fyxPRI2A2xLt7p7ui4K
2c49Smu5juXcIzW/TI8HVvlqE+x1OX5KMlv6XPkN78dy+a51v6cr9RPynruk
R8kyAF+CrLeS72aOocIHBrs852vM5LzK7udLXJOg9v5MDHmL432rn48DYpy9
nvj3+vNcimHO1xp3cZ5Q833SOfheYV/ZFee78sZ8DXwMZn9eIXMYeKL3Pfqc
nKtHZb/Vffc5gV7N4fFCatPr3fHDWO0bSnnnKOt24XmYG3lckRfa/XKup3JL
3CWvE6U5Dl/W5zOFZ9wGqufHMZ2fMNbG9jBwgqn+wWP+vdiBpwB+cC7Gc+Vm
+9LFWNf1ZPtQ1rXV/HuZf8QWuUzwOvF/2hXfww8nPmvD/QvnBVk+4Nfie1F8
TNDnl+xFOeaHeayyvtZd80L0e878jjbKYH5on807rTdBZbPGsX/Frzn759Zy
wHvukTFfxRKfKnEDIFvD0139vjjxeaYg67tq52QuUtvH+h47r1sen+s8A1kE
V4JT1Hifylc7KP5dffb1KPMW7km5+zH0wfQ46rPR97/LK7dN4rtR4i55PNT6
Eg7AnncJfTTcY9M5WS6X/DdzXHeWFzrndqye4bydR//T7wfRt2vNT0plSGf/
t48+fxDr/AK4/8lF+z/HBfYVio0sxbd7v/sn38fHXM1ehu2Kuiy1V9d4wJd7
Cj+Zgjk+skLNv3eqf7DfV2XsR8/DamPd7Uvaa7wTm+OHMtDL0B/+fsiz3fcn
Y9gWcDL0RQ0PF1yW+T5W4+QHsW6T13fJr1t2fZbDtTVDeoc/6T55vch7JJWr
NYzcJbrnpvfEw5We7s53yO9EPP4RO7c2j709cjkA2ewY80sF5EWvtdE28L1q
7UMOEL7jU5HPk6/Jb9l38bgb6RzlT1aMwufs2DUrT5zkzob7UCflnFPM5j+a
WG/ZttHT3EnnKnbij+z3i4Xz9Nu/jhV/9HNyPbGDlOr0cvdXem10FkvA5V7t
ozpes+9qm8vpHD2bfAHwK8ltSDsoB+E30vGPur+KzfkDO37Hyssfxf8RdztW
b+r5W9GPMT/OfRUzczNdj8/9xUIZ/vH2KD137kN0tEvl/TguGTo1vtpRyt8L
h5nKhfCdiRj3KwbKCaY2VSyQfGnFEXPezjFojVfsEf7Djue6Ml9K9YHfNb+W
hxO+ryPOBN7rnIZYBvQv+DNoLmS5zd7D44de6sr4ZvR5MS9G74+S44XO2HVT
9C/uw+t2fh3X2rdndanpBdD98in5FZT0F5tsW4L8YjQntV4urX+Zsh5lzlTS
N5T2tc7zaL+DWO2xvN9fjX7PTttzfdbR6Xe16+9EzxOzvzj3cx+Q/eh11W7n
kaxiLfMx62Ozpn/J/VmzG3mdiFuvvcNmLqboX0D2A/DvbhP1cevt5f5Msvdc
SecRp/V49OOlxLfRv/z+0edvxCoGpKR/8bnh+pf9VCb+tNy35L/CeaVxyprj
32v+pNizWSeW1r+wttHuS4yRufoTrlE9XGcxNb8dIFeXgF4k7zWzfYi40jux
OX4p15N94Jj+hfc27cUy+Xca7m8wZrR2aQ/m6+P17lPLd89+1a/ReNNe/jB6
/xfmHTHM+L/AJ67Yx9djcjqMcQTdT/YZzwtxM3r/Tr9Osud2lP3Tub/PNXQ1
8KzMfbiO2GvnSP5XPhPSk6it92O594ThRzdl/5HXdNb8/MwuG4inzvYdXfN8
9G3rei9vJ+cHtAf+L5RHTk/38/VYE6/PGbsP48p9vrmPx0tnfxf/nvnVmA1Q
UFvLb1f7/Jq9ZC7cJrUJeR44Z8nHncNgr/Vz4CCe99ffc+o6Rbik+79IVuP/
chBl/xf6PvMQ6UYeib6/ch4o7EkeL505i/MY5yCb9Jv4v8iefBz+L/jFwdMl
azXfieHdlt8wl+baLbN/LzqLKePtVAw5AlziZ2LcPuS6nrH4JfJAlNZVtdG/
iWF8tsbdn0U/bufopBoeXEgmyO+JObIX/RxEtpSg+aA4gt/ozmV8no4678gy
R9C6h33AY4Dcr+IwyvPE32Ob/XO/HGV7OM/Gb7z7sDSndY7yof1a9HEyzJ0P
ovcleLRyvT/jje7cpeKPsHO7fjznJPXnyLoF7ZOeLZzLuqOy9Yx7lbKIL3sl
hjwWOzy2wNsxjD/yMaFzr8eQr+i5Ho/18aPfxAN5Z2fmp0Dc9Wqsv6PL6y+u
7nrqmk9URB9/pH671JXveVN2gccfwaHR/5WQdQ0Xorfp5jrr2fdiFUf0cqWs
/eh9tjOXhRspXy4xafC/rJskLos4G/2Ovj/rjfANHvOVkj2C2O+aH86F6GP8
KbumPzvdlaHzX+vqK3n4SeHec6GxczvG5zRr2a78Bg4zV6/jfiWPxnQOw7m8
h0scVxzipRhvt+y74/FLmnviu9+OepsRf6Rxp3Z5rCtvP1brVrYbES/ZcP+C
vY4wdXxjE2Dea03/QQzHQim+2u1DjLGca/a3Y32M+54efQ37O7gSuUs8/4vK
z3G6Ol/7QPyN8z4MXU9pXUPGai/x7ejzj5T0J1qXv5TKH5N3JZDrVPL82dh9
36eyrhWOj/EZ53Dso2s+yuiwank3eH78Zp+z8051dfsgen9vuEjpfh4/jB1P
dct+iPBH1Ws/yrKK+up38r+U6n4YPbfJ4wO+QhviD85zwV/+MHZbM/VsP45y
/pMxPuN57ahjSQ7gy+Z5Jh08N++mvBJDLuT5X+CLarMXo7yX8Pwv6NLI/wJU
zrPdufjVlOpOfdXW1wu/U3fPxeg6RviK+3lyH9YYtesrsfs+HtuO/pbibKZg
Dr9Rm8iX8OmZ93H/Xu0DNvmOsD6Lb/yr6J8L/95N7cZ5WZZozJP/JduX3FZG
3TRW/n30+16ViR2JeTD2joLT6W/DyYH6D18rjUf2Rv4u45pewfemWpuY0yW9
CTEe6AM9/h89iOs10P+W7o2Oh3ycQNc+Z2XDIc5253v+cM11csGV1mb2xrpe
upOnrH7wEpWleflB93upru5j4rJsyt7bZfYz0efflQ7irdje9o5/Hu9DGLNj
ZD6jfvqiXZP7GrmAf5P7E2VovDzT/R//Jrc3wXv192b0eqoS8GH6yL6zfuoZ
lfeWfCTCB935GarrXgxjcbx9/HmZA/JLxh7mfVwC/r+S88SYbgN082o/ZGzt
npnPvGj1AJ6DOqLnX6ztj0RZ3rjtD1vDy9GPK8b6Xqz4IO9kLYFciei2XI+n
az4dw/iirD8BPnbwY8pz3J9X53wueh1S5iulZ875d7fVh6LnZS4zvliL0Vnt
isxv9KxauzSG5tqnWD/eifI76krxQ8Qoe32m+OTgz/JkrOfPjRjal8Ql309l
YptjzyfeRmyH6qP4apcL+Rly/l1i2Zfye2rYHtgPS/6PAnuQnBfA/ToE1sbL
Vo7nt2PO8C6bMf9X/dU691SU/V25P/uynCvuO5Wy4UNfjz52k9yhfJA/mlc3
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
on9HoPpDPngXYt3fVjzwszHMrejjS89a8iWlTsjzrI8h3jnLENrN/Yn2rU3z
Xn7JfVqWx96m2V8j21Hczxc7kvtv45NW4s46RjziXqzn86MfL9j/4fXiN7IB
/J+xsgco/8o5O0dlq+8v2Xf6ILdpiT97rHT2R4c/l2R6acx7m7Jm5XXtboFn
mxPrVLMvbbIPZY4wB/jVMs4z99IzaG3+ftTbkfPwBc91QU/zZKz7dCKbvCxk
xB/Hau3Q/b/bXbsEmCcnDSV73f2I0h5rW8zJ/+o2d2E/ynmP+E16CK1d+LBk
oB/geu0lpet83s5BD/Pn07m1+v1C9LoV6XXeTOcQv+R10Bwg/8FBodyx/Zmu
/yDWcwJHVxaxM4Lb0I4DrjvSfHa9i+qCHa4G/SadrvQV2WcSH84M+lb3yjnI
ZNt4Kso6eWxY0gsrZpM8cHlvx77tg3R//Z+8OTVdpPrkxXRMfEicSXqD2lg6
1V37pp1DG9Cmx7Vndw6Y21R1eC/K+ZaB2u9XY/WMWQd4o3It8mU/Vrr4ffuN
dwYIea1AP/ZbsepD2ZtKvkfI0/MxjNv2Nj1buC6iX0e8r3Se2uE7lWvAQayP
+QvR+/4fp61oKqb495aAf5nWLb0LnhxWY+fPfX81yHGu6ku1/7/v6kBbbvI9
eaOr77nCbwexii3yNQsfmBr2u/IY03Nk2RjwI3/jBH6ku1TuvpOoH5qKubbM
MXy7K2uKX1q2Mag90V/n8+DayNTS/GSPxEfnyo6EH0J0x8TLNY5/Lur2TY9d
wefCY0mp1xX7v8di6L68D8X3qGPvB3A7EvtH96mkDfh7N9ZKbCkeW009H4my
bt31LVrrb8f6PndsT4JvreuWvD8ievno+hXptrXmSf8rn4jL9hvvEsWmid8q
9dWzaVzcjPJcgAd4HiN9J97I9TEZPK/r0M5G36YvxnZ72alQ2Rdi2KaMXc/b
keH6CbUXee307PC8kv+roGeT7Udt6vpUbLLoSZ6Nob+txpriP9SHsiFcj6F+
Zt/qip+c+xDpvreiLntetXtyjcq4Hev6mNwWecwzJ8/Fcu+tWgIl35EaSvFD
BzHNvlSy5UwF/sDuw0McEHrZ7NPmQI/zYpTz32HrYo86Rdcgv1/p+7SPeSW2
z4Fdquu95rUlsO6dxLrNwVL6LY0N7a3Qx12sfJzfuH9MySaS7TWsu4+lOnuc
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
j+6pufeVrk7PxvYcJMdqNxwv6N853FzjTGvRc9HPBdbMEs/Wbxqjt9Lv7qta
8gNwHz7s1vAClXs91Ztr9qKX81pzsL9n/2LxGvF7zaGXu/Jrfjcev+D6oZLO
RL/j8+L6oRKoM+WxHomX/FzlfGwtgniF2nU/xt8Fl8tgbb0avT0htyX7bmSV
X1/jMOIm34qVPyZtQ/xGxLqfCf68yIebMYyVRy93rvs/+/HvRH28SobItwo7
E3LMuR/+LdjN92K4Rno9vY4XuzponXy5UofMDdzvI9szFKcsHq13cPJOr6nv
guedt3B1xpJfm/2OMh8ucRi1kdqMvDrO5UoclvFEfh+Nq5+IYZ8TA4gNUn2j
9x3m+GyAr6f2wuRQJSeMczD0SehxnLd7Pakj+j+Vo5in345yTH+2GdG2nq8R
SPek8fBLsepPrUtTc8vR1lPmrV8D9ym9f2gMNf/ebYFfk9Yh6S7/Y/fBvrPJ
/4R9MMdK74+G2+PfeybK/EL3kK4s+8rovvIZFr8qxVaJY0lfp72u9ImKgXs5
ps9DgX48qXajBx3w6LH+8rmmOevrIr+XdNvuO4F96SCGa0tpH6vzP4rh2uxz
XOOS9WQ/husNsSfIYb+OPZPWUPFt6Wu+EMOc/XyIh8C/+OejPG94ZtVJvCP7
55bsNnmNBKzV2b7k0DsIFPun9f3TsVo75u6rkH+HMfSZgLf4PM+6M/qU/S3t
Je7wSqzbk9jjlPYmyByXD78e69zwpe6jtfIXKmVFdx9kqHTC+1bnK1398P0+
jH485DbWM3v8dkRvL9Jz4yPjHJV+y+c7nMfoefVOCclR8ZDSeBiDytea+WIM
x9xYPFHex+Z4Zj2LdBVPF86HL5fGMn1OPgTxis/FUI7vx6pPlIsJnWMJukb+
8mpj4qkBvmjog5xT5Dng9rlsR0IfcGjPrutz/Dfn1+KVsFlpnZA/0DZ+hdiY
ahizD22DMduOw/2us/7E+Yn6ifcfyiflhzPqiS7lXJR5CfYqHZdPo/abj6Vz
4DTYt2QDZh1QHbUuZR2s7+M0FjWexGP0/lbxmKej39uPPYO3ZcO9Az6bvN/W
4zd4h6r3Efs3ZBvzwOVBiZvofPZMrAulfTl7NuRYaa/I+nqnO9ef5Vb0PqbE
yLI/1d9vxWrt07yRPeJGrPM39+fTmv7PY53jUK7k0Dcr9aQs17OU1g7ng4D9
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
XPAu6Erx28XBzGuMxu5Juh6/KtxD+aamzt49Ga67FOOzgzUfpN9ejzZnVK/3
Ynrc85yqntjaN1mPnNs4lQd9U9Fznoq+/af6qA8Vx+y+MPix78zcq3r/bTS7
Wf6In/k1e88fdq5TX4p39/8O76y4R2qvD6LZrf481mOHKPufDuWqckD787Te
XU/fq5yVb7D6XI92PuJrC/pnqby24N25zmqPa7FeF4+f7rW9YkF+v1Nn1fFP
h994z+XiOn2nWGb14Q+i7ht9NNZ+fvj7neiPsV8dyvU7M/X+o2hcbv/+vxXt
UX245o1o/N19yD58ifsQrTWq1w9jxfHdtX74ctTHU/xyYSfN/78fPm/EmAOk
tVjc3F476f7/PlyT10eN57+KphO+MVx34N8eRGNAmIQ9DHFr1Z7rNNo6UImw
ssdusJ/T87UuyRbo8UvEVfjzLgzvgb9AzOXzE3XQ/V+K5h9yLo8+J9F4Eazh
vbHP3o78FdW7nuj81hOtIaexqstPRG372UZUlk35o+yd8757imfANbduf34r
6hzG+j+cSfbCVZ/B+1W8o9agHn+VuFN4hM9EPe70m8bVN2Icn1Q9L4/riIZt
lqyFulb4Hrv1PgSu9CaiOle5f5m7U3pGuEPcE2HRSrfRHtgMrneu0zs0Fv56
+OiebB8lVuZiNL3a4+veHJ73ekyPwRuxHguOXXfJvFLfwa/rzfFthJjuu2Vr
6Qk2GK1x4qrsmr9X7SPsojnWs1l7/JD2EfL7yF/k8Usasx8MZaq42LpWOF76
wOOi2M/eGOr18PCMd+PAdfm0i9vVNS7IvcJvYJYqljrH7F6MxvW4Fc1/cGT3
Yyu+f/hNa6h8TWAO94foPo3RH4umF3txGuhKYkS1P4Z3gejd5IWJqOd1jo/G
Fup1fKj429+BzwjspPu/YOX7ydiPz12S6zgnXmbwqo+Bnu9B7SC9R+5kP6/I
y8Lz2K87p4R+0jOkp7RXky1Ktg/ZkLKPkjHj50xnfq2+fy5aTndyI2Y9WvmM
8vOWrPPEOoCt9hEXm8fYnLjvr+czqni+znUEX/r54fk+tQcczRfSNfhr1Xea
y7KHaO0AQ9D+F6P1O37b7Lsljxpx1JxBUJWfsnt983kmczoN/5H6PnOgdhHp
VvYAd5Lr0pOKA7Mt9wXRvfhJmZPwTeDF4R96NBqnlvx2cAiEf/4mGv+KNvfy
Zb+U1sgXY2z3EZdctp2novZn0Q4HuffFuS/gEefcMR+m4mvwHx9H49cyTy+k
dyA8F92m/4sf8mGM5xi/aa2BT/FyUQbnlurfqzHmTHh9wVy6Bz4i0tMjlJP4
X8cnwkKeo+ZitPw7WYcSGwXXbx/z7EcxHa/ikuOx8M1le4TrBtYX2ob2dG4i
XCavj/bQp8Pf4B5dexQrLPqulVXXfilau+lZ1+396n/P86LnkB/mOMb6R2U5
iXHOjZ4uz7o76+ks9w3lhJ/+XKy33Tbi/Qe+7M23indFLHOFOc/b33r2aazH
CPqZjV6fk2i6Sv1CPjo4Thoj+HQ1L94dviOfr7APHO3LMfb/+vjhkzm4jCvW
pyp+7kas2wIrDr7LP4nVfuJytD39rqL69PyJd5rLuwSjbBJ7hDhWQThjQlhE
9QU7gyX82cQI0U83Yhy/pD6AI1ONd40pYZcf2ns4i8I5OaylKhvc/YPc2+Lr
IGsbwhlt2CEqHiui7zQOP4w6BrJnl9d371lZiI1gjRQWUuwR8x6f0s1Yj2W6
Fi0Hhp4DxslrfeZ+4usndwlzpLKfKK+s+BrYmx2f9Nomi56lsxs0/7Pu3EbY
2yBT8bc5dorvejZ3sA1+pszDjWg6B+6lYxtdj85yuw2cUT8PmlxA5JO9L9r5
Sq/GOrf2JFZr1lGs92lEw63E6PdsdlXeMbfNVO35+FCXa9HWzl1s87r3+6kO
Wbc7nsm6mTat8qNImMvOw3ehvkex4qnk/B74j/S3n8UoHQIWR+QHfNbKgr1R
ffhkjMejfpcP6/EY2+iQh6Kdw6Xn3erUr4fdvD1ye55Ei/kX1vpq7G5HU/tI
P2+TY3cXfLMpP3cu90tEwwluM8c/5Gc/+nmLvRgivU9YxWPPjmOFYcSbwgeU
ywL2gaut9UE6BjzM3GN+0E74PQ/yyRJ0DFxtPr09ObyCjF2wCT4d6/GYzllh
b0Rs0X12L3MXPVXNE933eKyfhYRv6fnhGq2pp9HmkNZQfFzMs89Hi92OGK+H
2JWIfcj4RPNBvvuvR99+kmOOqvjEqVgkdPxXYqX3Xhrq+P3Yfq6RM+vp6K9F
9C955C7FGM/QRpV94ny0M4seiBproTvpc3Ccc1EZG+gZYdSKT4H/4PzwO+ON
vIj4lljD9czXo95verzcE7HuTwIvZ98Z7fXq8OnNHb1THCbOPdoFh5K/Lcft
uDCe4ZsyjrOdLNuOGHfwYXo6Ts++Ga3N+eDT07+0OVgInpkLfSc/tLDMaTRf
4pWhns9Hy710Jpq/pRLdcxztHNE8Rn1Ou12B+GvOMKnsWaqL/LhaS/5T7JbP
AF/HmdjtjKOeVPhGbSJ88z9j1dab2G8YK9V5CZxrgf3S/UP5WtXt2zE+9yiL
yiFbDXlMHT9diIa9/B3YfXzO6rtbdi/10HXSIRp34v76GhfR1nnXieiKXXP+
HGR3cdthnquszV+Ncayn75sZd6z5rg+yroYned2+z7qP8tyIZt/L6zvv0m/S
E4+l31gLztkz0GEqn2IeyLv7X2Osv7lPv8HB0BnVfxjr+ITzCY9jpQsr3kS2
W/RsUa4TqQd40tcwvUtnAZEXdtv9+yvReNKsmT0cQ1ujn9V2b8VYP3ON+4uo
1/tR5wfXb8RExvB85XX4rRj3h3SPYkvke3kh+j461UccXfb7Phbl65Md+V/Z
c29GHzv42TvgS+ctzbWH+zNyOb8b7dycS0Odt8GhzCefSz0c474/18/k0ctY
DKxHP+SziFxY37n238XKbp99dpyzgF2tWv8179lD6W/n8uv67w4f7r0U/T3O
cazGHr+5P8n3KFPtUdVZ79aaoDgo9eH/OdRnGx4Mtoden+n9+Hj3dYZAFSO9
jf0m2270nc4fuh7t/KE5/KXx+zdR45cz0fLHqI/fj7ZvRiiXrj2NFf9Xz7tk
18HZihjn72UN/8ZQbsXdEW8F5/erMc69nHk7+/D/HmQ72cR2yJgnd72v1b4u
ZIFLl/kEjImq/33fiy/B566e5bn4XV/q72ei4fAsnHkkDpfsJvgZMv9EdeSc
HX1/ksqabSlwZy7adRmTuHiZEfAYz6hiMTTX3hg+Wic0r/OcnhLK9I1o6zN1
qHAMmNbL2POPiIP5lRjrbfUd51j3bPTSZxoj+FX8vCH8UNjrc35EF9VLdrAH
Yuz34XnHse5XynzeiHHOEe+7J4fnvxq1fy2PZb+f8ci7NL5/JVax4rIR/SA2
008q919EwxnZJ+o4psLQ2d7gugu+GOL2qF5buZ9IbQy2P2fXSRf8WKzGXm/d
d14M8STug9bz8CvJDnnZyueC3+gk1sevxtPXrc6VPSrXz9sBe6HK8ovD85SH
iLjupfsJdOScDqz8L9vs/bfhsEim8I3GrfC37DhaU7VHUN/lcxYroS177cC5
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
xe7N5zeGPeuRqM9vnLLx6r5/HPX5ja5X1Q7PRNNB9PHZGJ9bnfGXbAG/GGM+
i+/pK25ShWNUDvWbfJS/Eg2Db3J+IzFXbm/P/UXZs70l+0S8/Lr+KzE+vzHH
A10fykF93a/k/c39ngfgu7Hi0vd0LfOjOr/RecK67uVofePnN8rG5GuO4y98
mD8T4z3BFfs7Y7wqT4zkNFa6T9jl94f7tGdaso+/EP0zV6f4ufvwD1WyTXw0
+0HhkN+OlT1DZ9DLtgH/pLKfiM/0+fQsfFY+v7PtiWuqPUF1frWuE/8Ffo3s
aVftd85vlK0H/sK1mJ+DWfB1fZLjkj+JssQ2ificihjrpuwX9r0V3EnXzRei
n2cJvskz0bgBld1X15DL2/XvxeHeKbuldJDGrfYA8B0c5+ga+a/uj7a2sT/N
ZXU+ja/ZYffmtlXZ3ijqRPmyf8nf+Y3hXn2uD++f28vlZ7wwPCfv13u4xQWd
RZ461+9au77SKTe2FC8n/sLLMbZVsd4xnm4Nv1f+sizyMTwQYxyiduYMYvDE
q9FsYL4e6rfPR72Oy6bz9WhnUjMHluTVzThGdiHFYouPKsz+g9hsL6FyK/7v
f4l1/FnhFpdsX3D9Djaq8vqdj/WcOY7pr9vz1NYvWxnwF/xYzOfwk73m6lCW
12K8rgjLgCfUp5ft/wg2tSpHCz7Pr8UYn53E2JZVScYxes9XhjL+h2g5oJbq
vqx3e/zcffqHKkH/VvWu7CevRMMnwm/CBTqzSLn7xflV332m867K9tbDH7xf
3xMn1Jtjjn9Yo1Qn2Vy+Eyt7ObYbuEpqS431Y3v+Obt3bj4yJj+OnN1Pi7jN
GoyR9y1fjbqPfN1EV79t92dbNryE68WzeN5xND8o62I1ZllLpUt8rdUYfS/G
awh6Ws/RPl66X7Z0Ye23Yn3NUb05D1m//ZdY+T0c3+ga4RvOFYT7m9cVbDWI
6/KpMe/xS86RPo6VzfNGtD3cNvsvlYGYqCW4hTKx//4gxhiWvs72HNeVuR/1
25v2PTz537Jy6F+1lXQ9ZxL3BLsKetSxjvpTe7F/Zc+92SkTOCOPbdYzsKW3
x5/FuD16ot9/f7hH4+s0Vra0bWz/zKfMy11SBuEL5c/BDnEmxnMt23NojwqP
o9P4/t/FSh88mK5xbtmc/QV/kZ8bovb+7vBhnqkemZPP+x5I5XL+0bn0t54j
3qe3R0/uG+ohvKI+FN69GttxCvUejXmtS9mGum//UCXEh9E2GZ9U9hPnHgq/
CLOwBk/5l8AMeW1ektNXffx+9PGlnnk6lOVvYhxPfyVarjL5fLUOEFfNOqB6
3LB7wFTwLJwLwTzw/fxBPlpxffmKfebWZNa5iMZPUN8+Hes2c9dx2GzQzXBc
HANIb+UYBQROCLYdx0zCFc9bfZhD2FXcPkIcXsVVYA2knOgvj5/SWqz5gt8k
z/GIphc8rpM6LMEe4C/p8GtDHY5i+5xSEW0v8nT0cUv2nzAWKu5Mbjv9H1s9
GK7ypbE2wi95McZ4CpuNnqV9cz7vyp9FX1+PhqMYj/SJ9M2F4ZmvR23PoZ5g
5IxLeZfrfD3ns532yqJrfyJWe8McL7ypkDd6Sr9l/orG8WmM7Q3ZbhrRxp3a
4Hy083+y6Jk3o7W52tjHjnALbY5drDf2db/4aG8OZVQZLsfY7vGm3Z/z2iGM
IWKWno2auwtW0TOOY90elf1n/vyfjHZ+fT5TeRPR+4Rhj2Ja/28jc/YTrV34
Zau1q/dMuDnfiL5PF/yl96j9hRt8vTof/dggF/ykkuxbw6/uGA+8cl96xq3h
fW9EGz+6jpjEahwxFlwnss4c/EX3hoAjWIeJO2CMMd4rXcv69MMYn1sY0fRX
xUd0Pcbz9R15e6Xnn0zPeizW1+jz0fggzDfGJZx0x0Y+ZlkPjmI1Nzy+2tdA
3ac1Qrw24rT1+2dims+RRc/6Z7FaM6/FbnovouE7pIdX8j18p35Bd2bB76P+
6OXdQb/gz3ksvU/j4urw76WYtl253+e+aH5B/ESI6gtH5ijW+9SvU5ndD+UC
D+ViuudMuia35+PR+D5nY/e8DLo3+97n9K/7W2jTXj585nKPrwZ+O4qVXSTn
wnW/EnuRyg9Fud3v83y03Do+l88P5ZKt9/EY21Jc9N2jMfZDZQEXeyxg1qe5
PU+i+TNV768W92wqrBGb+ofm8EllP1EfkS9807Hn+IFxvaSMshP+SbT6cfbi
3P6LGAcv53GsbOyKNROWrTCe+8T00Zqp9fd5K8/3Yn3+HvxAnz5hDfS8pBKN
Bemvm9GfJxo/WgdOYhy/BEeGZzOfzwzPdL2r98ju+0GM9ST6kXnb01X6Hp3I
HvJSNL6vvxtOTpU/t3cGu+fmBbuwJqrunt9vag+ksrC3ncqNvYmQ22HKXoCw
N0TAKJUPxvf1ss1W8QGst9jiXrTfPfYL/IKedB4w15JfjP0XPsrMQcIGI7sa
vJWMad0uFFHbl/TsnIco8zCy6PcvDdeoDM9FrXc3Fe+/nr3AJeOsrMMRr7fa
82rxXM8leRxtfEaM7VRqd+YHtq3rMeb7gqPIZSldQwxhHpv4Hf2Ty38ajSMH
t8TLr7/JTeffz+n1fxIrrrrWDPXnPnJ+qG7vFN9vg0+m7CdVfPQScW4O43zp
+TGUmferT2T3eSem7UvYZ9gDg2XAQI/ENH9TGFd+TO2NmRO6X9hZWOZ7sc7T
PthUPn0CLpBO8Hz/7K1PY31NAAOw9rlo/boVzW9zZPdrrYVb6/6hS/Y+1lzd
p/F9HDUHGEEvO1+Huer7Sb1fa/gb+QHWDsepru5fixhzQ/w7n0eV/UbrJfvR
nxzqtQ95JZb71XMfeg53b6Mc34K+cnucuJ2+39HvbxbP8701/aS+Fkfm2Whr
0lMx7ntwS6Tn5f2cvn8uGlbC14U/K/M/qud5f06NM4l8TNgz9pXzs2cbqSSX
j3rlfsv8H7eVcY2+cwyn69xe5X43n+PuV6IvyGuQ885dTM9Ax/iZWsT7EcPm
fKXcb4xZr2/GnWdiuj3PRDu3pLLpbivfj+YP2xafTMlSrokLfe/3wSVe6vvG
t0a7cq/7l5xfJiH+mTW+xwHy8mXukNpO4+kHVnbZfRQnhU9zkzOID3LvCesD
9nTWBWHcak04jaaXI2pbqesNdIV0t2yG4kleSvdlu8D5aJhJvvRn0++V6Pfj
aGepuP4VXvnpGMcvVzrffe7ku+jxBXJ8wdwaqPedxqpOPxGb7596wn59Ttxv
FLHOzdbffp6RJNcL/Te1570RY5xU1RM+jOJvxOn79ajbGZ9gROP20nc+HuDB
/uv0feaO9/weuT+neE34Mfe5djLn5iTr6Vw/n7venj7X0BfiQZOPLl+H39dj
j6r5AmZVH34YdU5IH0P6+1o03PpKuu5mrMe3R4zHE3yYfHZFNSZ680LlxkbU
m+PbiOqDD3XfdoBt4qOJT837saVcnzPR+C3sM3q+Zo+vkk3rw+GzNEYcbPpa
NPznfm7yfqjsD0fzLXkO4IN8uoT1L9votTZrrOQ1S+P4ZqywyNmo/dYVNkDv
KT7gg1jXF9kuoN+kj+BMyJZzMlMX6oAO5nlaR74yvNfn/hT/kHiG11M5XSr9
PzWP2KPqmt55u9uInkN+t95HNvw37P/Xo/Gb+Ki+ip9+x757I8bn9ukjnvOH
6X58E/z+Nfv+WtRl0vXaV/398M5LneuIL1M5/tze857dc2l4r3JvPVvcTx30
27c6dffnXbb35g/xN7Ihvragf5bKa533+SfX+b3iGo39P7N20L9vpGvUhn8d
K+zhz+M61fFPo51/VL2HdhKHWbG33jdVm/HbO9HGWB6HWnP+MsZjkPJSNsbp
H8X6mCHeyfu+Gldc80aMc97sKncq/9lUfHQlzs/1umFLWfocsMFUfLS/U3pD
81BzWnNxzr+URfdrHP11NL2EaBz/VTSOJfad41jGIT7IvScan0cx1vduw78Y
zTbzQqzbo3Occ/YVuH8IfzMcP+dMnBTPwA9BfH+P++Ly1PA8sDzrFfuDx+05
Pa6Drv0gxtyLXrxfxkDZtu++b9X/UjQ7+7727lXcVXVN9gm6uC3eY618vSK+
jDXa/Uk8D+wHP7NqX/gtypPLGSuc0ZjXLK5Xu9HW9B/jxP1Famfi0r1u9CH1
qfgwjHGk50dSvTjffF95I1SXOd2Xy1Ph78qXlPcG6O1z9rv3ue9pXrDvXZg7
xMQex6otyH1c4QH41PiE6CPWHvwP2GFy/VQOP9u94sNwndsPe3Ncc/DhWD9z
fBeRHpVN8Ucxjv9kXmyDk3TvJuPM+bkum2IX7ClzPiuPH9Ic/oZdO+VfymXj
vCaNLcdf8BPIme7+K3Ddg7FuU5rLM3WQT7Ywz/m3p6vJc5HXCY0Pzo8jDh+s
wpx1H7jHkbB+sc5ejMZh9PVG4/3p4bujmPbR8F5dS571q+ka1nLKl88XYF32
XKDcV81flUn78BN7pu+Rece54Vr2rCrDLvGaLvjce/GA7jeq/BSZNxHD345N
WYcuFdepXx+N9bZEPyDgFnSsjwf4p+SYyThG4+/Yyks/vh3r5xfpt8/GWG9r
Xc1jocIw2Z5YYQT9/o+ixZDtY53EdoCey5KxtutoJNeH9nnC/k+M38V0ndrw
ul1DnTk3K5fjyvAb9puIFqdEOTKO+Vysnx9wbihfjpV1zMozhF2+Hevjr+L0
et/34pGIdZS/ah9cNDj5Xja9B3yEDtZ8XYpvXFfPSebnurDeLPU9EVf3RPTP
J7o4PBP/0FFM57Bz/xK6wbkvFbbROv43sR7jR7uwR9bf7vsmFuUg96aga8Ar
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
Yj2eFk5r3jO5LkV3s+7oe3QN/h/wifawmjvs+3xvfM6uByNo3mg9+i/RzgrI
YzbzNs5E4+FWZ9769dhYPE43i9b6t6LtHXletpmzD/X2zH3HPK84CmfT771y
4y+nvbQuXYtad7mo3WTbcN8MHE3256oH/jD5on45xv4O9ISLrns1mh58rSh7
Fnjduuc01mNOcoz+xWhxm8cx1tns1T8bY30Gn2QOw4BbwKPYhsBleU6g/xzz
I3Bz8f1X/cBe2XGv3u25anvYhTHg56XqOeqDt6LhGTDt8e3P78Wq331s5nmv
674dLS8bMUZTAm+HecAZqy5VPl/14eMxtg9eGeqUbUdgrx73CwxzbqgjuOUh
+zivF2EcYxfN/cReahu7aSXYb3o4wDHAEg4uWGgOu/BMjW/ZLL5eXDPFv/nv
0c4eqfAN9qQ5LMi4rWLh/Zoqfom+/Y1Y+Y+WnslUySEP3t0T1sltOUjZ34x+
AS9U4rjE11fwTkSzb/A9a56eqfVGe6YPo8YnpzGdi4G1/7KVUeXROokvxs9f
8nJwPbYfjXnsLFmy/wqbN9wB5hLvcd+CC/tWeBeVnSqLx+183/7Ffzs3Lz32
ir6AC6E9+aPFPRej5sHmdmD/+0ux2vP8bKzjscpGoGeq/uDFKRsM7zyKcd7P
jLvymvhItHiGS3ZfxDqG5f5HYj3mDpGvy+2G1E347d2iLC4+Pug71t1qnGTR
s78bq/HptqRzQ5m+WNyDDe6keH6et/pdNjadnSc+kfMMMh5zHKC5TEz91Fh0
+yv82IjatuX6H1+OfBhwrnM7+//dBlfNY43194dy8z6uE547tWvPx7pNw/mD
nAGAXeJCcf02UtkcXMAAPaydBf5M1Te6P8cPSd+rjX648PkSuMrCxRW+If+N
1nmPiaj4N/gQNuEXe/ySeC5/OPx9Gi0H5DaisuyLg32QadnGT+sC70J7u2qv
mCXzWFkT2d/IH6Vx5LlP4b+AT5S/H53gOCdifZ328QwPIZ+F4vfCdcixfvjF
Va7jaGsx63LPx5ttILpGc/HrxW/IhRhzIIlfOopah94JwU6uNYF1G/1/HG2d
UflpV99nhd2Ty0u/aI/8v0eLDdMzhZs8Ft77iWeBc4+jXq+8PJnDkzGMxyWB
v9Tesiew78926LxXpn4X7Tf3Z+Q6kGPiNO5sbKbKchKr9n3dvqc8mefr+ju3
azWO4Sj9ZqzW+yei+Y6IY5FkP4yeBR7v8b+47jiaPbQX+w3XG77t6fD//3D7
89uxHuvSw6HoRefrO7/F6yDf7evRH4N3S1xv9/Yx+ImXrvM97NKLH1L7yN/y
fmzma5mKxXZ+7pz9Rn0tGw7zeAm/2IW8l8LiwjEvxu4+oIf28Iw7JdvaKj5u
gj12V2HNnxK1mcaJ5jzrJDm33X6i/+s8FdYQ1llE1+ET4LncfxTr8/h8jLml
PLOHrVnzq32h/q84kQ9iPE/1/eXor2OqCzYa1kP8Kb29l655KZoe9r1oj0ez
L8FvhF9NZcBXkDmbsoeQ2zJi3Sbi7ej6QN+/NHzv9UFn4fvBx4C+9FgT/f+J
qP2OpzFuI18HiQMm74rHUzv2lQ4m743jmOy/83hq/fautQeCDZG9KvpzE87Z
JuJ2TW+PCrerrOxBItaxirdLzjvHGdOOC3Xvk9H8neQeQa84lsR/lvEEGN75
SpQD+92rw+dCNH9kxqfvRsvv4Do32wTdZ5nbw9tBzz6JFoOg76bOR7qTAm+7
t+4s5ee6YDtwbIh/qIofwu7z8gbvAbtU12/C4eN62Wc4g7HCN3P8G71H3HmN
U9Xv+VjmX5uTfeQC2rewX7gXZMrHsomoTci/kvmx/pGu036XvU1+t6+t+Gfc
16J2f6C4z8uQ/Rp6z9vR1qIluh/9lG30zufBJsN6+tDwfh+vYKXni9+I461s
1qyl5AtmvfCxRx6SfQs2VffPwH/JMbO0A3pI7fw5+935nt6WKjc5KRDVzc8v
zvtrcQPJ+Qee4b3wYiSXhmfTNpTBc/Bg73NeJ7YWF4/tyjzfvAZ8NVo8ktt/
vH4q5xOpXDk/2r4EXOT48Ymo89O6vSHnD+RZzsul7dU+vm+hTRk3brPQPcIp
+DAcI8HJ5ln6nr7mOcw3zaNnrE4+TnT/azFu9/MxzmuUeb5+beYHVXNT5fxm
tDF0Jf17twQbSaVnN8UACLjCzxTtxQ9RZ67fZB/MOMrPAyctXdfg58zZWubs
N+LsyCausfX88P2+fHr7wEH7lo9ruTaViqe6rfxBjPmxWfK+K6//OeeJROuR
xtVxNFtzb53Ars86dxTr9nByas2Jl8/tNxW/1P1LOitVnA7nfDK3Kr8Dvzu/
l2f5ntP36I6/7sTenfZF7+R9Nbos62f0GeuD9rA3Y32uUP6qH8AQ2UaQxwv6
jDYWj4Nzj+STumy/OX+l2nPD77wedW74HO8NjlFdT6PpwyqfM/gO3AuepW78
tm8s6jn2MleXsev7jFxmctzqerXlS7Fuc4I/ltd56TLN2bn4Y/gz6DK1s/Cv
sMnvxwqv8lvmr1Tx33rvjag5Ua/Eei4qMNPNGOPrvL5UYz7jMscwd0N68dGb
8nOzfGv4TOWX4z3Yfc7GOIZxTnRP7qOl/FwXbEv74JjI//QzscKlwi/78vtM
2fk/SmHd+ziWbRPp8S+2kbl4Vtc/eS2sbCKsB/pNe3/pw8ydQfIeln3ek/ad
nqf99/FMORHXddJtOb955nlgL5L/VLr0pHhm5ZPyGKVbUee4QX9zL7pn31wY
j2HGLpF9Ricx9hchvkfTb/KxvRvrvAM9+7FYH3f0rWwEef+fx4sLGEPnJIuv
eSNaPE8luQ+Oo8UlVfoHLmvGnp8f3inM2vMrgelejXV963v8KQ7IpsJc8DlV
4UFhhZx/N/uJlBtRdczxPrqmyjvHeDyOVQzHsf1W2Vv9vZqr4qqoDzV2qvz+
VTl5r8YavsRqbOGjythE7fBdu6cq50msj/kclwRWvtN+JGwOFTdlE34uQluK
r47/ZOp+bDu00SbnCeT8dNgp9d0memiOq7ypHMeq/syHXfInuxBj98rH8CM7
5V/F/vT/RyFuU9hViKtnz4ldIez//J25I5UOZh+IniZXVSWsS87PjWi6+Dia
TWYTmyr2H/ZceW3QGks+CvQ3fObsX4qo7cxaE+Gd+X6u2lvlmCzW6n3gaOwK
vk+vYnVyrh+/l/Z+yuqDPYbfKn8JdePdrp+y3cptW/qcxIp3B5dSNuAnYj2f
Hn3umI/3UNfKhpJtae5/0H0v2+9HVjfGy9mo/Unezu6f2VWIy3b7YY7VYb4w
9zwfjvuJyFvn9gm3R+Z5pO/k330l2lwDB1f2M7evyFdKLgPNc+U+eMyuyXst
/u/jlPJV6wnXVP5MfQf32P16/FaNeeoBhmFdu5N+JL07x0dvw8+lvPiHNGfe
WXBf9lkxt5fI+RjHuTo/d6kwjqbio5cKMdMql2KmZPvVPkYY7vs7PhvZFz9j
37KpzezjKqzFu4rGQY6hxj4hG7P2RupHjRHiGfX7cdTzXWPreiqb7q/ObmQ9
Ym2pbBeyu8BjWOqrRs967lF0EntP1S3vYSVwb1m7PX7p2OqALql4vKyF+fu8
7mKjzFyLTcVxXsYulf718r821MH1sYu+U7/fjBW2yess+iP7mS4N9zhecX+Q
rpF9w/tIz/hijMdC9jepDOTW8zK+Em2cuKg+0qUaxzkXOfgKDKd6/nTUY9F1
IWUFW70QY2xPzPMmwv3Offc2rfxFzAfF6rwabcxVtlnhO+k6eMgu2B9zvjf9
XzYquFzZH8T7n4txLgPy6vT8TXq/xl3O5aJr4HJG8b3q+GLRBo73nh/KPDXm
fWxRZ5XpOMa+5X3tbyubw6b83Cp+6Hzx3ErAH36GwtK8G+ei2Yx25eYs1VeO
T/BXvzKU+UdWBv0mzKL1+nejcXn2odt9L/1xEdrxk45dJOrjfZz3Dh+gGo/o
Q8cNajthANluyRd30f5VLokvxDhuxffjrv+FH6rceV42t5/Ar5zC8JV/mzVd
a7T6/3i41m1LLnkt57l6xm8OdfcY6Wofw5qY1yePr3b/g3SedMymc0bPIr4o
Y5epPaXq/Yuxmv+0QeUjQ8frGeTi5nqwKnrWsahizL/Sebfjkfw+ldfjc7Po
N/G1PJ8etjOwGAIWvRp97OucVmHaP4m+Lz+3Z7ajCYuJA/1M5/6eME5pD8cu
jK9qnHLfn0Y746nnz0Vvqy1yjIYwwY1o8xvMrvHx32L9XDLek+Pb/Tf47ZWN
WGNdPJmvW72do+s+O+wtnP9ZYbO8xsin9JXiuoj19mS9OBrecxKr3Hlqz13z
0rnedsy0FANMxQ/hi1qCXfL50Uu5J+z1j60cm65PPMPHyCb4hH1Pj5sp0Xj5
8+Ee6bJ99NuPJt73UcmS+JVPkuzK4wEDeZyp66KsZ5GebtGc/zW792K0scs6
pb2cuCJ/MFN2xq0L6+px517HR+xh1UY3YuyD8PpU2AOfe9Z3vF/cgudjrG96
89r5vf589iL69z/Gqt0ux1jYA/LJ653nuTuKMXbJ9gLE7e+v2LUeP+Rl5zv0
tPuVvh7r68yZGJ/7nO0kV+z3nv+T+mT95z4j9yMx1qQzxfn42RhzGN3nUul2
txeobNgKKxyT7VlgDY3rm7Gy5Vd+LD7VvMFGdD7G2CXbC7wM2DIu23N1bT7v
iOd7zBfP1v1fjlWb+XmH7jeqfJHug+rtqb0u3o7+PLBIts/cjIZtMofZ6+PC
/gSs7ZzeCsf43gIM8w9iZdt7K9btquhcPktswG5zoO3n+LnZP1T5+vAFzWEQ
7D5+/1KdcV80W8+m/FzaSnbZv44VvtgFn0zJv41VDLby5Wkvhl1rF+yBvjrI
nRXG2Lb2JI2hF9P95NTAx5Y5DNWembUu2+8r+4bGtPaLX4vafqN7nooWq5qF
temZGI8x1skqfqi3z5/ioKCjWGvRu15f9y8Jkx11yhzR1nzfh6m9tF/Qnl9c
Hbiv+Mo5R5z2IcaA5xD7cWzlnPIXuT7wvtGzbsZYV2Z7hfMLLg7l/SDauQRh
92W+hNuZ7ot+m/szwFb063G6p3qGrlUbitvm9hm3EeTxfD5aPBLinKwejnF8
qPGqfvnDWPk7iRHG3v9Ve473K9jLY+Tcv1j5edDxGY9INJ9eijGWzvPggWhj
VnNf5/R+KdZ1qs8Z+uM42jxY4svN9tPjWMdCFS9XewO15a/H2D7jOQFyPuFr
9nvEevxWhWMyn0i2pl+Jlf3md6O1L/OOsni/Vlgkc02W8HN7+eV6z55a8+mb
7FtirzMnuuedaDmjc1mW2E9kLxN2uRq74ZNK9H44ONoH6+wY9ZdwjNYljYVt
YyPwl33cbC/3qmRe+FJhLLuf44z9dhyrfSh8VueIujBXMn/yvuL/GlP4yqt9
nUS45Wq0Nb3CN+einQmpfa/2oHBuKg5+b62d4jPqHdoTSw++Udyb9efDw3UV
fxfJ/F79rTVT/qg/jtXeD455b31CL4qv9sxQRq6v/EUZt0SsYwz0jNvWdQ96
X23LOoRd61V71sV0X25L+J20wZK1xWOK1LZvxXqbuP3L13y1ydvRdKf6WLiC
cwQ1XuBBeV943Hs1ljOOUXtI9yt+U/NEfSK/hdoK/VXNS3CvrmGtzZxg1xkZ
t3j9qzI7Hno6Wu7pt6LZV/TxXH0+TipseBwrvPqAvXvJvgl8cBSr9sn7kh4v
F98L/kHG3KvD9aw3PuZzufNcqHAM7f2fY2UDFW7SWNXZsHPnL5On1X1BHh89
x8+d8g9Vgu9nzn5TcU3APXN6Qr9rPyVe7PXYzr+zz/hoF/jdYDx//tWhfN+N
5qPbNL7lTIx5Qge5O7KJbxL+SLYroi8+G20N8H3o9Vg/s825Jnkf5WsH4/w4
1tdF3x8u8e/BLz4d3v23sdpvw+nM8VN+X/Vs1YdzB1z0DHy/rJFZvOz833FE
z8/GmZc/Easzx7Su/9vh36W+Wz1Dff7laHXLsT49LOVrsq/5/K01/Gsx3mcj
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
3FkPcxkrf0sVE5Ll0eEj3u6XOtdsI1Nt5Doj+416vr1X0/Mcv9GXJ7Hyp/XW
lR4vhTLpd/Ux/GM4C1NrYm/d0/M4Z+tsus7Hpq4T7zvbx3J/eptV2OCClXtq
D7yJ4BvtiY/BvL+oxrLq+Jp9z36Dd5H3+e3o7w16nAL/Xe+Rb+k4Vm07h+em
/Ie6T35V7GmMzYx7zkfLyeuSsbiPwWq+Xo+G5/bFg9B42DZ+h3L1bCJLuCb5
fIAKA9wX2591vUl89Kb+IRfn5+5qFzvIvSkai3A/GeeMyx7X5ChWvvTfGv5f
7al66544GMTpP7qgfG8M92wq7A9dhBm05t0//H/Kt0V7ZP+8S6VvfK/aawPV
6XMTv28jeg5nL+aP3ic7gfS7xxuR2yZfLw7Tb9j/tcZfS9f8UqxiFr/QeeeN
aPkjpj4qk/IZ/t3tzy8vuF6fb0fjB1e//WW0c4z4vJXeKa72z6RrcntcG+rB
/Zftt+eGf78RK121L3G91ysbsTL89l4q28Whbn9h7ZT7/uLQRuJ9/nbnnZdj
3G5TH/FWdf70+wuvh1NV/aaYoL8tficPEf//neGT7/f28HpfjXH/0oeM1V39
uMgudpwp7NKLj3bB/sP9YBnHAGCgbbDLkvjobfxD+f6Kn3uQg7igv8Es+tf9
BRXu1e9a15+PFnuWc21nPOP+Idl9L0XDBlVsMc/Y1v7iZYU/gF/f7S8RffuD
c1W5v+LkVHtJ9z1cjHHdxPUUbtMedd/2l8oO4vWgnyWV/UiiNnvV/p+5AxK1
l/SacGAVr78Ul+ldagfpleNY6ZZe/L8LYyN/xzh5NtbzSucy9eKAKy52FU/t
vp67YX/xeGmvh/6uxqTqdn+6Lud7uhntnJ/cX73xkWUb+4uXqWp/vfcfxmo8
9Ph2yLvFNdke5X3v7XB2KOudsL9sMx7AHj0f6RJ7CX4p5+dmPvccBuqVbS4+
ehv/UBaVaxc+8EE+PUJuCI9PjGj8AxfmAxxa5qf0AHsaxjX+pRw/1LMbZ/+S
84iRpfwXF5WHvVWec87vrdZRiXNG9Dv5/rN4fjuVWW3CGkE+CtpB+kL5JmRT
Oo79nfeu91UxCKzjWX9XfF14BT37OzpNeboupGt4NuNkSjwO2suk9+S46544
nzf7i1RO7EW+3mc8jn0l971jAsfi/r3+Jvfz87Edvs5yYXhe7hfnELtervi6
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
rHLmqY8+GN7PeNd1mqNfHT6cY0DZhJXgLx1Hwy49/Mkc/fzw/zx/c79X34H9
4KwrZvzBWCaVv2hONvF1q97Kw/OXtz+/GLW/qbK15e/cPvV+1Jx8H4/6V30t
Pol4weJ3X7Pn0neePznHJZ8ZfiO3DtyXpRgg+4fe7ZR7yRlJ+4iPPvBzD3Kn
pbK1LxGN68xnZ1+mtYy86ZrT9w+/93gGS/VSD3vknDNz9ht0zIX0DLdJz8lS
rmKPt+p7VL1bvnn4/9U+n2f52v/PYnX2pHCL1k2ts7KFYe+t+ECsg1+Jlv/L
/fjVfhc9+pSV2TFW5Tei3pU/yPOv9PxKLnP+ojmZG+PZ3qL3TOWfqfKoOA7w
eKxr0fBFtgPombKdCSsJB0jvab5oLLw1vCfrX8em0k8/P7zjAStXpe9p58fs
t2zry3YJx+lT+Vd87kzpqSl/0Zz08JiL21vop17+mWqO+Zz09nCbY76HNedf
xYoHKGzwJ7c/vxYr/MpczH1Pe3LmKrjisRhzTeb4ucyN7B/Ke0uEcT4lu8ZH
H/i5B7lbwrzZJIcW4zvrOezJV+z/xOUKz7xavKPSs1lYR7e1P/bwjfZnWmu0
7jwTdfzynMzZyiP6sV65zXXdyfDMHq8OjKH4cPXDb8TqPAXxXmSTWuJfZm2W
/tO6C87I+iHb3z3OyM/R9HVSz1Fbwt/O/qAehu3hmKX+ojmp/Ek9P1FVTtc5
wn3fjvV8etke5d+DVzKO+ZVY9Z/8pt8cnr3U1n5hKMd/jMYZz/Mktyt2hdxv
2YZ0Eqs+5JyBrH97Z6dWOGapv2hO5vB1nmNVOd3fpDZ/IsZ972PE8R08mGqc
yncn7Kn1RGezCX9+O5aNW3xCb8fqzG9sI1P83Ln8cj27+pVY5/NkcbvPNsLa
tStf5iAHWSqsrXNnvrPmaXzntYh1mnWw4qU+aNcszZ+5ZF+3qfi++jhW+1/t
lR6LMb5Z6p9aYrOpfCnZt+acIbWPfO+985d+KVZ2e/K9vhOb723VDuT48PWm
0ges5egQRLj0yWg4QH/31sglscrZTrCL7z0L4/CR6OMWl6nyHkfzxzFOrg3f
S3z8u07MOEb1k84TdtE43FR33Bdtv+74s9KzHnN00a59MFpubD7k6MuyxO7o
OOYkNvcXzQn4o4dbXObKq99Oo5VXeOay/e42GG9Lb1/ZlzUPhIf+dcyvo5Xo
3W9H8zlXGCD7h3r9U9lO9MypscXc2DY++sDPPchHLYxBfOweS8l5xr31nBwI
YA2Py8jrl66TLeb5GK+juSz7in2OmPcPTfF7l/inZF+e4uuxjua6Zt+L4xza
rSq7uBq/NDwTvug2gt6NmNYHYBa9i/N69e4vx3jf3rPjLcEufq34Uy/GfvEL
eBGO1tKy9MqdY7VOonGzadej6HNINM9ej5UvD67kNmu/7v1BjHnwPZ+lrrk/
Gl65FOscnV5+3aU+U0RtTB7bfeIX1U1j42Ysa6+pclf2Q5WZPMSa1+TCrHD5
v7n9+fVY8dfODdds6yNjPvk60fMPTT2jwj1TPEds8HN+pd69S7g5BznI3RL8
w74fm1qznGsIXmH+ZQySYzvRzay5R7Gbn9ylih+akyX83ixL46fI7VL50DL/
M6LWe1ojfjkabtEzq7yam4jWrueixi0ql3SF8ITw5o1ovNPeWYbVM5Zil+wv
WsKPmZPKTzQXn+QyVf68D3Z/kTAm40EY4SS9T3t9+QzUttvYz1z0Tp0FXbUT
2OqN4Trhtwftvqr81TOWYpfsL1rKj5mTjK+XxCchU+Wv+tfzF9+KFc6TX0g2
UV8bjqLhnVdi3j8zJcQ0i8s05R/qycXi/fAUe/22S3z0gZ97kHtB0C/YEjy/
p8+bfH50Fu112BvvynsHP2xjv6n4vUuliq92+43qJp6t54nV39Jh6JRz9u4e
3hFvRXtoOJ67CHY3yp/5ti/aeylLxng9nvJS7DIXX7QNjpnit/DOpfFJU/XI
Nncf9/ztPhqVh/g5YVCN133kYoIzVfFtpV8Zh4ytjFWyPxPZBLtMxRdti2Pm
/ERL45Om6pH9Q97f7te9Ze9T3wnT/PtoOGBX34mey9jYZO3CfncmfTeVn27b
+OgDP/cg94po7IurkPPP69+H0nW9NSbzc7GboN+XrAmbxg8tkW19WHPx1VkX
6npxAK9H02/CcVofhXfeiMa/Qc8/P9y7q+0F+X60XCxeX3yIruuyz6u3Z1+K
XTaJL1qCY+ZwSxbGzZz06oNe9P9n/2nEGNcKs/5vsepn4Zp92BtVthej2fu8
PM7FyWX0cuaxtAl2WWo3XYpjlvBbkCXxSRHT9cn7LW9H1iHHOfpN81Ztrpwz
31pQzjm5b4vn4IvMOXqmsMm28dEX48DPPci9I+Q/Iw8s2MPnzRSmmFvHsn8p
x61u6h/aVFj7N90zzq37VX47t135nk8YRpxT1fVnho++05q5j327pOdbv5L+
zXrvvqi5N0uxy7bxRRWO2RS35Oct8Sf16gUG8+dxHbZJ/w7fEtyDffC89I7K
f+G61/Vx1tW5DEuxy7bxRT0cswlucVnqT5qqVx4D/N/HPW2s74Q/hWH2dR6L
ZFM7DmswwpjqrbnbxEcf+LkHuddE8+NzMebIZDtLtsMg29g2WP+1XyU/5r74
vXMyxe+dkrwXdqny27nu9fMXHD+Qt4V4rn0IXEX3OcgedDVabhq4E5zxAvfz
UrpP5XsjfZc/l4Zrrs9cN/dR+XTe9XdT2bb5UJ+rM9f16nc91eeNaH311vAv
7XV9+E1+wxsL+mepvFbU6Q2rG23m5df7c/yRrv+2lb/3uRbjOOttPtgYpbff
ifn2n/vciGXjr6qft1Pua58PPifeGL7fly9lEw6N1hDfw4BdeuvCpvHRB37u
Qe5FYa8jDII/wfemvT0O82FTe7nv1eSv2tS/tC/Zht+rMk7thXKMq9sz+Jt6
qj1Ph/9/LraLGeiVsTrnyP0fU7FSyBK7y6756BC3txATvQ/fIeNsSnr19Hp5
X4K9Pc8AWH9fNrTsx4po44Z/8/jqxUYtzW2wD78Xc5lcURdjd5/oEn9Sr55V
Ll6widtgiJ1W2S/H/vzWS2OYK35LLz/dNvHRB37uQe5V0Zgm5xtrNvMGvZLX
jvOd73uyxD805V+6U7INv3eK/5Nt5egUtakwivaTnP8L71f7QvEG9+Fzl2hd
y3wlL0fWexVfdwl22Uc+uik/0T7ilXjOnD+pV1/XEY4PqLee+49itYcn5nYf
e3fmCsJewX2Rjjkrvu7S/C77yG3Q8xPtK15piT+pV9/sA2cswH+G93crVnOS
nP/7kKWctuwj6uWn2zQ++sDPPci9LJoP5G7RvD6Kcbxhxvib5s/dNn7I97Z3
Y95t6gPL8Vfk+dN6KBs03EvisJ8ZfhdWYU13Dq9kHzEPkh9Faztijlzv5djj
rLfnsMtcfNES2YTfsg8csyQ+qap3toOAGWhP+f1+J5rv4VrxjG1E9f1ijPPP
OC8t55TMfN0l2GWb84uyLOW37AvHzHFTevV2rOf9TP2Vv1p2F82V/ztWuGNX
8VjAKWHtRXr56TaNj7644fUHOcgnTTS2hV+07/CcJlV89NL1Z5/xQ9vEL+3y
rl4dHZ+AS4RFtD5cisZvwb6RuXGZO8i//i7quIvkfbvO9hMXBt6EcsM8PfxW
8XXnsMuu/qJdebm74pg5f1JVf7dHHsUqTx14RWPgZrRcR+iYXW0Nnv9Oz4Yn
ho3gdXtH9v0twS67+ou25eXuA8fM+ZN69Xcb3NXho7VPtlBhxc9bufZhr1hi
183nA/Ty020SH33g5x7kXhDiFLBF8vE9pObwM9H2ABVvd4lt4m7ED91J/5Lj
E+kk7ceuRcMUjk9ymXqxqv692/eJYdG/j6R7djlrrbofHcO6/PLwXriNp1Hv
SyvZxV+0C27JsiuOmfMnZe6X+sr5vPDc6WM974Y9L8eQbCr5fnA7WBO8rO+F
Z65FO79pDrvs6i/aFrdU5dgFx8z5k3I7qLxqN89H/nKM/XKvxTieepd8Budi
Hsfm+drLT7c0PvrAzz3IvSKM46zr/QwB5fj8uWjrJeu251Gf26ftml9uW9nU
v1TZT/zfCp8s5ff2dAa+Z9reObOZTxt2zbYc0JxvHN6Lx01TF8ewuo7YjJwz
JmI3f9E+cUuWXXBMz58EXvFYFa7xMU77gUXd3o9e2kbH5/24t33O3eO4VPdJ
P78fLY9e1p27+Iv2hVuy7Ipjev4k8Irag7Mr4MxzPX8zFpRD+TF7RvbrLBU9
b8m5ST5fe/nplsZHH/i5B7kXRON86RnUnHn7pWg4BNw+xc+9E/nlthXsPlqj
ZEvS+SZL8cnS5y/l91ZYqop/cP5E5hZKiC3YhBtNLKULuv2hGGOnzNfN+Un9
vAn5ml6M7fP+3QnckmUXHCMdl+ON6cPKHgUedQ6027i8TJvug9FBOZfL/TH2
OUoyX9cxtPt/nT9zukFZkDuFW7LsgmNU55ux4q8w5sAr1d7C5xz9DT7MuQvh
jywtE3uWOfvbRXtXLz/dkvjoAz/3IPeK4CPdZM3U+NfY5yycHj/3bviHpmSJ
/US+mGfjzviXlvJ7K0znNhD3K4Flqj3eUjswduq8xqoMzmfKsb/IlM+IMxI4
P5p2notnuVu4JcsSHOO6nY/8QUvPqnQ+b46jzs+gb+b2EvRPzn3nfCz0O/jE
7ShTPiPdR05gny+VfcblbuGWLEtxDG3OWNMYFZdl6VmVzhlybJj3E3y/xJ7C
OUdzex3WaXBwjj3inXPx0Qd+7kHuJdE82IaTh71b9tO8btwt/9A2/p0puRPx
S1P8Xpcqvtrz27ndGh3RO2/oq9FyWGW7AOeLV/Wj3eCe3hfrfN0edpnyF2X7
DHjmo8QtWRzHVHilaq+p+KTcTs7ndb9rlYPQOQnoR/TWheG73lnw+u4zVuaL
9r3npelhl56/qLLPgGc+KtySJeOYjFewr2Tp+ZOqdvI4S9r4QtRxy9jGsK3c
Z9+DI5bYTLHp0N45Px3fTcVHH/i5B7nXxO2R24jzLu6Ef2jf+GSp3In4pSX5
e6v4LffbcL4AbTLFSzgbTddlDnYl8ILRSxdiHPfEM6t1ftP4IunXV6Ply52z
z9xpcd18dSjXUxvcz7jPktuLfTrtypzp2Vp8HNKHjKHe9cyPo2i408+lmMIu
zKklAo5WW70Uy+wzd1rAK8QHiTt9/8J7e/FJub3cLgl+wZbTW/coF324qT3a
udlgMS/3lD3lwM89yL0qyvmxq27W3BLXYRv/0EeFTzaRfccvzfF7WUf9Pb63
5V79u8/zA2jzoxivz3NxRpvEF/XsLT37zJ2SJfaVTfkxvfik3G7gPLf1PRr7
6Uc9QxiU+eTviZjmjG8SX1TZW6bsM3dK5uwrm/JjevFJud28T9Vu98fue8Ge
+PkA4FhkLj76wM89yL0qvbPeNhXWsko+CfhkE9mXf2mO34s9w9cc5zH43n3X
XGISP8cKbOF2n16OtqW2tk39RPvGM0v9QZVsgmN6/qTcfnAU9N3x8Pwl3Pm5
d2PLYZzmc7Mq7LJJfNEmfqI7gWeW+oOybIpjKn9Sbj9safStPp+P/cYmeHxR
zk83FR994Oce5F6XTWzFU6K58hdxb+CTpbIv/9IUv7eyW+O7Zh2Hf7zr3h19
gN/I9+xTudnm+nVf/JZN8cwueKUnm+CYyp+U88OAYeC3PF7cs4mgPx+MhoXA
JT3ssnQN2Ae/ZRs8sy1e6ckmOKbyJ+V2zDwmfLX7Eji6OT/dVHw0vJp92WUP
cpCPo+xjTUf2df7cJ1F29S9N8Xv57Zz9/0r6Ht/4tuu6yiyux0m09Rr/UYVd
lviL7jQvN+OZ02h75n3hlZ4sxTGVPynnEfEY6l1sMLrnUqznZMJel7HLUn/R
neTlVnhGGI7zvfaBV3qyFMdU/qTcnh6HJA6M5tI+bDBuS3Os0ouPPvBzD/Jp
kgN+2b/s4l+a4ve6vvT8dlrftO8jh8U2Quy4Pp4zpIoBnvMX3a14omxfUf2f
sv/fDT7w0rjr7E/ydmVvDQfmaqzjxSVCG2CLg69bYZcl/qK7FU/k2I1xyFi+
G/yZpTgm+5O8Xelj+nUfNhjyER5H8x/14qMP/NyDfBplX/4jzR/8R/lDrMyn
jTu2i3+px+/1+GrWSvAC+ot78BnMiZ55dXincz57sb89THCnccum/qC7yQde
gmOyP8nbV/ceR7OdKO8KfffggvfrWvU99hfPr1vlL5ma83cat2ziD7qbfOAl
OCb7k7x9nQMjHhm5eyX3x2Zjj7wUD0Tj5vbiow/83IN8WkVjf5s811ny2X8I
+Rey3vm04Ztt/Es9fq9jGPSm2vA0Vnrvp2Nlg3cdOCWKM0XvwdetYn576+Od
wi375q/cDTwzh2OyP8nbWXoQO9rP3/78Yqxiki8teK+eQT8+EM224thlzl90
p3DLPvkrdwPPzOGY7E/ydsaWpnaWLek3Y9WffsbVEtHz1JdwX6r46AM/9yCf
dtGc+lHsPv/hH27z/k8bvtnUv1Txez2+mvx2Wu90Fu7v3v78UiznZMr2orUW
v0PmmPb8RfvGLXeCbzsldxLPTOGY7E/ynITSR+oP6SSdv/NLsSyvGWepwhs5
ijF2mfIX7Ru37JtvOyV3Es/M4Rj3JzmG0XcPx+pcAvXhWzHGHXOia4V3yE9X
xUcf+LkHOchK8NduK/ncuH3KvYxvNvEvVfxej6/W2U1/cPvzZ7c/f37780Gs
2iTraPQ079L+/tpwv/vv/flVnpB94Ja7jVfm5E7gmSkc4/4k2l198cPbn7+K
lT/294ffq/F/zp7zlWi+p+NYj4+psOy+cMvdxCtzcifwzBSOcX8SGOaf3/78
ye3PD2LVh/qX+MvML8+2WLCKn2Xi8dEHfu5BDrIumhPb8L7w035UeudewTdL
/UuZ36vrtFd75/bnT2OFW4RhfjVWa9y37Jm005Xhe92j3KTSmVqDj6Pp08pf
tCtu+bjhlTnZJ57p4Rj3J/3rWPXdH9/+/N7tzzdj1beyj74SLabd87jqN9lo
ZH/ReZkn0bBLz1+0K275OOGVOdknnunhGPcnHccKf74Zq778wfC3zrrFXsJ6
RD9wtsD90c4SoL+JOTrwcw9ykL6A+zdZ09hvfJxtmJ9EfLPEv+T83tPbn2/c
/vzW7c/btz//KZadBQfvTzaYh6Oty9lftC1u+aThlTnZB56pcAy8TPWD+BLy
/4n/Ir/DXCw1HIg3YoV/wC6Vv2hb3PJJwitzsg8808MxGg+ahz8bK1uo+uJn
Ytm6qmf9IBqf5dlo8dEHfu5BDjIvmmNLz3z3OfVJlo8zvpnzL+l37dG/HCv9
JVuKYh42sS3DxdAeMfuLNsUt9xpemZNd8EzGMU/c/vxGrDCouNc/iNrn1BO9
WzoTHOrYdVPcci/hlTnZBc9U50TKj3crVhz6d2OzXD4aO/iGsMcc+LkHOchy
Yf/ttk4E/y1z6l7Lp1vJxwXf9PxLx7HibQq/fDa25yGpT58b7l2KWz5teGVO
tsEzai/t2YU91YfSe8Ih2/gI9O537Z1LccunCa/MyTZ4Rm31c7HCn/Lbqg/l
z9uGU4g/Xhj2wM89yEG2k4xV+Ddjmk+7fBT4Bn1zM1brJHG38AS3Ea3BWi/h
DVb664BXNpOleEa//USsbGmXYzedRdzuFG454JXlshTPqF9/MlZ8JTgt2853
PV9xS0vPzD7IQQ5ykDshdxLfKFb2x2O1b982Z6uL9KvvGQ94Zb9S4Rl9lLdF
HOrj2D2Oj/2745EDXtmfVHjmJFZzUdgFn8+uezxyMR3kIAc5yMdVdsE3innW
montZFd/HrmADnjl7oj6TTnq1M7CoM/FfvwFV9LngFfunGjO/NPbny/ECod+
KVb4cVfRvNvnGZAHOchBDnK3pYdv5Gd4dvjIbv2tPb3vlThglrspJ7c/r8YK
Y+xj3x7ReC8HuTtCDgPZS8RB20c+c8k+8ooe5CAHOcjHUbS2yW4tvuC+9NWB
33R3Re2t84ql+/Z1/ikx1Qe5O6I+JO7r/2vvDFIQhoEo2it4/8u4cOkVvIJn
0A9+DNnUNGM7Td6DQOlCkKHJZPIzX99jhO+0qD0aAQBGwPfEXJ+Juqeg3yk9
nBn/H1rzru9xWw/Pz9wS/K/Zhs4ApWOKql+SgwLAiLgnp5+j9u5rHsoQi3u3
uoddRE8CtBP7o/yl9AeIQGfC6JYAYHR67mvWv8OcuR9a6y7Fc8SdE9cDYB+s
TxNRewlr8gEARkeawV7dir3hYD/KnFPxi6ibzNJbMgv1viFiD4AGGwBmwd4P
PTUYrXv0nDiWrT6qxj0n4ThU++qJgXv4kIMCwCxo3ty6Z+udcyEG+6hu9UdG
M5GDnr2Aaqmc/wHATGjN0/rVqr9V7QbdSx6cS7bkMNb/Uj/LgfPQ1rtIij1n
uAAwI9YP/uJ7W3p10rMuFy1xGcULfjRa4uKePS3e8QAAI6I503NnfY7ue572
t6VHVk6sadKZYO0ZqGfV2ZSnotfNi+LkGOmbq3MT9256LtTOAACM5krXozU/
am/3WL4+4tRc8qP1z76aiuF9+cZT7+jVcw6cpzw+Q9+iv0m9p+YCp+IF1SWE
xg==
    "], {{0, 279}, {560, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{560, 279},
  PlotRange->{{0, 560}, {0, 279}}]], "Input",
 Background->RGBColor[
  0.9990997177080949, 0.937270160982681, 0.1552452887769894]],

Cell[TextData[{
 "Ohhh!  I've just realize something. \[LineSeparator]You said ",
 StyleBox["\[OpenCurlyDoubleQuote]every element of a previous layer was \
connected to the every element of a next layers",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote]. \[LineSeparator]So, let assume our input is 10D \
and we have first layer of 20 hidden units. So in this very basic example ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["W", "1"], "\[Element]", " ", 
    SuperscriptBox["R", 
     RowBox[{"10", "x20"}]]}], TraditionalForm]]],
 " and that\[CloseCurlyQuote]s mean a lots of weights to be tuned. \
\[LineSeparator]How about the images?! The simple image is a NxM matrix so \
your input is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", "\[CenterDot]", "M"}], TraditionalForm]]],
 " dimensional e.g. small image (64x64 pixels) tends to generates input of ",
 StyleBox["4096D",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["! Deal with it! ",
  FontColor->RGBColor[1, 0, 0]]
}], "Text",
 CellChangeTimes->{{3.7069604590253696`*^9, 3.706960517910323*^9}, {
   3.706960571241353*^9, 3.70696063877411*^9}, {3.706960703499*^9, 
   3.7069607646542587`*^9}, {3.706960835100833*^9, 3.706960835504216*^9}, {
   3.706960871238799*^9, 3.7069608897162313`*^9}, {3.70696098120417*^9, 
   3.706961053071714*^9}, {3.706961083293648*^9, 3.706961176155262*^9}, {
   3.706961215229377*^9, 3.706961423374667*^9}, 3.706961467250103*^9, {
   3.706961630015559*^9, 3.706961639388658*^9}, {3.706962186643169*^9, 
   3.706962235443254*^9}, {3.707053612187964*^9, 3.7070536127467957`*^9}},
 FontColor->RGBColor[1, 1, 0],
 Background->GrayLevel[0]],

Cell[TextData[StyleBox["Yes! you are definitely right. \[LineSeparator]The \
MLP model is not designed to work with images. Nevertheless, It is very \
usefully  when you working on categorical data and your input is low \
dimensional.  ",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.706960891496525*^9, 3.70696089962227*^9}, {
   3.70696095956717*^9, 3.706960971820764*^9}, {3.706961003410532*^9, 
   3.706961004889517*^9}, {3.7069615421196957`*^9, 3.706961688024987*^9}, {
   3.7069617657728*^9, 3.706961802560068*^9}, {3.706962247491143*^9, 
   3.7069623086341467`*^9}, 3.7070536568019247`*^9},
 Background->RGBColor[
  0.9990997177080949, 0.937270160982681, 0.1552452887769894]],

Cell["\<\
Ok, fine. So how about the images? \[LineSeparator]Do you know any other DL \
architectures designed for analyzing images? \
\>", "Text",
 CellChangeTimes->{{3.706961830610454*^9, 3.706961884429158*^9}, {
   3.706961946498948*^9, 3.706961986821232*^9}, 3.706962322241441*^9, 
   3.70696305209256*^9},
 FontColor->RGBColor[1, 1, 0],
 Background->GrayLevel[0]],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox["PATIENCE YOU MUST HAVE my young padawan",
  FontSlant->"Italic",
  FontColor->GrayLevel[0]],
 StyleBox["\[CloseCurlyDoubleQuote]\[LineSeparator]Before we move to \
convolution networks I would like to explain to you the idea of convolution \
operation. ",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.706961990289316*^9, 3.706962006533135*^9}, {
   3.7069620408466454`*^9, 3.706962142923253*^9}, 3.70696283656446*^9, {
   3.706962868785831*^9, 3.706962890260046*^9}, {3.707081189828443*^9, 
   3.707081190908154*^9}},
 Background->RGBColor[
  0.9990997177080949, 0.937270160982681, 0.1552452887769894]],

Cell["\<\
Lets start from the basic. What is convolution?\[LineSeparator]Convolution is \
the process of adding each element of the image to its local neighbors, \
weighted by a kernel. This is related to a form of mathematical convolution. 
;
For example, the element at coordinates [2,2] (that is, the central element) \
of the resulting image would be calculated in the following way:\
\>", "Text",
 CellChangeTimes->{{3.70696833686029*^9, 3.706968352728838*^9}, {
  3.7069684249422607`*^9, 3.70696845014361*^9}, {3.7069686520779057`*^9, 
  3.7069687598639297`*^9}, {3.706968830339897*^9, 3.706968837946515*^9}, {
  3.706968891869516*^9, 3.706968933457911*^9}, {3.706969439040897*^9, 
  3.706969465552243*^9}, {3.706983325156167*^9, 3.706983325501507*^9}, {
  3.707081205222122*^9, 3.7070812231168118`*^9}, {3.707242033297512*^9, 
  3.707242039253756*^9}, {3.7072422756746893`*^9, 3.707242317952119*^9}},
 FontWeight->"Bold",
 Background->RGBColor[
  0.9990997177080949, 0.937270160982681, 0.1552452887769894]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {"a", "b", "c", "d", "e"},
        {"f", "g", "h", "i", "j"},
        {"k", "l", "m", "n", "o"},
        {"p", "q", "r", "s", "t"},
        {"u", "v", "x", "y", "z"}
       }], ")"}], "\[Star]", 
     RowBox[{"(", GridBox[{
        {GridBox[{
           {GridBox[{
              {GridBox[{
                 {"1"},
                 {"4"}
                }]},
              {"7"}
             }], GridBox[{
              {GridBox[{
                 {"2"},
                 {"5"}
                }]},
              {"8"}
             }]}
          }], GridBox[{
           {GridBox[{
              {"3"},
              {"6"}
             }]},
           {"9"}
          }]}
       }], ")"}]}], ")"}], "\[DoubleLongRightArrow]", 
   RowBox[{"[", 
    RowBox[{"2", ",", "2"}], "]"}]}], " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"g", "\[CenterDot]", "1"}], ")"}], "+", 
   RowBox[{"(", 
    RowBox[{"h", "\[CenterDot]", "2"}], ")"}], "+", 
   RowBox[{"(", 
    RowBox[{"i", "\[CenterDot]", "3"}], ")"}], "+", 
   RowBox[{"(", 
    RowBox[{"l", "\[CenterDot]", "4"}], ")"}], "+", 
   RowBox[{"(", 
    RowBox[{"m", "\[CenterDot]", "5"}], ")"}], "+", 
   RowBox[{"(", 
    RowBox[{"n", "\[CenterDot]", "6"}], ")"}], "+", " ", 
   RowBox[{"(", 
    RowBox[{"q", "\[CenterDot]", "7"}], ")"}], "+", 
   RowBox[{"(", 
    RowBox[{"r", "\[CenterDot]", "8"}], ")"}], "+", 
   RowBox[{"(", 
    RowBox[{"s", "\[CenterDot]", "9"}], ")"}]}]}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.706968559647265*^9, 3.7069686084406*^9}, 
   3.706968663464222*^9, {3.706968708264348*^9, 3.706968709927044*^9}, {
   3.70696876581042*^9, 3.70696887620284*^9}, {3.7069689179019337`*^9, 
   3.706969050680642*^9}, {3.706969321878977*^9, 3.706969487780883*^9}, {
   3.706969606590502*^9, 3.7069697032432413`*^9}, {3.706969782122744*^9, 
   3.7069698231190567`*^9}},
 FontWeight->"Bold",
 Background->RGBColor[
  0.9990997177080949, 0.937270160982681, 0.1552452887769894]],

Cell[TextData[{
 "I suppose you noticed that this operation time complexity for MxN images \
and kxk kernel is ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"O", "(", "MNkk", ")"}],
    FontColor->RGBColor[1, 0, 0]], TraditionalForm]]],
 "."
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.706969880880589*^9, 3.706969914551845*^9}, {
  3.706969974786738*^9, 3.706970002314473*^9}, {3.7069700455362473`*^9, 
  3.706970092881044*^9}, {3.706970143404183*^9, 3.706970160785802*^9}, {
  3.706970252975709*^9, 3.706970254313944*^9}},
 FontWeight->"Bold",
 Background->RGBColor[
  0.9990997177080949, 0.937270160982681, 0.1552452887769894]],

Cell["\<\
Now, I would like to show you a couple of examples of different kernels. 
But first I need to import exemplary image. I take image of Lena. It the name \
given to a standard test image widely used in the field of image processing \
since 1973.\
\>", "Text",
 CellChangeTimes->{{3.706970169141883*^9, 3.706970193332204*^9}, 
   3.706970411107629*^9, {3.7069706117110577`*^9, 3.7069707121451597`*^9}, {
   3.706970949925487*^9, 3.706970968378981*^9}, {3.7069711864260473`*^9, 
   3.7069712383745537`*^9}},
 FontSize->14,
 FontWeight->"Bold",
 Background->RGBColor[
  0.9990997177080949, 0.937270160982681, 0.1552452887769894]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Lena", " ", "=", 
  RowBox[{"ImageResize", "[", 
   RowBox[{
    RowBox[{"ExampleData", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<TestImage\>\"", ",", "\"\<Lena\>\""}], "}"}], "]"}], " ", 
    ",", " ", "200"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7072424777986298`*^9, 3.707242514708371*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJx8u3d4HOl95+nnbnef/WMtaRiGHA5HyXc+27KsMJYmkMg5dQ6VQ3d1zgEA
SeRMgJkzHOY0zAGZAAkQOQPdjZw7IQMMI51l2dJwRtL9CmPZ3n2eved5WU91
o9FdjfdT3/BW8Qcqm0T7f/zFX/yF67/DRsJmxzid7GHpd+CB3Ooy6KwaLsXq
1ug0zg9V/yc8OfRv//j95cqCpaN5qxWHVivzlsuzwuXuYKkjdNQdLtYHyqzh
IlOw0B0uMi+V2FaqMjdPuDZPu1+eP/Ly/KHXn2a9/OTQZok9dMQ2oTO1CIjb
0cpLB7HP47E7ScpHKXhdCtYgQOtTZLWwzUAb0pHGDCU8UyfAalKljemyZgna
LsO65WivEu2h8AEc87DkMIF7OWqMY3wq1sNyHoN2VKv2qplRFTPCUh4N6VFT
HjU7auDGONUER4/p1BNablrDTmq5Sa16XMeNaln49XG9ZlSv9WnUY3puQq+a
NKjHDNpxvW5UrxsxWHx6k0erGubUHg01piG9am5Yr/EauFFOPcaxEypyXMtO
6NgJLTNuhPenRlWqUZ1uwmbyatkRFT3KsfDOo5xqSEV7VCqvRjOi4Qbh8Dj1
sIqFd/Ow6kFWPUSzwyzTy6q6Ca4HZVpxVaOCqpdiD5OlTQJ5D4qNGZhph2ku
1x4ocgSP2oLHXP4qRzDXEMgzBPKNwUJzoMgdKrIFSzLDpc5woSFUaA4W6EOF
+lCBPpynC5bAa7hgiSFQYQuUmINl9uBRZ7DEslBoXL/o+E33sd95z/1+/OpX
0ze/nrn+r6PnVu4VNNPqW0nK+xlYnYR4hhFPUfo5rWoj6ec42UHgbZT6Oatr
wVXdON6Fk70Y3k3RvSTVTTE9jKqHZntxrBOHfa5Xpeml6D6a6mXpDpRuV+Kt
SqILZ0KlOS8vFs5kabe5yt3mKme5LHObK3uowvW/clX8v+fqsG1Ca+S5ikEu
H8Ru8Vwh21yh33BVw3OF/Ceu0P/EFf5vXJHAFe5hgCvCq97mSq3iuQI8gCuO
52qY54r6M1eaMU49oWHG9OrJb7jSbXOl/3euuFG95s9csZN61b9z5TGYfXqj
R8MOw0f8O1c6zmtQ+zighedq7D+4Uv0HV9b/zJUKtn/mSjvCcYMMCds/c8Xx
XDH/zpW6B/v/5aoQuLL/z1yZtrlybXPlDpc6trky/Zkrw79xVfRnrkq/4crB
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
4jaBtFMi61Wi/Rg6iChg+EglNKxRejuug9GAWEHqZiEz03xwUtE+muHVjIFn
iAkI8BDLafBHAlxvGkgAaQJbZKBK8MEJ0hSY3dS2b04x5BSpHKexCQLhxZDC
JqAgwNQTBP9uYGTbzQ4cDeLiKMvTCI42ptb4QOIAP6iQ7DfLF/R21Cd5p4be
B4dEoiBWHhL3kRjfBBl+Z5TAfThERApeNkRQvZS6C4OswrTLiKcCZZ0IqxXA
tGI1EroFgWaqn3LZ/TmZwaJDS+VHVo9lA1qrRzPXjztXKmwQt5argC6Ayrxc
ZQMTXILcW2KEkrXMLzhYQwWGQIEpkG9eBMnKM/vzjQu5pvk8PmJNZ+oXiwxf
1Of/fuj0l5OXv5q59tX8Tchav+2vmjpmeJQmqc6QQ8pqUmDPMT5fdSJ4N4Z2
kSRviPAQwztxspPR9LGqPuCK00DSmDTqxznV7YMC/f+TjryXhOyJQfaC/UXC
oHYfZPdFat+L4utekW2tyLxWYt0oN62XGtdKLavfSFaJba3SvnnS9eJU5uZp
F4Sr9ROWdVDmo7alctvGUfNGuXU1lws56AlC/iwl4+6HSZffT7ryi5T7Eem1
0Rm1icInicKmJMhXsrpUeV2qtJZvgsKGeEFzUsazdNGzdHGbSN4lVfRieD+i
HESQIRwZwdFhIIfBR2nCQ5AwTWM0b4ijNAMKADowxkBM4sZZsEIWthNAF+gD
oMVQ0yzvgFM0BroEUE1BAdQYpg36KR03pWKmSXwKRSZw5RiOjKHIKK4ch/rJ
40QDZh6CGIFoR2FQ4kYofJjm1cYHpqZSjXF8NhsH0vgV/m3HZEi+roKyAUsU
6aVAlECvCC8FWPIggej5CJBcUDNmhCQHIFzhbC/B9jKaDgX9TIA2C5SNqeK6
FHmTmG7DOC9rmLZZ5w65gsWHlstzliuPrFRmrVRlrh7LXC13LlXYYKyUW5fK
jStH9SsVxqVi41KJdakYqpYpXGIJ8+ulMKz+Iksw37AIkpVnWswDvTLNHjbN
ZnJrn1p/23P0S9/5N9NX3sx9/vUiuOH5V82FrXr6YaK4XqxolOPP5Eg7zXZS
EKWg/fELC504Ac7YSTEdtAqeGYA/BaRZgwG6OWiIZlcUtj8RfzdB9pcfITsO
YDs+onZ+zO0+YHw3Ursvcq0UnBpc2wJKtVlmXS8zrkHEqrCuVdjXjro2T0Jc
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
qHBsbEem9UrHq9OO1586X520bhbpV7PpkBUNmomgCQvZibVC3dYx89YJ03qV
bfOoZbPK+uK49VWFYSOXC9uJGVrWmiy49UHS+Z8nXP9l6r0DaY8PZNTFCZ/w
91+J6yG0J4rrkoVP4rfvcEgSPUsWdKQIu9LEPSJ5v0QxIpd7lEovqhxSyDyo
fAw8i8JGSeUorgT5AtJGIUpRxISKBXimt9P4DM3MUOQUhCjQK4LirwaSvDRN
U8gkRkxh+CQG+sYNmo70Zxf3FVYMlVb25RV3HS7oKyjrzi0fOXp88sq50Suf
eD877btyYfLO1dnH1yfvXxm7e3Xs1oWRK594bnw29eDyXM2l+YYb/pa7/tZH
E/dvDB6vfK61tgiUPWJ5vxLvR6ghgh4hVUOM1kuwYyQMxkOoPPwWhJT0QZDD
CBDbITneJ6cGoQxK8Q4Z0SFQPhMRTQK0IRlpSZY/F2GDBDul086adbNu+0Km
dcZlnXXZwRD92daFQ85gjjtY4AjxXNkgk4fzYPBX38I5JtCopTz9Uo4+BFxl
ccFMLujk/JnAkmrOzsF21gI7gBM97eTmHOwciICdm8/Svr59+Muhk19OXn+z
8OCrUPUflmr/NHf9iyfF3XqmRYZ0U/jNWJHh7YPSbx2UfydCuTMS3clfpsF3
Rqr2xWn2x6nfiVXvi1ZDstoXQ+6NwnZFEm8fZN/+iN35EbbjI/KtjzbLQX/M
vKmdcXxx1vbqtOXFUQOIVdiOBDjZAiVb0GBhB7FepAZzBK42gatK60uA6rjl
ZaV5M1+3ZMNmGPnz5PQb7yd+9tPEm79MufNh6uOI9OpoQR2EdvC+GN77gKv6
BCFw1ZwgbEoUQmiHP2+PgugXy3xyqU+u9PDLlagPRce/oYLExnHFGL9Cjk3w
y57sBE1O8GtQFM8VSU3x6wYQouD1KH/Jj4Cf4lPAGKUZYSz9jK3fXTCYV9bh
LuzLLfEUlfQcLmp35/UeKRgsKh0uLR09ddxz5rj37PHxC2cmrn46efvS1KM7
4/euj35+2Xfj4tjNz6YfXBp/cGnq4YW52muBxtuh1rtLbff8z+4PHj/WgnId
6bJeJQ5RvA9nhkjOg6t9JOeluGFa58HpYYzyEaphlBpCSQ/om4IcUBB9CqJb
CIqHPxfBQJ+J0LpkZXMG1i7FRyh2Uq9dsOgXnQa/G1TLPOey8jdlQYY/5FzM
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
hA+j5/WakB3EyrpyxBo+bA1nm/yZxnmXFQL8nNM06zTN2S0zdtOc0xxwW0I5
VrDCRYd20Qpmx3MVcKjCLlUoi4MnF+ysH35kgy0oFXiilh/wDGigS7PoUPGA
ufULWbp5lx565Zu2Y39auPGnydMeJ0l854DgrQjZrmj5rmjFjgh8d5T6nRjN
u5CmYrTfi9PzFwFj0B1R2M5IgApIwyG6vwVQRdF7InTfizJ8P1b+1i/j/+tP
f/Xp4V+fc31x0rZVqls/rApo0b50wZWfxp7+m1jQnD6JaFaDLrnJjXLD65Om
V2etkPBfHje/Ou6AfLUFXfIItWRSzpJw3qVd/Gnc8b+O/eQniZc/TP/8w7Qb
B0UP4mUPkxSPkpQP46WP4yFuCR/HS2oSxNX8eqmkKU3WAlYIEUui7BJIuwSS
XqmiV4728PaBDsjRIRnqQTA+yfMrQviYEpnE0HEUGeOoPpGwBU5/EdYlJ/pR
qkNBtmNcF8V10brnKPec1ndorH384rm9Xeds19u7Tc5BV1a/wdKhMXc7szss
zm7noeHcXG9pydjJirGzFdNXz07f/mzm5qeTt87N3L84cfv8/ONrcw8uAmP+
hjuBJ7eCz+4Gm24HG2+FW++Fnz8Mt1eHOmr8zx/4AbCOJ2uDTf7O2mdHCu/F
yOA71qVIn6RIn6bJ2gSyTpGyQ4TAaBWgLRnKRgHRmIKA/dWnovBKSFltGZhX
Sc7ptGG7PnzYvppjXz5sXj5sDR62+bNsCy7zrNk4bTHNWM1TJsOsUbNgNfgP
WcAQA259wKEBpQo5wAo1QZcmBIkLfNAO5qiFrd/Ozdt0IFx+py7ghK02DFuX
LuDW+TNNgWxTKM8RPmT+lzt5f2ov7NXKqR0HpDtjlLuiFLsikZ0HsV2RQIt6
TwS7J0q9P1b7DVS7Yuj92+tX+2OYffHI7kh8TzS5O1L/gwT7jzLIfZHR//Un
Sf/9F7/6LOfXn9i/qDJsFmiXrdgYKa+OSj37dzFnfxR7PzK1VyyZ16ArWexW
meH1Kcvrs85XJ90vTzheVUG4Mm6VGTeOMGELPkvKmxPTPvtx3LG/iT77k4Sr
H6Re/zjtdqTwYZzsfpzsXoLifjJSHSd8FAURS/g4TlQdK2hIhFNb/ixN8Vwg
7xCjnSKkU4J0gxuKUYjxQ0rgSulRyMEHPQqlD0UhqPuUqE+smDXppowsH0v4
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
z/x9/KVf8KfY4yR5Nf/dpdVwciXIa+Ll9xOVt2OgEiqfZBCDCDun50Iuw+oh
03q+dS3fvF5gWQftyrGGc+xBGzdFkx3pkkeRafciBI2J8mGEmtFqAg7rymHr
cqYhBMzY1ct2ZtmlXnKqg+CDdk3YzoWcAJI+5IAtoKUOA34uzXKWEcbKEfNm
kX3Jrjr38xTZzljF3ljl7gjldw7guyOotyPVe6IhqHN7o7TvRqn2RGJvRyLf
Oci+E2X+fhy3LxZ5O1b5Tjy+KwrEyvS3gtwI0v5jifxbB3R/lXSHtEwUHF4/
nQXEruXqQkZsWCy6/VHqZ/+QePn95IvvJ13+ecrdyPQ+uXxBR6xmq18Uc69P
GF6dsbw6ZX19xv7ylOVFlWOrxAT5KmjEp+SS5ti0i9/o1T8k3uAXGQT3I0WP
IjKqkxSP4a8aKwQTfJwgfRy7Hd2TpKBXT1LELUIFjG6hvEMo65Aq+OV3fhWL
XxrtR4gRfrEauEJGEcUoik8zpA9RtKWJW1NFbVC4MmTtUrIDYbsQtl1GtCFs
L8l2KulOQt2upDoIiFvqdlLdqdZ3ay39kLKMjj6Dud9k6TNYB8zWwUz3oMU2
bHf4jmR7SvInTlRMf3J09uoZIGrx4ZXF2uuB2uuLtXcCDXcWa64vNn4eaL6x
8PDi5PWLE/duzjxrCvZ1bIz3v5js2/Q8X/d0b3jbN8a614fbtkbbX070vp4f
+afQ2Ct/X7Uz99TfxV07mHEH1BuIipfUxosfxEnuQaOJl9+OlN2LUTRn4AOI
ak4HFgZcGdYKzGu5xo0882qOBXxq6bDd7zBNa7gOoeLqL1NP/yT58s9TnyUr
fIx61gSmZlnKMgEwYZt62alZztSEHRDXQaa0QTsHQIbskNV1AZc+6NKFXMYl
twE4XMkybRQ4NnJMtUlScle0ZEek/C8/Rr/9Ef7WQXpnhGpPBBRA9f5ozd4I
bm8kuStKuTOS3BFhfC9a/14Mujsa2ROD7Y4i347R/d8Zzn+QZf5cwf0wyfT9
xBsKrTcne7Y4M3gse+sIHA81jUvqotMu/DTh8vspNz5Iu/rLlGv/mPQgMr1f
LJnVIavZ7GapEXzwizPW12dtr/mIBcXQ+qJUs36YDRnRcYW4MVVw+Rcpp36c
fO5nSdeBq4/S7kZmPIwSVscKa2MEj2JE4IA1aVhNggTcsCZe3JAgaUoSP82A
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
7AwKNwXDQlGIwCwAvvKCEEuCIcxjfIYe4o4zk/6sbL0oi9VEB++HBIhwfpMe
vlAf9AJ9EzeFII3DiLMo4G+UNR//RSA2n4CdAPpBaPgONViMhRZirVNDlojB
i/5RR9xEXVqSvkCgy8s45iQq0jPUZUWbCQmbnGR1WamhNM9QmW9obzD2teg7
m7TNVaraKnVVmbap1jjSbZ4ZMfS26OqLFBUVqs4201CTobPR2NdgmuwzDLYZ
+hv1nQ2msVYA89Ac0HS/eXHGLJqxSSbt63P6iYGT1jrl2JBhYVg/N2CYHzIs
TYFuaBRPAYEZlybN0lmjeMYoBVVxUSsTaeYnteIZtXhBv7JkPVq19DY6eIEX
WUx7aqAhPkSXJTBMT12crFxujxtmmzXjberpEVAHoInsfYl9S2TbWAAeZQU2
tTYHQta2sXi2vni2I7k4XH4FQlCx8Uaz90fzlm1rKvTvMZiPEIGfeoY8QIXe
RYTcdmXcgYXdcQu57hzwkVPgNaewWy5RgORvw0JvIVi33evg4RvcLMVL4PBZ
B2nph3ygomwtIKuybDUwq+IcZSFfBUKwkK8oAtLKBHB1Wsg/yc94L630MRRx
3J0APGQCmBUcZCIemsKDeY+7ei0gvXeJOH0YBRCUPScBOvOqIuFtbeK7Bt67
et67hjSgq1eFcWcpYQo6ReiBbfsOVfM1ApTBNidcnxO00w1acwVSFQ6dYTuD
wIHOOO0GHYE1BR2zhl1AA1ERRWj8ohd+1tNn8AesrfXlfx1XX1Yl6FmBhyGg
/fkueBDn0LRZTz8h2m/S3W8G0pjfEg66i/G0HVqI3D9MSgwQE4NWA8K3gxli
fLAkOE4Fwo6foknjadMTFUkJJ/z045dZkKgS0jSFLw0V+dqyEnVZib6rTtvd
rGmo0tRUaqvLNK1N2sY6Q3+zeaRJ1VB9lPlC095gGgb2VaNtb9B2NFn6m4yD
7fqORv1Qp7a5ztDXqB3s0Q+1QtA11KhtKtf1NCo7mnUTPcbZHt1ou3qkSzXa
q54Z0i5MaYXThmWRQTRrmB42zI9pZ8e0izNaiVA1N6mcHjidn1TMjOvXFg2L
U5bUKBs30JyVquvuOFsXXuzMnEl7TdPthulenXDavrd8dSg934LCzgzJSQjd
VyBQt2+KzgBWAWltiC52JVcHq++U2+80e/9q3zoY7/C5jfK5jw74FE3/1Itx
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
NTHVmpa0nJyxYEycNaQs5+c+7a9+2pq3VZO5UZG13Vn1YqLzxXjzs8Gqxz1l
DzuK1ppL1lsrH/bVbw00bQ+1Ph5u3YZGeXc+ngRBX/+zqYHn04NPAU1N9T2d
HoSuVM+PvTLdfTrROafXLGenmbMS7qu11twUk04+JQ41Jab+vH73bn46/o+3
XQ8jvY6jWGdR7FNw/7Noz5NI9iU87zKOfxbJOY5knyNFXPVqcA+1qDUrGrUp
VjEfJTPrDhIIwKKnqFaBcUoANKVeMQJbrlxNUNqSNRBlQUBSmZMAruLMyXEQ
cSUozEkQg9kSYgE1ASxBoxpRtEaow5PUAn76CFIvmnIXQ1liuG5yvZ9HcV8b
hG/Tw/byIvbyI3cLonYLoqGX7ODdBMlLOX9dwBkgMaA+mc+cc79EAUGsgqwa
tdGR3IKgtAKgwkhNDgBOJEBQUE8yEnJZwMB3OEONEzU3MaVX0C+qDf9cyv+t
O+6ndvV+WeTb3JBXqZLHcu5Dqe+zWO6W2GfOjdnngG93opkFvPVg0Xyg6J4f
f44XthgcMuQVMOQruMcS2iIjbcFSk1hqiwy3SKSLwWGT/tJRdvA8P2xFo7Sq
NHNCyXyQZFMeu5kSv5WSuKnVLEXpJqTGkbC0u9EZ07riqYSSYVV2c3Bqd4i2
WazIRImqif6PCtIephoeZsRvpBhWE1RQjiI1fSM5cTM1cSs7dTU5cc2oXEtN
AWc9L8eWlGZNSTKlZd6Xa+7rUuf0iY/ayl70lT6qTForTH3UWf24v+nFSN2b
6fbt/urNror1zqq1zsr1rpqt/taHA22PhtofAlBB6amug0wCAFU/ZNEBTU0N
PpkeeHZv6OU8UMCxH6zj1rL8+0lJtpykeXXcVJSkzdOnBu0xLIh80lX/y/OZ
RHoA8v+9wTwM9zyB5EAJdjT7LMb7FNr/HFryOZl7Bul/Fhd0mpx8y38iRL6m
U9piQXQTt6wAxlsDFHAdqgOqVhNVKwdtMLZ4BWAkqxGooXolAeriA/QFQAVQ
ZE2SmyHiUpoBAuMVFmNcC4LWjKAAXAH3Dl4akJQWZ1IXijyApYxhqIt0181A
wFd+r/XCtxnBu3nh4ECphryovbyQ/bzg/RTJ87jANZ5PPw4aFZL+KSL7Krrk
BqHSjlyHoDcjaU1wQFbEJqibi9AMdeDg22DETic8lM5CEjqAh3fCVt3AFX6K
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
1I6AwkCoVgj+OmcAMGoP8O0wPOAu4Nub7ZElV1BdGPrfFkr/72zW30eT/jFk
/K1Ht5sbtM73nkLR5ni8lUjJooA37eoz6RfY68puwnv0u/rP+nJtYsilmwTS
BXHwKJs36BEw68ddCBQuikIWRKHTQZIJT+4iP9gWGmEC0bcgvJMR2smOvSeO
m/WPrKPEtPjq7vJS6r30ufjoBAQv6lu26LKH5CPXsE+84q4HJ9MTkrwzk6jJ
BmdVIiM1gWpQY6NCbwh4H/v4X/GMRMX4nCEzj6OJH8Lt/+MG+SSxSZvxrCVr
WsCf0qeutzU+6614OVT9BKKmFnAe9UM75h721z3qq9sebNoehLaibA42bQw0
bg00A03cHgGRIFSsAcL3fKLrxVTfzvLo24XuxQJdJZWab4fPvkUutCcV3iKU
wUgVCFol2qORGjgika1lZ7xqLPxpptZcqo/8zI7+pxse7zt6HnbwPwXNQ/M/
6sQ66uR9HA7QxT8DE5xHeh9HUt5HhX/m1s+Ptarly7Fxc1GKZbV6JUW/nml8
kK5ZS9dCTVZp+pU0w0qKDnCXOVljSdZZE3SmBJ05ERy9OUFjMqqWDcDJK5bj
AV8pl6EDuEsF3HsX1rUd69qJobWBgySDeA0goR/wFZYyQyDZPOgPBd7PowNe
GQQ72YCvQDwYCp77RRHv8sL2ciJ2UqWvlQFbfO8hArX0mkval6icrzDF37o0
2OOaHAngABHsQBAO0uzAtJO7UNR2R3ynM6kHQeiE4dodsW0OmGYYpux7fNU1
l/3B7P+ZTv8d4Opu/O8jxp2UwPUgj2Uf3y158Hp06Io4cD5IMO7u14Rx7yKx
Jn0CzTyeSSABXn1JGj7iwxv2Etxn8ecC+Au84Blh2HSgFJh8k1BqlYTYJGHL
gWFtRFGzR8y0KHZRHDPhpyijqoq89DpYsM4pJOZbf+nHHkEniUEf0fhn6WGf
spMIial+WWmsdA08Su0YnEZWJVK0OV5G8VdcybdSv/NMlbuedtgF/Sd79F8w
Qd8EjhTmbhUbupjssSj90+GGl8MV282Fm82lG51VjwA19Tdv9dRs99c+7KrY
6Kjc6mvY6m/Y6q3f6K1dH2xcH2zdHO7aGu54dLcLGuk22v1ysvfVve4HLQVj
CcYyPKvQjlyFopXBKIV2RICrKpRHt69oOiLWplE/K0h605S3P9P4ZKBMdBlO
+YO973FnqMnqGCLwFIJ7Es455OhzDNoPGHDCSXzOmfcJzvM00es0OQcjmI1W
2FRxCwBXMXJLkmE1O2EtO34lA7CWFioCpuiswGul6swpOgs4yZAIAsoyJ+lM
8QBaGlOCGooEjXFL8XHLCeqleIAr1ZJRu6SXd+I9ugluPQBdLox2qExMASLV
jSQPuwBoUS1u9IfQXgDOK53wh8zwnfzInYIIKDWaFwbQtZcbtpsiea0MfMT3
HCFSSm7ik79AZ11FF9/CVzqQGpxIzTBiA5zYDKVD8W1wQieK0o6itMKh7GiH
C6ULhu+E49ogKsNVO7jkX0Js5MT8r6X890Hd3/oNvw9o3uaJHod6rXK8LcHB
6zLpSmzYIk/QivVqI7OGGdzlIIGZJ1zii4GJGvcLGnQPuucvnvXl3feHyGqK
K5lwD1gIkkKeSiC2CMRT3iF3MNKpYM08P3rcK7IMGyX7JkD6mU/sdbHOOTrm
WpDoY1fuSVzgSYrwFDODmZLLysr0TYr8LsD3KD7gFMVA1MU6haqcwlRYVcDH
nvQTuEi8DPO+881/uy2+xVkqK9zIiO315E8YM551l70cKN1uylmvzV9rvLPe
Vb/V27jVXfuwp+Zhd+VmR/lGVzX4cKuncaunfrMPigo3B1uhC4YjnY8GO55N
DryY67E15baFR2ZR+PXhiW286Fq0aw0c4Mq1nurfx5UuxMZsJCieZypeF6hf
libvDpY/6s5T3MDQ/mgP9a4fc/I/Dod22ZxBAivle9jB65CDzyE7/lmk6DKe
+ynF8xI9+DNmNzcKhMlmpXxOFrusUqxmGh5kG9aydLZMw2o6xFTgaUuDjJYl
VW1NVZtT9cvJ8eYUoylJtxyvBbgyJ0L+ygzICnJZGkgKDcpFvWJZE9dN9OzB
uHbj3EAYCJSo04UBsQqCPIgkTOMoAFebIvZzmf8rPX8nPextLjgRAF27uaF7
uRF7OWG7ycEAV8CD3SUzim7iUz9HZX2FKrqGrbrhUg+1ypCAFLb/az4DjHig
hgc7eZ2himGPM77PGd+JBJ/H1TliCz5Bjfh6/I/1zt+GE37r1v+1V/dzfeTz
+KB7QYFmiWA9XLgRxRvxCWhGu4+7+i8ESswiqYUnMoskYz68dlrAFEs0GyCe
5whmWUH3gySjPoJ7vpIHIZE2cbBVLLWKw6d4cTU48aJE0UGXam7w+OfdxR/7
JeLkKrgk8AKZdQbPPoPnnCT4HSIobgTXSIqLfXSxt7m+h9Fuf0AocUotWR38
eUAC0+j/EQX9nzCPTzyVzGTqCY9oVKD1ToZZFTLIEpsLSl6Mtz/vLXvUXr5W
X/qgvgya4dBRs9leCThqs6tqs718s7Vss6Nis6v6YS/gq5rN3obNgdaHQ22b
g23AtL+Y69vqLuxVRekdmIkYQaF7THNU8mB0/IgoZkosMceEPUpUvMiKfZMr
e5GrfJ4mf52n2+8tfd5fHP0NgvSH2z5HnNhHnfxPO/MuIAPPIYFFB3zldxLh
fdSR9eFt8TmY8CLa9xTG5yQ+FcGdiVRYFbGLcXHz4TJbvHItV/8gUw+gtZql
X80BT8Mq0MFM/Uq60ZqmtabqAa4AWVlStKZErcmoNsVrlhNVi+AlQb2cpDIl
qpbj1UANF3WKBZ2il+zViXPrwEFDz7qwbh1ApxDkbhRpGEWYwpGWGbTNIGg/
zmuDCNq4lB9+UCIExBWxlxcOSWFKyGu5/0O+9wiFWnwTl/opMusrFxAY1twi
1DtBwSDUNQond0AtWOQOYLRQUHgINLEVRmh1AnxF7Dq4XN/ojC/5EtNwC/vL
ZNE/ptJ/69b+3m/4rUfztjRmOzF8JVKwrQu+7+fTTWAOMv3nfPkrQrFFKDEJ
gwddWe0Y7ylv3ixbOMsRznOlU2zhmCe3x13Qx4/r8gnpYwQtskQPI+VLIYo6
HL+BIQ7/0jPgglvkt9x4dLj4C6b7IaTHYQTvIs33iLPfYRz7JC2LlZFJitbf
8AOg8j9K1WA1+fyCqG/4SoyKdZ5IO+RC/gDP+Z4rsZdme8i2KpMWw4UDHKm1
pPD1WPPTgeqHrUVrTXdW6+6sNlWtt1esNZc9aCxZaSg52GlYut5asdFetdVV
u90HrTV82Fu3Ndj2cLDjxVTPs4naAUN45FeoiGvuma4xmURxPj24Ikgzpk5/
km54ky77ISPqTWb0q3Rw5K/yjS+Lkn4cKHs7WW5wIuL//abXhw5+R+wDTsJ5
55wFF9HcM/CgMwj/YwBpjqyTsMCTToJzMJ+jDm5H0fyPqI1+EWaFYjkudlam
WIqVrWRo1nP0q5m6B9n6B7m6B7mGlUztSrpuNV1rSzda0oymFK05RQtABdTQ
BAx8onYJACkRaJ/GBL0rlxIAxpRLQAf1yiWtHBJBIrMLR+/CMoDXgm40oKBO
gwEEfgxLNDHpD4O8XkSy3xgEbzOkOwUAV1G74OQD9x6+nxe6B3RQEbAt8B6l
uZYCXF0BuMKU3iRU25OrnciArxphFCgWQJBanEntaKgG3eJEBKFBKwCYM74b
he+FxjVQWhCE6lu4sqsuT8vl/9dU8beRxN8Hjb/3qF5nRb0sUj9Lj9yOCxz3
9m5BMmc5/MVAoUUcbBEAIPFaSOxBL8G8rz9gqjEf4ai3YMpfPOIWsCgIXpaE
jXKC66niUjS/myGeZEmz4f6iy4ygL7xjbgmUt/mCj938LzDYR3EhX3gFXSDS
/nibdYighEVkuBnEF8mC8xTWEUKsU1SaZ1I8TpPByeFf9Se9j4qmJDn9h4MU
Fdcqz7FlqmeC/Ie5IWv1Nc/6Kl8OA3WreVBXYqsuWWsof9BStd58Z62pZKW+
eKWhyFZXaKsuWG2rXOusf9hd+wiAqrt6u7/54VDrs8lGc32Swg4d9gVOax8k
/969VZ5a5BlV6hVT5hs7osnYTE58lqx8nRX3JjvmTY7sTYFqpyLj19Gyd1Ml
RjiR+J83vA47+Rxy8DvuyD0FDzztxDuL4J5xDjqPZB939Dl0m3XMMegULPAs
yucszvc4XnvDazRYZlEoFqNkC1Eyq0G1lq2DTr5uNUsHzZ7NM6xmalYztavp
OluWYSVdbYFwpbMma60pICTULYGoMBkgSr0MoUu7GK9dilffhxrAALSU83pl
D961C8/owrt1AveOgu589aDInYBDXABlYReptC1/N4CrH4xC4Nt3CsJ28kAY
KNvNBbgK2weCmBb2SinYFrOn6K6l1zCJHztnfI4uuk6otCNV2eNrnchNMDJ0
e8IJD8EJBRSQ2AbeIbtFbIcRetGkIQx0utFEAK3S7wi9NNrfLFX/mCv6+3TC
Xq3yaXzwTqXqVaFsUcpuuIWb9OKYgkQz3oFLQYJ7bEEH1muEJb7nL7nH5k35
BA14BI178yc9g+YCJA+koVshoSZRWK0LN+mGW/wNlvpbrzgHvuRLdtz3Qh0s
Ovgrf95ld5/DmNibfNktHu1Pt+l/dpJ87KNzCY/6juP7ASLgOFH0sXsCURH+
OSeBpot2CqX/GWsQlAidI2H/5lylblzJSe/1ZvcHxazXV7yeaH7eX/ME6Fp3
7Upzla0BcNSdlfry1Yay1aZia02etarAWldiripcaS5b723c6Gt62N8EbfXt
q97qLZ9LiU267eL/oXPU5+Qq3zCjQ0CZX0R9ePId/9hylrw1XL+gTXlslL/J
le/kynYKVXtVyX+burNSGK28DqP86Zr7B/a+h+w5Rx24p2B8gKuzCP4FFO8i
MvCsM/sE3Peog/9xB95px4BTcO+TaN4FUjFZOBkRNy+LmwmXLcpka2ma9Twd
4KsHOfq1PEBZ2rVs/Wq2biUL6CCwWzprptaWBhRQZ06G3LspSbsMBDFZu5ys
NgO7nqiFiAvwlUG1GK9e1MsXDKoBkkcP0a2b7NVNcAcYa8Mw2p1JbQdX/PoR
+AU6bc3f41kE+028eDcbigR3cqP3cqP2CmOgUg4w8InAt/MfC32nKJTia5ik
K8jMqy7F3+MqbwJQkQCump0I0PwrgCLAUQ64didcD4J4EBISwGd60OR+wI04
ci8WmjPTCMOVf+mymRn6z7W6v89k/NyX/DQ95nWubK9NZ44SdmDczSLhYpB4
gSua8eX10Vl9roHzHP5CgHDSTzjuJRzzEk16iRY4ISuCsAlPYT9D0OoqyUPw
Y77wUHzhFfONv+gqS24nUjiI+Z97si+Q3Q9hueeZ+ey0gPN46h/t3d5HKuxE
KkcB9xzR+zBcfJ4S9omr5CKDfZqkJsV5H6P7XfHNNrTRj5Hi0KpeeUY5UTAS
ZdzuqH01Uv98oP5xX/1WV816V92DlooVoIP15bam6pW2SmtNkaUky1yR/6C5
wtpQYmsq2+hpgHKhQAHbK7ZbKp823lmKUxbdpKffYibDWAZ7r1yaMAHuXyXR
VAvUZX6ySu+oGU3aI43iTUbc2zzNu4bMv0+Xjir4nKPXwa+D11FHj/dvso7Y
BR13CDzmKDgNRBAjuuwSdM6ZddzJ76ST7yE7/6N2wGuxT6MDzhFjv3Zv8gse
D48ZC44ck0aaNMr1XP1armEDICpHB03JztUBQVxJ1wBQAa8FbDykiWkaW5rG
coCug2NYBlFhisaUpFpO0iwlaRbjNUvAtBtVC1rlkk7RTfLoJjLBswsQF5Zx
UMQhA2h1OGK6nbFzZOKav9vTCP/XejE0mwgoYEHsfn70fhGAVsRebvheqvS1
ivdI7DtBYRR9i0n6HJH5FabwGrbie2yNA7HWntQMp/xrnBqIAdtgpE4EqRNO
anMidEJZLFI/mtKPhRYE9GNJvRhyO4pYdYPQ4IB7N5T237aKX3u07zoTd2u1
u3WKSS+3BbH/oh9rjiNY4IXd9RJ2M4ImWfz5APFMYNSkQD3K0gz7qLuY8kme
dp4dM+YTfdc7tJMuqsUFVaCESTcDQj/zlX/HS8JF8T91YxxG0N5zdv8Ap3UM
z+MkeRyGub4P8zmClV3nyW8FcE8TuKfQgrM4zgkXnw/xPmfIRtdE1z8TgjGq
5MCSMrb2jqQw08GnPjBhvaP19VD50/66x/31D/uaNlqrVlsAeEot9cW2hhLw
vtJYYirPWSrOswLuaqmxNVVa2+tWOutWWqs36u88rq96096401n/5k4++E3J
+ZacaOebQw/NwIvTsdISr6iWmJQKjqLaWzYWm7RpTNytSPt9uOTHLmOLn5vX
+zeZ7zv6HoeuKnOO2PNOwUTn4EGnHINOOvHPI0TnnANOOXkfc/I97sQ67Mg9
7cg7j2afxoV86prqzO6XRg6FRHcEho5Iom2p+vUCw1qeYT1Pu5INEKVdydSs
ZGlX07RrwG4BWczUr2YA9w6su9aSoTenGACogCaaAcZS1ZZkNSSLyZqFBM1i
AlBD1TxgLZ2yh+TRS4Jw1YFx7YRGFtPbkZR2qGkK1+mEncIRVjgeT0P93uil
O1kRwFnt5cfs5cftF0S+K434sSDqXZr0lYK3LfSepDBKruESr6DSv0AVfutS
dhNXaU+sdyQ1IunQEEg4lHNogwPEQqDtgq5mUDsBqKCtE+S7eOoogTpIpHfh
KK3O+OLPcQsR3P+21PzSl/hrp+73ofjttKgxhsdGROAUzX3KkzXuA8jKf4Id
PM8W3QuKHmTFjPjHdnnE9AQk9gWlNXvq69zVXRxjByU0/lsPxZceidc42u84
RntxBkGuhodwz1P9zhDdDrl4fIA1YmUJ5GjaH+w5J/FRN4K4p/FB50m8s9SQ
T7zUN8VxN4Ojv5aEfyfSkxN4l7g6t8xsr8z+mNw8n/R6gXG+tOlhe9WzzrKD
ue516121a60Vq40l1rpSgCJbXfFKfZG1PNdSVWirKLA1VK6211qbq6wtdest
9c+aq940Ve10Nu0OtL3pa3reWLwpk/WhGWnX3ZNhvlVCTQ5JanBiV/PlbTFp
9SLDcGTSo+zsd82pqwnixG8dPf50y+sI3PsY3Oeoo98H9vwTMOEFuOA8Mug0
DNCU4CxceA7GOenk86E954hjwFEH/jm4/ymE/3lixBfMSjfhUHhkryismRs2
JZOv5CSuFSasFRhX8uMBolYzgPwBgBkgD59lOCAunS1DC6QQAMmcqgMHSpCm
HYSHwHQlQyK4AHCVqFuIh1JYC8C965R9RNcesieQwg6sa48LNEihHUUDHrvR
Cd9qjxnFkW0czycR/q8M4rdpoTsFkPztFkTvFka/K5T9WBDxLhXaDb0t9Zug
0Uu/d0m6DM/4DJl/DV12A1Nlh69zhPIMwGI1w0ktMMhZtcPxLQhyB6AsOKkL
RRnA0EewtDECbYTqNkykD+ApwMlX3yK1OVN/mbvzt+W6X3r0v48kviyKexDm
v8BijXtw7zJZnViPTip3miOeDQwd9wvuoQR0kjjj3tJl/9BZ3/BJ79AJgbza
LUr+XUDIZ17RV/0jr3gbrgXobvFScDHh37ICL9E5Zwlux3AB5xlxN/kqRwnv
omvoF16CzxjQwtDjMNZxhP85DP8iQfQZnXMGL77iHXFLJPmCrUDFxjrJ8wLz
ygS5E1nlC4V3tpqLt6pygFFfb6taab4DIGQuybBWFFiqiy13sq0VebbqIltl
kbWq0FJTvFRbudpY86yj8YfOJsBRu131Oz3N+/2t7wbbdntqXxWlW71ZDXZ4
1VV6+DV6vnuY6gZLacdqiUxqDU/ui0q2JiYvh/LuwEg+f3bw/ouj11GY5xG4
7zFYwDEn3nF7wXm4+AICIEp0ASE6j+Cdh/seue31gR3nhBMfgO00+E+hBJco
8Q5+HbywweDItsDQLn74vEa5VpCwlg9ApV/JN6xm6wGirOAJWCtb8yBLCxAF
5G8FPLP01ky9JV1vBcSVqbFkABHUmYC/SlZaILulWk5WAce+lCCf1yrm9epe
glsv2Q0arIFldAOygqa+UFqRpAYHqI1zEEe2+rlth/u/UPN+gPJXMbuFEVBn
e4HsXbEMEsSM0Ncq0bbQZ8aVXvY9JgHg6io67xuXkhu4KntyrQMRsFO7M7EZ
2jRBaYGRWhwhu9UCQAVlX0l9LpRBDHWUyBilQVvpB4nUfiyxxo7c7ED9aTjv
f9aqf5/M/dtwwk/Nclsod9ydM8fhDbvxWjHsES/hFFs05i3sZwrvegjnedJV
nsjiHzzkKqlEc2a5Ib0MceI3zNDPfcSfegSeo3JPUmO+DdA5BEd9yQ75zM//
HM37FDnkKod/wUPhGJFG1gV/7un2gT37BOJfNzdZJ1G+p5CeRxzoHzgyj2Dk
NwU5hBC1fajkVkymoKhaVjCSlG4qyt2oKV6pKHnQVLXadMdSkW8qzVkqzDVX
FZsriy1VJTbw1coCS1XxYmXxfFHeel31266G/cHWne6Gt93Nuz1Ne/2tuz2t
+wNNP/bX7NbkPJKKBmHE3Osk/lmc+Co1hySMu+qWwwzrjEgbVGTOGlKnecIq
JwL3iJP7+w4eH0Lj/VlHYMJzSAAkwRmY9AJK/BFadBE4cwSAk+9RR8/3b3KO
2glPO3JOwMEvSPgV12KacDg8pk8S1saWDAdHLhq1D3IND/IAqIwPcoFv163m
6S3ZhpVsACTtKnjJgWTRlmG0ZWqtGQZrqt6WDuyWwZqmM6dozClqcxKAlgY8
TVCqQbkcL184SDV0E706ccxuaDqxawee0YEid0D9osSG2y61doQ+As3i574d
ynqhFkP3JgBT5QMpjN0rku0Xxr4rjnmXHgJw9VjCnmbQS78D8SAq8yom/ztc
+W1ylQO5zhGYK2obQBSS1oaigieQvy6gidAQJHIPktyHoQ1gaeMUt3EqtJB3
mEgexBIbHCntduQfR4r+uVL5j8WSf0ynvEwMGMNRJ738J335Q+4g6BPcYwV1
0QK6iAHTflKbKPwBX2Tl8mfY0g48twTmUY7w0F8mGL73l30XyDmL8zyBZh5C
8S8x4q4Lw77wjb0lUN4SeR3HhnzJ4pxkhF0TlglLlA5ixp9v+ABQnXT2PeHs
dRzudRLF+NCe8h5M8LFbHVtdhvBOvSXKDizvSqmeLyp8VJ+3WVuwVn9nva1+
vbN2pb5suThrOTttqSTPUp5vqy1fqS8xFWbO56Qu3Sm0FOU/ra/c62nc7W3Y
HWnf7W/a6Wve7W3e7W9/N9Cy39/wY1/tXlXuM2X0DJZafg0bcRnr+p6TwsHd
6OBvgHFbQpP7IxIXdElLIcEZ32AAqXoedvL+wMHnqFPAYQf+KSfhBYTwHEJ0
1ln8EVL6MSboLNz/JNTI5/XBLfYR4NidoL6+k3j1Td/WwIjRiOguYWh7YPB4
nMKSBpHPSq7uYF+SFlpBAoWBKlsGwJJ6FTJa6pVM9UoWCAk1tsyDAnR6vCXN
aEnRWyEPrwZ/gg08k1UQuhI1QAeheFCr7CB6Alx14tw7iR7dBNdWDAPiE2dg
uV2qb+N6XagmP+/HodxXGtEb4NtzogG0dopi9otk7/Jl7woi91KD3yhFT8Ss
aRq94ntc6hWXjM/Qhd/jyh1oNdA+Lyp0dQJBbUcCJqS2O0O7njsPpkECKexB
04AODuHp0L14uvsozeMumTFIoLbBaB23yT/2Z/9ztfq/l/P+PpY450buhpGm
vfxG3PwH3QLv+QQOe/La8Oxxd56NJ7XypKYA4Yxn0LSfuArnLz5qLzmJYB1H
y+35oo+InoedPY4jPE9gvU/gVY7SyK854d+wtMhQ5jGs+Asf/keezEPEJI+0
ElFp8FW2/2mc7wmk52FH5ocOtPfsMP95S3CZ2spTlFJDCu38hnVFzaqqoeTa
B7WlW42F602lG51QOWattdx6J3chK3kxI3kxP2u5pMDWXGOpLp1NS1tOT3tU
kvO6ruRtW+VOH8BV3buR1v2hlr3+FoCr/cGWH0dafxxu+3Ggab+l/JVRMUd2
rb2Gi7qA8j4E45xAGu28475xbxBr+2SZi4mZk+KImPMIP8Clx51Zx4C0OQUe
dRSfdJKccxZfdJF8hAm+gpdewgKL5XfM0feIHeuwPe+kY8AJR48jiKBzxBxC
4Ghk9N3IqE5+yGBwxJxevQQV+JSAix7kA+LSreZoAGsBmAE3ZUlT29LVtn9l
R7OA14LMvC0DclbWVJ0tTWdJAkcDJR+StJZ/UVa82pwQu2yUL6pV7TiPToJb
B9G9DefW6gItTG9DAXoh1znh6m9jB3BUE8v7UWjAC43kTWr0bl7sQXN7zF5h
3F6+bD8vdi8l/JVa/FjCmWS4lt3Cp3yKzPkCUfAtuvwWoRbGaHT619VUWidw
6ShaB4rRDgeBIaBEStfBFsIBHG0QiCCePk5jAk8ODbAl0frAP+AG6WWV/n83
G/5py3+TK+1F4PsxlAE8Y5jmNeLmN+wW2ENm3/PhmgJE97x5E0z2Ios/yuBN
+Umr6QLATh7vwWOu+UZ97QFtLj6C9IG2JyA8jmIFV9xUtyXBH3vF3QzkXXLn
XfUJ+crf9T0092OfkrCKRBeFGhYc/JUf5T078vt26P+85XOOOCZXz/BDCp35
s0kFjyuymiKy6lW1W51161V5G22VDweaHvXUrlYVLedmLmSmL6SlLBXl25qr
V5rLLJlJG6kJr3NSf7iTs1Nf9kNrJQDVbnfNu+HW/ZH2d0PNP460/zTa8fNE
70+TPT9PdL/rq36bm2z28Wuxw6kvod3ed/I4BJd/TYv9zLXSL3YyodiSW9gd
GBF4xMn3GByYK9/DDqyjTtzjjsKTTqJzMOF5hPQjl+BPsdJLaM5xB79j9r6H
b3OO3OKdBN/v5HsaH/OVayMneEIWNRwS1isOnVYqFuMVc7q4+9pYEMSZUtXA
RK3k6FfzDbZcnS1bb8tSAaayQdfnAXdpoRwpoDLIbumsULlQa0rWg2DQkqqB
XFaqGko4xCvNCXEmg3xJE9cCPBWW2YF1a8cx2l3oB3u9yU0u9CYnUq09vg9P
h3AVxn6mDX6TGrmbGw1dxsmLATq4VxTzriB6Py3slVb8JDhwhulVakdO/gTg
ClX4jcud24RqJzLAFaR9yINBIgdT+zpAsIkG9MXoQdEHXCh9zqQBrOuYB3uS
wpxxdR+nMKbI9BECpeU6yRoR9L9bTf9cLV6NDOpDU8fozD6y1zDds4/q3U1m
zQVJF/0CF4AyenEL7T0qUexKhF/ONXqynZvoAtH/ODYZEya+SGS8d8vnsHPQ
aRf/U2jWaYzHUaTkM7eYa1xgugSfeEbdFAo/92adY7DOMfOC80K/9mX++YbH
USfqe7eQ/3Gd/iG8Xx5rCZH04LnLWYXbtXkP0w1j2qzS6NqJynZzQfFWc8V6
a/laXZmlpNiUnzefmz2flW2uvbNSm2+LVz4xal5nJ74uTn9dU7TTUrnb3bA3
AISvef9u2/5o+/5wy493238e7/7rvf6fZ/v/Otv382jzu9rcLYloCE7I/Rzh
854d40O46Bxa/jkzFRk4lVS0WlLaERARcBia/cI+6iSE9nDBeWeR/HNIwVln
4XmU5LJLyBWs8Kyz31F7nyP2UEbrpEPgaRjAZ8BpQiqSPRwpm5ZF9QuC74ZH
LibpgNmeNyjv6+XzOuWsVrkYr1mOV1tSVKY0jSVdY00/WKIEXoDSZahsWWob
wFWmASigJRVClynFAPX4QU1ZSkuK0gxdmogzG+UmHcCVvAtF78ADXLmC04ll
QNOKUJQmBLnJiVhtT+iCdNDncVjAC634dWoEdC+1ADLtu8XyveKY/cKYdznB
r1TibQlnhulZYU9J/cIl40t04VfoSuDbHQn1MEqry0GnhAsTBHHdLq6daGon
5LXoHQhqtzO5G+G2KAuxSjhjWNqkq8cMhTZNpo2SwJcgJ//3pfL/tlVb/D2G
Ca7THp7T3pw+omc7yn2KxTcH8hc4glFP4R0XTsItv9hvXI3XmJJTCO1VkvAU
NugiLQkX7XccyfgAFnCeLPmYFniO4HccxT6BBkoXeJEk/tSddZISd0uiRkRH
O4S4vYfVUKIU6Ajif1yj/sUO+4fbhD87NYjCVhXh3Vi2OTHrSV3hRnbCVnby
dHxOo7Z6uqpmoqB6vbPpQVfdSnWJuTDfWlJgLs2zACtVkPZALnus1bzKiH+Z
l/y6POeHxtLd5jt73TV7/QBaje+G2/dH2sD5abzz56n+X6Z6f7nX/9ts76+T
HT+2lb5Qxc7iqRVXkYLjMPqHTj5/sQv7hCT7nNkdnfSguGQoUiv4CB90wYV1
AppaLDgN419ACs4jheddJJewoZ8RpJ+4BJ1GAMd+UCgEJObMPevM/AAecAZ/
x0M0HSebDA/tE4bNKONsmcB4qxeN/4KW+r5WMatV39cp7muV83rVYoJqKUll
TlMCNVxJAxgD8qe2pB/kr8CBMlc6wFSQ/EFN73JLghxqSzYqLVB2VLOkUfTg
6D0E13Y8ox3LAEzSgqE2oWlQT7IjrsYO148nm1mej0OADorfZERA15wLZBBZ
FQLrHrlXKNvLDHupETwSs0fdvModGcmfYbOvYoquYWtuE+thtFYUswPN7EIz
OvBuPVhmtwu9E03rcCZDB0HrglOmPbwtEt9JInWK7jHJcJ+huU3RmVMM97tU
9y4E80lO9P886bIIOBPgG6AVch5DVJ9Jb+6cN+e+LxDBcFtQ+CCD207g5t72
DP0IzzqOYB1zpv/JSXSZpkNKXd+z8zyKCrvqHnieEHSW5HUUGXSBxD6B9Tnu
IrjM4JwkB3/mn8mIz/JIEl3ihl4PSgvMdP2LE+IP17F/gpf58jd0kSM07lJ8
xpO6vEd3ctbvFG4U5U1nlrbrKx7cybJVFW10N28Nt9sqCs1FueaSnKXiHEtK
/EZs9DOl/FW68WVm0qv8zB/qSnbaq3daq/agSLB5f6j53VDru9GOdwBXEx0/
3xv4dWbg13sDv90f/HWi65feuh/S9CYas/orZPQpQJu3Gf91m3fWJfozj9og
7Wpp+WiMIvIKmX0azbqE9z+F5J+CCc4ixBfRoksYyWVcGMDVJVTgSai4DPgq
4IS98CzM9wTM/UPniK+YnbzQ2biYUWnoWFj4cpLGlq8zpWuWE+VQZsCovA/Q
ZVDP6lWz6rhZjWJOr5zTQWW+eYMC+HATCPpSVNZ0KL1gTjeY0/VmSAehAjQI
A6EWrAS5CbpGoVjWx5p0SpMyugfL6CIw2/HQBrcOGBnEg00oSr0zqdYOXwcj
9WPJS15uj4JZz1SCN+nRb3Nidgtjdktid4tjdoui94pj9zKjXqolj6TAQvuU
ObimfEPJ+55adJNa4UirhzNaka7tKGj7PJBXoIPd6IMZtlCLF6XHhTGApk5S
meNUrzHwpHvMubrfY3pOA9ZiuM3QmYNY5qyHx98fVD5OiZ0mU8YPRhUtsf2X
ffzucQTzfvxFbsg41bcD45nzHYN/HMM9Q4z42tv9sBP1L46s4zg1Qup/jiS4
TPM7geJeJAecIfidQPPPk31OuoiuMLlnye7vo1ROEcrbIfKbwpgbETH2oZWa
Gq+TWMf/830aMWBVFzVM85uO0T9tyH+al/C4uXSrqXKr5s5sYUWLvnIhPWO1
PO/xaM9GX5O5IMeSnwnsuiXe8Egme6ZVv0gyvMqKf5Wd9KYwbaemeKe1cq+r
fq+naa+3Ediqd3fbfhzv+HG09eeJrp+n+36d6f/rXP9vcwNACn8dadwpTLF6
+7bewhrOwxjv36a8Z+97zDnyimsxM2K9unYkJC7+GoN1Cg2sO+8cWnQeFXQO
LbyMkV5yCb2ECf8MJ/oYzQF+/qgT54QT97Rj0HlnjyNw1nGXHLJwQiYHIjgi
CZmJibFkQMUaW7bWkqVbTlMtJyvuG9WzRsWsXjGrU0xrlPd0int6+bQ2blKp
mFQpZrTKe5q4RQP4Th04iyl6U7JhOUG7nAjUE9gqaJzaQcVZsayNs2hkZqUM
aF8XjtGJpUOr3JBQsr0JRqpzJDQ44GuvYztdKAs+3ttS9nON5If0mLf5cTtF
0TvFsTtlMTtFsfsFUXsZoS9UAFfcCaZn+W1q2lVS9jekEgdGBYxeB6M1wmkt
EK7oHSh6N4rWh6V1urh2udCAae9B00E8OEpmzvqxJygQF817eM27eS64e815
es+5ec/Q3Saxbq+Ko34olN1nuI4RGPc9fFd4gQssgZkrXeJFg+ivEe6mhn5D
Cb6nKBqXmMhv2JQ/3nQ7gnL7M1Jmz1Pd5kG7FS4QIr7nsI6iuGfw/sdwnFOE
iK99uYC+PkAHf8sRfuYV+RWH+T6K8F+3krnxQVe4kV+TV3Uxkx6+4yL5RnHG
42ztdmnqdmvJw476jbbaibyy2qjM+zkFG611j4Y6rJWFi2lJS+mp64m6pyrF
c4P+aVLCq+y013mpbwrS3xSnv63K3WkuAyK431W739+0P9D0brT13Vjnj5Bj
7/xpGojgwC9zA7/Nj/w2P/zXqY69qvyHQuEQjJjziTP7qDP9iDPzQ5j0IjnN
iWMrKbmn1iffdPM+AmOfRASdRQFPxb+M5V9yEVxAiT5ChV5GA1n0h3TQIQCq
5sA5p2Buh+DSi8TWgPB5Zex4ePhQcBjgIluebiVPa8nWWHO01iztcoZmIVUz
n6aH0uYJ6vl4zXy8ci5eNaNTTGkUY2rVhEo+qpJNqOXjGtWMRjmr1ywYtMsA
ZkbFglG9YACQi1syyJfjVRZ9nEUnM6tiOsDPHUtvR9GbXRitaHoLgtbqDA1q
qLfH1d7A9mApJrbXdgj7hSL4hzTZTr5styhqB5BVcdx+cfR+YeRuWvgLXch2
GH/c1a3sJjHlKj7na0LpbWq1I60OTmtAurYBpkIdtAu6MLrxzB40wBWzG0Xv
Q9MH8K4jeNcpuue4q+cUlXmPxpyhgw+ZEwzmBMV1lulm5fotsmnmIOYUhT7r
6rEWyF0ThCzwNf0BSd0cTTWBF3cRwz5LFF7yov6XfSRMyr/o7nuSGHCJ7PkX
Z89DjpHfeHNOUeR2wpDPXL0/cAo8g/P8EBl0mRn8uZf0Uzf2CbzbIVTAeVc1
Mor+ARz1f25wPnfPdIufk0fO+nOG/ILXizO2U+RbSdqt4uSHbXc22uo2O+sX
a2oaI1LuFZQ+6m+0VZYsZKYt6fWbOs0zleaZTv8sMf55euqb3MzXeWlvi9J+
KM15W5G301C621m1193wrg/iq73Bph+HAWu1/jja/vNU1y8zfZC/uj/42/zQ
X2d799vKn8kiJjDU8u9x4rNo18MI+nsOgguEZHvOXEqWOTVV/w1FcA7Ngbaa
ooRQIhQl+RgHRFByBSf6CESCMM5JACd44Blg6eFeHzr4nHBJRAb2h0bPxoZO
BoeMR0QvpahX8yA4WTMAX+nNmeplIIg5amuuzpyhMaVD+riUrF5KUC4kKu4Z
VWNq9ZhScRdwl04JXkaV6jG5alIun4mLnlfJFrSKBWDPgFePV5rioaG1Jk2M
RR3VBYw0+KFj6G0ugFsoLQhiK5zQ6MJosCfW3AJ8RVv29XwYGvRUHfImU/Y2
X75ToNgpidkrid0rk+0Di5UZ9kojeixmTdIZFbeJ6VdxeV9hi64TK29RauCM
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
OZI1wZbMiBUzUsWMRDYrVc7IFDMi8RRfMMkWTnJFUyz+V7Z4UiSbUui/6VNm
k9JnjBmTutRJY+IHRsIYmTnOYI3TY78Qo74ER0yGxv1QGVbv3vu7//3fYz3z
tY+niounzYkTgHo8Qfg1hvUhlDFIpr/FBb5C+T339HvmgS+7gdAcdo63dgrb
7RRtC4s/7ia8hCdbed4PE85Ulb1Tp+jsg6RXfJiH3cJtXMMOWJ6qx5+BRdq5
+G93kl3G1yXw3/P49bGsdqFgJEk5AkJl/jX+YDm1WNankfarJb+kCRjQiC3l
ngYESWIp+kCN0kq79PJuFdAlE3YrRG1SUYtE0AQAzWJxI0gUV/AyQfRWoRrN
007dN84/My6+Nq681q++NiyCRL0wLdcaF1/olmoNT939HiDw91y8yqHexbcw
+dfR+dfQWVfdE09bOszJJ6BNXj5fmWHfFPGLKaLVXGCtVLpVKf9ZqfxZpbWs
QmDJHD8npI6SCdUumIJLSFCv7jujn7pi6lHezRifFiy+FYN/5+n3Dkcc4fD7
5Yb6YOZjfKT4UnD4MX8dnK1FJEQc9/Hdgw45ROBej409Q5W5Kow+RjGCG3uT
ocErok77E7a7BlhhIo4H8OzjiQcCAE9lPqsaVDMlEhDBeWIkXxWgiziOs+xb
2Asj7oOS9kJIe1xC98OpdiiirVugrZvHNtfoM5geScIrN3yHWP7tfvbU/YKp
51WLAw2D1bfTzzk9uYlu8wrs9w4Gw/YnkKsE4SxIlEz9Tan7bkpaMBm/Gw1z
xsRZlWFWY5zRGGeNSd9S079lZM7dzppLy5hLSfuWkT4pV34KZ40zEibiOBO0
mC/EyHFS5CSZOa/ULpZX/tX7/u9PvT/qnszdr5hNT5/W6CeU6q88yRgtfoQa
M0SkdRJIzb60Bu+QKgcPw1FXti0kco9zrB2cfwolvOgTvAd9hySYuVP53nxb
70iUXycw7BCRdq5kMFxZOUUddibtdQrZDU2FBzVzBS0cbkMCr0sBWEZpzLIh
k2LIbOlBDYA2p5P2giDpZH2W95JeraWT0K0Wg8bXrZaCRLVpwIgu7VSI2+Xi
VkDcKhE2AeLXAnEti/88ntuiVX0uMXyvSVpuSFptTFptMKzU6Zdf6VdeaUDJ
WqrVL9bql2sND+C+95yxlQ7YUkdc4U1M7hVM7lXPzEtuicchGjvnlDPweg/c
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
fstssqVD1asGU7qkTyPp0sgsU/MKKeiAHeAHleI2uaTTEq7kzVLpGwnQIOC9
YPNeMNndeunMffXKK93GG/1GvXa9Trdep11r0IBcrdUbVhtNK/VJq01pq+9u
r7UVrbaVrLRVZl7Dpl72TL6ASrngnnze3XQWqT/rpjsNlx2FCW0hhhPwBjfM
p2j6NBC/kCRayZauFQArZaAbyjaL5JatyDnSZRPru5A+HBoM1oPZF9wKrqPK
HDzvuuCeov3rMX5vvfza8f4dvqTMi0Sjh7mAWZFOzxRfiy70EqUhOLwLUVmU
DDGaE3DQm2JHEqEkmex7Wm8D2yEh6kJA+FG8/x4YzQ5NPYQOPYQiH0QSD6DI
4JsTHkRbj7gTcOEJBOY3Z8U5z0dBzCo/Tk+S8m5onM82e9xOiPd2R5/tDuh/
deRewHRL4mq9gjskytm6+zMv7iwM1uXGJaB/h1CPoOP3QzPPub1G4noJgYP+
IR8Dw8apjK+0qEl61Fw8Z47FAd3wh1S8qJYumVQracbVvIwVEK3C9OWyTFDB
lnKTF7MTF1JUCwZgTiaZYbFBoZtmsSfj4ifCGSCin4jk8bCoyVj+vM64VvPw
7w99W2M984/KpzJMs8mmKa12CpB+5YkmYjjjYXGfyVEjJDBfBedeRvMOwkP3
uTBtoAwrqPE6TnAS4fsPJ+UF38+FBX1aU49BKziPI/xmH7rXmXMWST/sStnr
ovoT9SYmukvIamGz+/Sqj0XJH1Jlv4pB6aBZOgCmLIO0Ty/vB+s+jaRTZan+
OhXydpWsXSV9Lxe1K4StMnGrTPJWKrZ0q/jCejbnRSy7ScD/WqhaeqHZaNBv
vtFu1OvW61UWtBq16xbhMqw3Ja+2pK+35a51FK53lax2lq50VCRf9Ei87GW6
hDVd8jBfwZouYrVn0Ioz7uLDriwbZ/1Rl3oE9iMzelrGXjDzl7MloBWuFgCr
+aBwgUuykSNc1if84IeOhgY8gGBv/+kOVpRVSEq1V8xTuNdLNL7BzavVg1IX
pC4OL76jvpsRphZeDU9CSXL9tKLr0ZnUdBE0jnzYP/ZSDOM0jWgXnBxblkzO
kHnIyXa4mDN+VDtc9BEv+iGPIFvQDeEh1vDA3QjqWRwPRg/Ybs866uK/00V4
DHWPwi9AhtcGB3/J0eQEMPF7oJ67nAi7IQG/Od0NIbXTyfV44qfKsrn66pWB
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
NJk6FKEM5T4NJYiaRSxzIgrLxY1nam7wQ2jFsnLBFnLi71DllgTr7nhpICz2
f/6MA6l7RRR/fZrAn9HINF8wudL+c2/iSmCX0NTVYZD/Zz81GN/XUDZ5pObV
+fZX57peXznaxuen/2Nn0v/8mfL3PYTf93M8omi/RdBWhNfEM+oikzu3Qc5D
ou9gYoYSkx6npI2npU+QKZNk6msWZ5ormAFoyZTvVMp3eu07ndsH3xr0by1A
r2zvnNZ3TtNspm3GaZ3WKV8p5Y9pgicppDdc6oPEROO6CFcA5HwY5lIkpgcf
/zQ1fYrB+liSN3/p2Ex96aTN8lKrBzUpUz4TKB7TeUM0OnCN9JVQ4lpU+loE
3QfD8YbbNiLsoUhbKFLhDeF5hJH/ESbxje7PKxguLb2jNtQmsdJWRrA9kC14
8rBNNWaR9BvEowXWsSLLcL5lMO/XaTDuRXrGHveGGgOonl8HtnfbTd02010H
eOrvWzQPrJp7Nv0ts5urKyrVeZmm36ad7bQvXHIu33AuX7cvXHMuXctaulmw
8LBysad2oafua3fDl56Wr71tXwdAHf4CavDo3ODRL0PHvvR1zvV2Ve6KrtwV
U7ENU7kNU7UdXboFmb8RnrMRkbkB5gyCNO7FPgDxQCWdcajfF2o/VVk/H3LM
HQIRy61Xy032xUPWuSLNrJb9lE45B42r3ISo3oZtDovpgsSeQ8ZfwaRdTFQc
iTdUhrHK9vPsYRJblLIcr8yFyeneacnr0qo07dmxTl4oy55QQPMjZhJLMxNd
+eklRysuWmGWQl6BIkKA+o89VE+Y2BtVjic79sXg/xkevQIW+98R0l2MJkmx
bXcCcSWU64/l+KCIXjDKGkRFPLvXaR8vz5pqKHhztra7voi5LiLxP/aR10US
10JoqyNYq8JpqyDM1ZDGZHYrLLVtG+QaEt8bkzASl/gE9G5pxAkSdZLKesXg
THOEM2LpG4XaPfCu04B6q9HMGk2zVvOsxfjOYXmXZZ11Wt44LTMGzWudZlIk
fwRSehrhSQZ5MIUylMF6RKDcxaZeg8YNxKQ+TWVN5xV+ONY0U5X/Ktf5Um98
AUxQonrClT1mC26mkBU+KIIHiuSLTVmDZPui+T6IrC1o+ya0dStK5R0hWnuA
tSqS8jv0tsk2WlF+Q29uo0vSV0C06zFXmNwxu+KRWThgVj1yWUcBVwXu/aQD
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
tu1Y9XqEwBvO9YQZAqHmwCiVV5jWJ/zQHvSDlOTnUtbbbO2nCuPHauPnKuvn
asOnatNcjX2usfJ9c+3HVteYkV+7N8YWHJ21i3owTXvJaCZ7IvErEQmrEQm/
w8Wbku1/MrmB8dz1CemrUAyvuPxYdS5MJt1EkmwjUgLSElfH1Gjra3i1ZpRG
j9MVs6uqJc0d1RcLBO77vCzRWVacPY9YnUsuLmVVmmD2OmXzvdaLR8V5ml3U
9qJ6Z5ot/u/hQm+0JgBVuDeG44VMWI0CepXzZyx1DYztgwIyRfKAsjxBykIw
PGFMT/cIPHiyvJDy9WhZMFIRgBQHIET+CN7aCMsmRFVY3Dl0woMM+kMCrY9A
e0ShD1Lpg2TmMIk1zBQ9EcrGhJJxvmhcLJkUS18oVM+lynGpbFwmeypXjKuU
LzSql1bjdInzTW3h28OV78/Wf7jc9ul6++dbnZ9uHf5868jX20e+3T+21H/u
ydkjtYpMxpaExJX741eEx62IyPg9DIhA3r64qmhy/r6E3AOJ+QcSc3bElByI
LdyBcWzBgn6wkyyeqnIO6SVXhOLravlNpeSWSvpAI70q5F4RCs6z+ecYPKBj
XWmMziRKR3xGCz61EU9sjCU2xxFa0+h1ydS6JEpDKr0pjdFI+v9IeuvoKLP8
X3fu3HNuz3Q3jYUkEAhujTQeT7lbyt3dUl4pSSouxN09wYMFgoQYhOBOdyNx
HIIEC/TM76x1d/VZa6+sCv1f8/D5PN9d77u3rIohLSYIWziKsdaUr0NFM9fL
Z4Zyv1zIm7lU9uUKwKn28zWQVzVgvestfX4w8/ec+HooVhccyZsbCYrPujTW
sRKauh5VvBNbvgtXshNfGU3aY03dF5/UIjGXoni7I8iu9WjbCljKOoQzJMoY
FAFW3gZoN47wQCt5mmJ+VeQPq6kK31Sl+3V54svawvcHK6aa0iYS9TcFnPZo
yu7NnH1Cz+XKMucGPGFWLGUehDQ3hjEfGjcHbvqVUcJKlq2mYf8dLgwkJMVo
i+gpjo2iRLhJvoEP/2e0eou4xl5fE9/sgNht4XpntKE8oVa9RZ5MK0in7U7F
Z2Syc/K1TbmC8gJhaZlg96nihnKez76B5QyXVdvBLMlSBkIcy5E5W3FAnCiz
Y7RLYelb0YL5sbKFcNF8CCcIDujSLwNJBQGdyA+EguBSL0f4w2oFwrkebV4O
1y+OlQVEWZbGFu3CH0aS++NYgwzeDQ7/BldwnSe6yZffFirviFR31Nr7aqX/
cFqVblhvfKiPf2C0PzCYgH39aYl/aLOCWhxL804Upz1pyH12qPTl8doXJ+pe
nWp8faZ+qrf9bd/etwP73vbt+9C/f+Zyx+fbJ68dPpDINOMWRKN+jqDPjrSu
hGdsJ5XguBk7qOk7CBk7yckb0Dm/oUAgpG/Cm5biD4iNowW+K3ZLnz1hwOPs
cVj7HfEXXJYea3x3fPwZg/GUztip1B6TaQ7y5HvponaqoIXAacAya5D0SjS9
BMsqQrLLMZw2Or+dK6gmMTN2ksqgzAflCV8AV1dKZi7u/jpY+DdL9V8u13y+
XPl5qGJ6oPjNidxHpc4mAkX4S5g4IMa5Cu5bj0j5FZmyEZW/DVO6C+uHKpJY
Fk7a78nc78ze50htUdnrKbKCGHrGdmLWdnziaihoBNWCqOyNiLNY4gOt+Em6
9VVhwqtS95sS19sK75tSz9uqpHdVCW/yLc+TtLdk4lYYv5Xl6UtIO5eaRPkx
krIATp0PpS6A0ufCOIsoxg2CEl6SYBk+8v/5Df+v2DSiq1KWb98k3A1gW0cj
z0HQ5qKTUJY8bmplfF0OraDIWJ8n261Yo4iPteUqqvOlZZmEtEzu7lpfZ7Gy
utHU0Ca0deS1usM18hBavSGrVpvNnwt1rkIlr0cAfSL9HAmcPHU7VhwIlYcC
xYLxgmFc/828SM0ajHwlVhjs339QLYYrQ+DGFWjPJpx3Hdq4FA6aMT4Umgf+
z6AYZ8nM8xT2JQbvGkd4kyu+JVTcF8suC5W35JqHStWwTvdIrx8xGh7pDA+N
xj+BbsWbHlqsjx2O0ST3eHbSREX2k8bcZweKXxytfNFZ/fJo9csT1a/PNL05
0/S2t+1D/57pgb3TA/s+DR3+61bni2unGlKKactwhFnh8cuRjpWIUiwjbRs5
aTPet43o24DavQWTsRHj+xVnWILv1DuG85Mumgx9LtdgSuKA/9oR56Db1uu0
n7XaT1md3RbLWZP1tMF0TKU/JtUeEij3ceWtVGEDnleF5xYj6AUQei2B2ymV
dEn5e+ns9O3EgjDSw4qEr5dKvl4t+TpU8PVy2czNRr9cXa78crn8fW/hq73u
h5mKVjReExwlXxDlXY/M247fvZ2QuQ3n3wYJI1TGECuiCBWRxPII8j5X1n53
9n5f/n53zj69t5GtKcdwi6BxWVtQ+sAI+dywzPWwbizxT43kSZrtVUEi4Op1
mXuqzPW2yuN/kbAi0f8evUt9VSC9YMkeSMw7LrNmwnnYn6G0IBh1fixlTjT+
39GCpfRKbm6TpjoNlyZdq0yAehvNVUnRWusWWUK0SriMRpqFTkK7MtE2URDZ
DrNVWuqyeMnyNTzDToNxq8kKd5ToakvElcWCsva8rmpHe52jvgCuycQKKl21
rMVUEFaHkyvsUQpgho6VOG4ImhIAN63FZO0kyEMQ8mVY2RKkcCHAGykLRWtW
YzW/4sWhSNFihHwxVLcCZVyJTliNzNmBMyz1y3w8KNMIYjOS3RPHHqJxL9G4
11iCO0LZHYH0kkB6Vax+oNAMa/WP482PTaZhY/xDAJha90Cle2iyPAJh5baN
pnkm8nyTFVlPGvKe7S15caTyxbFK8PMV4OpU/euu+rfdTe/72j6c3/Px/N7p
oUPTQx1frx7/9PvZUw1Nko1U3vxIaSA8G8pI2kpO2Oh/QTVpPXL3dnz6BmTC
coR+Cb43wf04K2HQbLjsS7iW5rroP8zKdcHr7HM5+xL8p2R3O93dtgQ/Y0bz
MU38MZXhkFx3QKBq58iaWLJKIr8SwdhP5w1o+IMa7mEaJXsbsQFJf9KW6Mfp
WvUMGP1uVH+73TBzo3bmSvXnKxVvTmbedEqKdyK5v0SI5kakbUYVh+MKtmNy
N6Pzt+PLo8kNseQGBKUymlC6DVW9k9BqTtvryT6UWXpkd9nh5Lx95sQWgbYa
x87dhjQvjhH9Ep6yGnaOGPenTvkk3fm6NOltpfdNpedNpXeq0vmu1vO+2vk6
3zxuVt01JLzq7uwymEpjhck7+ZxFOEoAhDYvhjInnDw7mvhLtHETKyFGmU12
V0ty61U5iRFS61a5br1Qs1mq3axLISZXStPFi4jiUEaeqsSN0ItXseVrJaLV
fC/eZ412+ijpZdr6RseeBu/BGm9HU8bBcm0J5h9RmWJnbVIz6SdUEdPSmFCo
DITplqEZi1DkAIRmNSZjB0EZglAsQckXo4WLkKxFKNliuG41Vr0KKwtFikNQ
kkUw80q0bS3WvQZdGYX3rEGAadEYCisMI7UhGX1U9iUa+wZHcJsvviMQX2IK
rooVf6j1D5XqxxrdI1P8Y4PhsSH+EeAKuJZG/yjeMOI0jye7JjITJ3KTJ4rS
nlRkP20teLav+PnBipcdoBArXh0re3Wi8s2Z+nfdzR/6mqcH2j9ePABM/uOV
41+vdM78efrCvjb9Fjrtl6iUXWTneqxpJdS6Gulei8z+DZO2AWFeBNMuRA56
3H+mu/otpiupzstpHv+pC0nui0mOvkTXgMfT4/Gc83i67U7/nRE2e5fZ0gmC
S63rUBj2S/V7RNpmvqaBwj/C5VzSsS/rWEdp1OqdxD6Z4E1X1tfrNTM36r7d
rPt6s37mVsPM9dovQ8WfLhRPNLn2EOP4c6OAP6RtwtRBSZVRhJKduIKtuLII
UjOCugdDb0ZSq2LIRTuxddHk5vjUPa6cjvTSwwU1R3LLD6cW7jd5mwXqwigi
kDHB7IiUNbCzOMrvWvnTdMfrMv/3g29qPG+qE6eqXP4rJ6pdr/JtY0bN8+LS
j9fP7hfYShBy3XK8IpTID0SJg9D8hUh2IFK+lGTdyiPPhtLmw9zhgvi1JOVy
igRo/HK6ebvSg7SkYHTq1WTs/wu1RpnqE9s4wWTRaq5xp06+Rqrfoc9g5rpg
7kRscrm2psG5t8a5pyXv6P78vdJfldxg5NW9B/N42c6tkgNpJQm/cQXzoulB
cMoClGK5/4E95UL/BeLSJRjxMhx3KU66BGVYhzOtBT0IFy9GS5ZinJsJjtXo
lA3YfQhiTThOEggUKybzN0wbmjHI4PovJRTwb/BFPSTeZY70kUz1UKd/qNU/
kmuGAUh6/TBAS/t3fBnNIxbriMcxkeKeyPY9yfU9KUp/Up71tD73eXPB8/bi
F/tKAFqvjla87ix/c6r67anaD91NH/tbPw7u/Xzx0OcrR79cPfH56unvD88O
7W+TryHb1qFdG/G6ZUjDckTyFnzWVlzyRpx6Mca4gngn3Xs/xdFjsw0lu4bS
vIOpnv4k/yuBvT43+NDndfd5Es4luLsdCacdrm6n86TZekxvORZvPaA1H9Da
2mXGNr78uIx3Xsu5pGGc5NIOoih3U/SfBgq+Xa+euVX77WbNt1t13241zlyr
mj6f+6bTdydDnf0bivNTpHsloiaKUAshV8WSKyOIFTsJjQjaQSL9EJ7eCCNX
xVAqIkktCEat0tOgTTyQmNexu/xIYU3H7oqOxJxDzsR6qgAUqGx2eNpa6Eks
5Q9/Xllflbnf1idN1bqnarxv/Xd7Abqcr/KtE2btq/Lc0WNH91CNA5mF9Hmx
IKDYC2Lky9DKZThFKM64ge7aypUuJwuX4Jw7uIqleOlSonEjV7WWKgxF+a9J
mg8Vr6RSAwja7dJCZa5hm5YaTDDs0hp3aLSbNQkYbw473xllzWFmtyQfrHe2
VjuaihT5lYYa6zbrQV3iQFWbZas6j28qk6fRZ8eyFuFoITjdOrJvO0WzHK9e
iZcuxwqXY3mLceIVWMNanPlXgmQlUbqCIF+GAV3jXIdP20w5jGcdQFKNy1GC
+VDfesweAv8SX3ydybtM45+lCQY5kgdK3UOZahgklcbwUAOIMvpfc9ZqH+t1
wzrtsDV+LME25rVPprsndoO8SposSX1SnP6kKvtZXdazprxnzfkv9ua/6ih8
3VE01Vn29mTlu+76j73N0+dbPw0d+HgJcHXq0/XTX26e+zbcfbayUrUEZgyJ
VAREaRdG+n6FJ65FZv6GVSxCJfxK+jPXe9Op63PYLvm/dHZfTHX5Hy1OSujz
+N+v6feAD65el8t/zY3TfcaecMqW0Gl2HDeaDxusB3S2fSrjXrn2qEw0oOVc
1jP7RZRzbOpEjePz5YqZW3VfbwOoakEJfr9d//lq+dvuzMl6c6+K7VoONyxG
lEYQm6CUmihKI5xaG0VqiiUfo7A7OYJDBCZo0ooIUm2MP+oTI9jFDEOrJWN/
ctGxwtrOioYzpTWdGTmtEo1vA1Iya1fqGkgXgfqnQfF/nxd9X+9/f9D/1Gi9
90Nz0rta95tC2zO7chwUfW5RXgQ/F0Ul/RIVNx/CCIQwF8RyF0KZ82N0G6jg
L1e/hsgPhjOCEdTZMOUq5m5ykn4DS7KMEDcPQZoLt0fLpKvomB+hmh1KkD+y
tTzuYrJui8K8XafZpM7kF6YTs1OxSa1phxocTTWW1lJlVWtiSxE9MRdtrVC5
C9UV2l8pZ8qb6fPhcfPhxDkww2oU+GeuWQrXLoNLAqH+o1oCENIQRPwajOVX
gjgEIQ6KFYKhZg3CvRa9ewu+h8bqJtFA7wtmRXrXoNsw3Ktc4UUiq5vMuy5X
PpRI/E8aa3QApGG15pFe8xiwpFUPa3WP9YZhk2nEZBhzmsc81ifJ9skcz0Q2
QMv3tDD5aWXG0/rdT+synjXmPW8tfLmv6OXegtdHSt+ernp3pu5DT+P0QPOn
C/4q/HLl+Jfrp77c7vlyu29mtL/NkS6dFyacE64KiEhaA7Evg7lXw7izYjK3
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
R6AHFYArMBuKRoFfGbRjZv2o3TjmNIy64scSrRNJtokUx1i6eyzLPZ6bOFGY
PFGdPlm/e7I19+mBoucdFS9PtLwEVXhu/+ueo+8Gjr8fOj19+cz0tZ6P1wBU
PWB9vN735Y/eR3VVV8XMW8nKw3JxG1/YoVId1Wi6zMYzNlOfyzKQ7PQfSJvq
OpeccC7Z1Z3sPJPkPumxnXLZTzqtvU7bkMt0zW28laC67RBfiedfNzD/8Emn
DnvBDPifh63/vVf57VL22z2a3w2MCxTKWQr1BJp4AEpqiiC2xFIOISltsYTS
rZi8zeiaGOp+EucAmduIYgOtKo6hF8UwypHsMrSgDCMoxvGTt+DIsyPJs8II
v0QyFsCzaIZDeeWnquu66hq6ykr2uL1pEIYpJLpuG/KuiPEkSfO60Pau1j1V
735T75pqSHjbCPLKO1XufJmh/0MlfZDuK4FLEreydKtInAVwegCMt9B/lgtn
IYwZgmQF+m8uZgWhQBYpVlAAP9JVZMEKIFoc0VK8OBSrWIpTriZKl6LIv0Di
FqA86HjlSgppFky4mJ7OyspiZOo2SVkLifSFCGoAzoa31qfula9kiZYyTdu1
yST3sbpjJeYs8o87lQtj1ItiaXMjdUtj1KEQYVC0JDhaODeMAxpwQaQqINy3
BlK+FdmFJl6k0K9S6YCr63zhTT6vE07UBsFythOP4mh3hNzHcqFf1/1PWKlA
D47r1BM65YRFN2nS+D/o5JNGxbhBOqqV+nFSyUb10lHgV0Dd43XA3sfsIK9M
/t0Gj2Xcax3z2cfSnMCyxncnTRT6JirSJusyn7Tsfrq38Jl/w6Hx+ZnWV2f3
verr8Nv7YNeHy2enQQ9ePffxRs/Hm73AtT7f65nqP/q7WXbByK7DxpUjqfUU
Zn0cq4Un2i+VHddqT5gsZ53mXrejx+c6l+o5m+Q6k+g6lQRSy9FtN13wWK8n
W+6kxN/3qu8mSK9aJZeNwvup+nens/76vdHP1Z2SL/2+5yWim0LKeTL5DJ7c
gSC3RBObIgkHkHF7EHFlW9EFv6HLIwjNaPY+ArcVw67DcEpiWSWx9HIEpxon
LEFyitD8nKg4+2ooZVYY8acd+B/DWQGw3Djd/rSiUzUNA22t52or9yb5UmPi
bMti6rcjbwtZE0maN8WON9V+rvwLtGGzF/jVVIntTab6oZp/TW8qQcmTdrDj
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
kfn/ALPR5os=
    "], {{0, 200}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Comments" -> 
      Association[
       "Software" -> "Wolfram Mathematica 8.0", "Creation Time" -> 
        DateObject[{2010, 2, 18, 12, 43, 31.}, "Instant", "Gregorian", -4.]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{200, 200},
  PlotRange->{{0, 200}, {0, 200}}]], "Output",
 CellChangeTimes->{
  3.7069718555908213`*^9, {3.707242486771789*^9, 3.707242515193404*^9}, 
   3.714835649228985*^9}]
}, Open  ]],

Cell[TextData[StyleBox["The first kernel  - identity one. ",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{3.706971601460157*^9},
 Background->RGBColor[
  0.9990997177080949, 0.937270160982681, 0.1552452887769894]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageConvolve", "[", 
  RowBox[{"Lena", ",", 
   FormBox[
    RowBox[{"(", GridBox[{
       {"0", "0", "0"},
       {"0", "1", "0"},
       {"0", "0", "0"}
      }], ")"}],
    TraditionalForm]}], "]"}]], "Input",
 CellChangeTimes->{{3.706970945770281*^9, 3.7069709461683207`*^9}, {
  3.706971687639454*^9, 3.706971744550685*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzE3X28d9lZ1/dUW2ufqbWU2pRGmqZpmqbTmKbpNHPOSNM0naaUxpRSay1Y
pKmlatHW2qcXoiIgAiICRgyIEGOMMcYQA8YYYghjjOMYY4xxHMcYwhAjIM8i
Ys97rd9n39fZuceAfbX949z3Ouusvfbea19rXd/1vR7Wz/0lv+Iln/3TnvSk
J/2qn3nzz0s+89f8/M/93M/8tb/gZ/jll37m5/y8Z3/OT78pPnj5Uf7AX/3M
6y/+on/k+u/+xE9c/dXHPuP6i77wZ17/7R/7sasP/rX/9voLf9M/fP03v+/7
Vlkb9dr/pi/4Gdd/4yMfuXrsr/w3q/zdjz9+9ehf/q+vf+Nv+Aev/9oHPnD1
Vx79xasf9dr8+s//add/9uGHr/7yI7/o+gt+4z90/ZcfeWTVf/6v+weu/8J7
37uu/XWf96Sjvfq/+L73ref5Db/+p1//lUcfvfprH/gl17/5i//R67/+4Q9f
Pf5d/931l/6Wf+L6uz70oVX+rV/+cevav/7hX3b9NV/9z13/0A/+4FH2/H/j
I59z/du/8mevZ1b/lb/tn1n1rtX/X33ssfXMrnOvd//Z/+z6zzz00JVn+9Zv
+Xevf9fXfu3Vt7zpTVff9I1PvXnOz7v6g6997dXvfPnPuenjV1598xvecPV7
vuGTbt73C1f5ld/0r1x/2Zd+6Wrzmt//r1//tq/4iqs/8sY3Xv2h192zytr8
4dc/e/X5h1//+qvX/6F/a9X/vle96up1f/DfvFX/O1/+8lXW/nd8zdfc9PG6
qzf84Z+36vU/+9G/sv7/4GufdfO+X3n1e1/5ytXetfr/I2987vU3feM3rvZv
+WP3XavT/m3f9vOvf/+rX73q3/4n/v3r3ffrr/7E2z75+o+9+c3r+b/jHS+8
9r/27/pT//H1n3jb267+6Ld+69U7/+R/dG1s/O1Pv+vF13/ywQevXPPwn/lP
V/nb3vrWq4f+9H9y/e1vf/uVa7rW35T/3LvffXPdu67+zEOfcu3/73jHO1Y/
/netetcq/6l3PrCu1b9r/9Q737meQVn76pW1c63+3avn0Zfvq/zH3/KWVe9b
u0a9Z/C3P/+el67+9fPn3v2So76y9n/24U9d16rv+bWf764N2deXNsraGRN1
+tFevWs8g7LndC/PX5vGqj7duz6VjY82f+n971/9qyfDxsR1+vS93EefjWHf
q/Fs/LXTvudX33i6b/30vt7d87uPfjxnY9Kcqqy+8fnz73nPrfH3PH13P8r7
XR9abcxR7+V56t+7a+ub9mzq5zhXr92ffPBFR3vj0L30qf3+eWCVXfPgd/yH
t2Svdzc+yfYct+Tc7127//aia/f0u2v9bxzMO2V9mY/m1H6HT742F7X5o996
75qD2pjXf+A1r1nPY60w183N3//qZ9ysh1++5v4bv/nfXmuCuV0/2iRL+iTn
1mzj+b6/8F9c/60f/dEr66G12jrsb9Zn67lxV/6S3/yPrbX3kb/0X601uTau
1a9r6YrKf+fHf/zKN26dt7bXv3Xb2qtc/9Zk6zxdQKd85wc/uMqu1af29aM9
3UVGq69cvWs9D/mp//k8xrn6npnu8zzK6rsX/WV8GhPP1rXm3fv/4n+5+tT/
h77zl16//Hf882t8fuD7P/fadzV2P/ojv+aarHzVb/9nb8bsf702B17xu/7F
6x//2//7te/xDb/7596M2f9x/d4//59ff/3X/UvXP/LD/8s12dWeHnzV7/1X
17tZz8kSufrG3/MvH3rn973q6UtH+Nb0gjWfPH3Lm553rU75TX/k31ny4Po3
/9F/b/VDrv7Ym59/be5WT97271fHOq8NuXNfbfZa+9DSlcmnd1X2821vvf/o
h5x7Br9rox/3Uu/vfq+efJJb/+859snH3NE+ffTWP359ve9zp71vqo3rzGHl
7vXtb3/B6sfvzTu/e8fGhH40lvu5711l79+7uAcZI58/8sM/vHCFb+3b+26w
hrXpbvjKPLkbvtKP9mQs+T/jq7CKa83B/6f4yrX/X+GrH/j+7z/wlbExR874
6td//ucvnPO1v/NfOPAV2T7jK23uhq/CS3fDV3DRGV/p56eCr5R/KvgqOX8i
fEXmJ77yQ3fs9f4OvvKTfrkbvlJP1s/4amKPia+6duKr9NHEVxNTPRG+0q7n
SY+r02fYRv3EUWd8FY4646tw0cfCV7XpfT8Wvuq+Ya2fDL4Kr5o74Ssy3Fil
0+e3+Mngq949fOVv+m88J56Z+EqfP1l8Fe79yeAr68dPFV/VT/UfC1/pV5/a
h6+S+Vn/sfDVxGbhq60HPja+2nL8yUsf/f+Br6zJE1+FK/5+8NVc5ye+0s/d
8FW6oD373fBVff698JX2fy985b4fC195hifCV737xFfuG76yD4fB7oavvvqr
Pv6nhK+0n/jK9w3n0EG/5Uu+5IpMvPr3/Ws/JXwFL4Vb6IW/X3yl/+QzHDLx
lev/38RX+28fja/2nuoFq08/P1l8ZSz/XvgqLAQXfd/3/oprmGB/+5cu+bWO
+F5k6Xu/53sObgqG+c4Pfta6lvxrE45SJm9kT/tkGBYiq2QsXET+lc0v498c
IXvn+dIcbE5ZQ+c+xX09j/vCRV/2pf/kejZ46bd9xc9azw9HwfjwlTJ5hJm+
52/8j6u+NvCYORK+ak7pT9ma3Lcgh+Gr3/vKp5kPC9v8rq998s28+ay1duGv
fugHf/Uqk30cl/IfeM0zF+6Ci8h5Mm89tAZqox4eMweqtzbisipXDw8pw07K
1lj1v+cbvmGVqw+z6VP9V3/VV6167/J1r3jFKpsj+/6vWzJJlpTJHhkLU5F5
v9MLyp6ffjEe2tMj2mpjzYjvsmaQbe3SxWRSm/BSvJZrwlR+D4+FkdJB9EK8
1t36jI+qTTyVv3meOKt4Fb9Pfuk9f+4XHBgAtqm9+ZIe10ZZvXJ83eTE9Nkz
9DxhpPlsytqHK8Jm8WlhnokxwmBdqz6+Jbwa9lDe7/bAwZuFAeISJx6u3Jgr
u3bi3virM06bmMq15MQ3mjgqjNc7zu+ovnGbz9M7Tky73+M253mWJX33/Hvt
fMvxvhP/TE41DN97da368FXyllz17mG5+qnPuLLK4cDwVev8O779P1jzK6yV
PqI7wlp0mTmnjbnc/sgcN6+tS/CVdcDctoa0DtBZe6/2+uMdk2Frre/6F977
aWvf6fe/9P5fuNbksJa1N8xjr92emu7IZjE5pdb8ymQSHoNzwjZ0B32h/3NZ
e33SI+216Zd0jTbplMrpEXKmzcRaXVufnqFnDl8p18/kBOgjz1M5HKjsmbWn
R7SBrzxD9zJWnv97v+eXX8ND+oWXfAN6K3wFh/3tH/vfrn2PsJbvAV9Vjx+h
x+EA+pgshRvt/ekCMkAHtZd/7R/4Nxb2JkPuH06w/rfOwxJkw5xVbr888ZV6
cqre/dWFx5ojcMjGILusDVmvz33Ntom4V1jI9eS//sNXE2vNa+PB2vs3R844
jf5qL6O833vPteZp5frvOd03/iruy7vop/UhbKYfnKE5aEx9kxu9fmUexi+F
hcwj8wWeIZPmV5gK/oCpJr6Kg8JxNb+y6ynXJkwVtq+sTeX2GnMeKZNzewGy
au5/9+MvWxjJc37kr/8PS07NdzgKT6UcvvLMZBtn5V20//Iv+6fWvNCn+5qP
5r7+4hnaq5Ix40b+yC3OCp4xB27m25W/2TvcPNMqh6+saXik3/QFX7DwDBz1
m7/4i1f9N7/hOQemUobBXGudtAfRfxgpfNU6ibOamEp7uC0Mpj6ubNv/nrPw
IVmpDEvh5fYzvnbNF+sxmSdv3pVcKbdHCGuFr5ojypufe91Rn60wvZa+I7vp
7srp07N+nDgqXXDWuen02oQNlPUfxstWFRZKj6fT0/txLNnm1LtXnJXnsc6d
8VvlMEMczuSFwnJhpJ5n8jnhhJ6t9w1XNK/n84cts/fFw4TBahNXFmcVXkrO
21MYt/qJDwx/ZmdsjszxN05kqW8XDxbm7LtMjqtvMbFxmPw8hn3fOeZhy7Br
7ef87V3O2D7s1Dsq98zJqvrGBL5q79xYaT/5qGS4e2nf/mLa07tvfVZOp4S1
0muTZwhfmb/WBr/jDX7313/9mtfx3sr2d+3j4rLU0yPht8l/km3rpTUZTrAv
tyZOLivbRP4h1uTsFPlyhGem/S48U5leCJNMHXS38hlfde3sx/PXZuKu7INT
B4W7JjbrXj2ncvvuaWeJZ6MvlOmjxicM2bWNoT7pR/YUuulmL34NExg7XBY5
87cf+1u/9pp840Hgq7BWXBZ8pQ1Z/4rf+k9f01+4KpiYbaI9ERuK9T8ZIBtk
iL6w5pMZ+CebhbL/yQN5SzbUW+PjssIn2qhPPsNa3ilsUxvlyS+Ff8JRzTv7
+vRLOMpPmCfuq2snHnPtbNO18cbtcdJH2ofr6LX4K+1bP6vv2tYTY2g8jR0c
/Tu+5hOu6G/jd1N/X/5DN/PuPrausBC8EY6KL2rfkQyTJfXNC+XmAvmpftr1
qg8vxVm1B2m+TEzVniLOyrPhmnCrnu3D3/3fL/nyPNn7wk7wlfke1nKtMgzm
2VwLm+kHR+cd3cu88HdyQH6Np29tn4j/sZaR2xvcZhwXfwVfKeOv1MNI5P1m
PiycY+9gvLWxl4Sv9AMjKYeRwlrqzQvfzjoZ7xQe2/Pk2QceU65ee31uLHjP
wl3qzTvrqn6sw/6uf2u1eyrDV/FX5Dl81T46nN+8I2/xV9Zncqec3iFr6biJ
tZTTNeGoyo15dsawR/gkDmRirXRWunvW+3ZnfBWuSxeHVSam6r44q66tPnwV
Hps2xDP3kp4NR2V/nLxBZf1UPj/nxFpn7HS3e4X9wo2T25l49cy3zPGf3yg8
HE5ufBrzMIk63zfcNdtMnDnHPNzY9+3Zpl2452wdfqLvnu0vGZi4br57Yztx
VM+vPdw1ebnJg81xaH2Gl2oTHps2x/ixaVvsXaZtMX5s6qBps8hGky+WuWzu
qoed9l7tDWs9Md/jzPMrCGuZ59a02mcnhZvJp/Vy25g/fWEo66q1ke0vP6i5
187PNt2RLc/6nx+IcjxPuGvqi+wjs5w+sv6nj9JT2WUqh7XmfnzaR9JxleOj
JgZL7xiHaXP07mFCZW28VzgqTNW1eL+4L2OYzRTW6t3t/fmO+Bsuiy6nk2An
8nqjsxdn5XvAVz/xd/7Pha/onLAWDAanwQpwmjWEfqRz7evzCcFnplPoIzoh
n5P4T9ip9R8WCjvREWGkuKlkMpyjnF6I7zrjK23SKbN9/cRTVY6PCl91r4mv
Jn819yPKzcf0VDxA18YVeBdtpq2kdUn79svmEV1szsCyYSr3vhnn++h797gZ
z4WvLjpzlWGM7HFThqf8z71GbchMHBfZm9eGu5oXc9+RzE9b4cRX7ut5lOFz
MmOOT85KGaYyx5XjrLIVTruh51HGWXl+OI08hgknvjIG6YLsYmES8oeDZR80
zmQdZ0Ve2cvxWtv29vTVZnNGz1pYKNvf5K/iprLftfc0L/a+4tnHPjQMtufG
PQeOylY48VVclvsqW3v16V72vL0L+YfvzDE25eYXuXV/GDxbYfuLuOJ8rqbc
ujb7oGuMoTb6Sj9qH+5Kj0+9edaVk6vJjvZEuKJyOEGfcR3TnyesFWcy7YbW
s/iTbH/qrWdhMOvYtBuqm/bQ7hsf1TMod212xnS9Nu2twhv55OcLVP/hwLOd
8ez3VX1jMjmfiUXjfM580eQYpy/TxG8Tg83vG+/XtwujNobTDttY5YM3ecWe
ecrG5DPPduQzD5atOV+paQecfOnEk+R54qVzeeK06ROYvS9eq/7DbF3bM0ye
Vjv4KnsKHWHs9/75BYdtwjxtPprL+V+Z43sv9cZDb6q3Vpjv6vPLMq+tS/kq
5E8Sp2o9Dl9ZU8MSeJjpZ24dzl83HxK+WOGu7IYTL7kWLtJP9ZWzTVjz9WPN
r6z+uz702ete6alsc+kdeGbqo7BWZe21SQfle6xN5XBRPJt67569b/qVxV/R
ceErOgW+UvZsxjCbDt+2uCz3oo9gIX5ZcIyxYCvMbghfxWWFqcJa026oDdsi
boGeMBa+qfuTGfqIrvHd4StrPtkiJ9vWsflP+kGbbNDaJGMbu9x7yxeL7BQb
lZ/VxEswUv5+cbDTj8u8CEcl2/UZdkrvxE3lNzX3ILWJs4qniuOqnI0+7BTn
bN3I/3Pus8yRbEb8im7k58BUN98UP3XBB29aOOri17aw1radPLz4KxiDXJkL
4aj2BWGe8FL4Jx41mQyPJbfnvUnX5q81YzrqJ4w355c5RQ7NQbiI3Cmrx195
ZnzUxFTak+fKZFib3/Il//iqd6053n3tIcJX/h5vsGXw9UvG8hWHr/hZWcvI
N/4KdoGvYC1rFvsgfLV90+9Za1r4ynirxymFl2At/ZP1M+7K/yqe6uyjNXGX
su/vec74Sp/6z1df+Yyv9G0ukUmYyI81Pxt9e4T40uyDZDKsRaeEbSZ/NXHU
3fxkJqc07YZhqskjhWeqP/MV6tNfyvU/8Ub2vvR7vMrsf/qxh4vCV2efbb9P
HDV5qrgvz2ONnD7zYcWw1nzfs1/9tA9O3+/JU02uLI7I387v3vue7ZvThhvf
GL4KA/f8PcOZhwwHTjts327GRU68mt/+xM+T1wpfTVvw5MfO/mxnW2GyMW12
k5eb/mbZCuO1GofkPNlunQ9rzTGZPl3ZZ2c5nqprp1+Wd6Cz8o2nR9rL50OV
Lps6UXnruedebx76bYc/gN/pVmuDeYrLsiaoj8vKnrJjO96zZHXzUh9YOIGO
yRcL3sgv3bqt3ZnLst6Gu/LXClPp075eeeIoZfX21NoUV3XGWurPHFe4S337
+jix9FTl7CbahKOq9/7ZOvWTT5cxgZ3oLHJc2TPEceXfrr3nmb5YxQ6EzfgI
uy89xS7CT5itEFYwdrATOWY3zFb4da/4xIW14Cs6J14rH3gyRBd6flgM/0h3
WNfJENtKWCuMbX2nI+iCia/IEn1BD+Sjla0wHjUf9fzew1pnXot+ad8xfaWy
J+69x/23fNqzxcdr5R/VPMq3Kg5q7o8mzzz31NPWkM9DfLX2/KthJePi+8FI
8FL2Prrf2EzO6kZeDnyFv8KzXOyWq004Kht3MYDtBSY3S8bIf/sFch5/23xJ
bqedcfaf/bpyPlp3m2vKOKvwVX5TyvBVvu5hMFyWuEJzM3ui9vCVctjMs1nf
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
HuiF+Mz8sugRazw5wV/FWU3/K7ojrAXzpy/IZ/uUsw1xXlsurGIMsyHuGN93
Ls4qLl154qs4kOmnYWz2/uzhY5/lWrqbjjYH/O1Gf1+1r7jBGveVsxJGKsdl
PurZ/mCnWTYvswmGqdR7Dn1O++DMhxDvmv0uzio/w2TYHIGR4rXissJad+Oy
iuENU8VNlc+KLQ++Ko8omVI/fa7CVHFWk2duL9N8V46/istSnx0//ytzSt/x
DPlmwydwK/ljn73p98q3IN83a+vV5o821tr2vKcvDObbWdOy5ypny8s+qEyG
9TH9r8rnUB6byuXFOscJhseyRebf5b6e37NYZyuHr4ozNRf0HWeVzJerwVod
pvJjrs+cDO2Jij0P56RrwlrpqfxYpm5Kj59tiF0bXxEPMPmBytM3KZ+lsNnk
uGZ9WCvcNfmHibXSg9bDrp12QOVwzuSXJqaKj5oczuZrtg9Suiw7Wu3dW5v0
u/qdU/Z1qx91vpFn7rso18aY1Ma7z9jPM3ZqrGauhnBXvGW+dr3jjImbOTqS
hzNvE5YIzzQm8cZnf7O+14zHnP5jd7Njhg/PsauTZ5t4KbnKxj05pclfhScb
n/o/Y6TJ6alv3OZcCKOWLyJ9NHP15NPi/fPFqpwOKv539/u8A0cVO+y7t0eb
+VvK26AuPuHiU3Lg2ORz59p8ZGEDeMqaDF/BKn7Px6Mc1NZ2WCv/K/a+mSM6
DFY5X3frdlhrlsNOnqG1Pbxkbc+/Xfvsfdlcih/s2vDVjIXP5yo//HP+0lnO
5z/uqxxf++yEX3iLy4Kp8nsPX8Vfqcc5wZ6VjYfxpx/xT+4FI+GyvGdcFr8s
XJZvQ/8o+zZi2eEr95t2Q+35wJMJ74Y3MGa+O5vLzAuUDwmZyf+qeNV4zvyj
YKEd5/e2WzGA2Q3PORbCUZXDbPWz1/SrI5/87Me8mGvF9Js19n5mvPnkQ9TJ
n5DfFM7KO3sWtj86ld69WV/uY5fynnyu+P1or6zec7AD4r98J/hKG3Kmn/BV
WCtcNO3U066d7S+eKv4nX/S4oOyD4bG438rxS8WbhKmm7zrOqnhAWCdMld9U
vljZ4nvm5lqcWHufia+0j78y35XVkzVjD195Rt89/Ri+gkmsU+VngPsnpiLH
fLG2bfsZhx87LKScLS8ZLofVjCUsV0N2wHI15NNe2V6ja/N7n1irfuKvyi+x
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
9z514jkWfuqpdHp2qOnzk82xuTxtbeGZiZHi08J7k2eIbznbHM94afJd4a7K
T8SVTR/7bIWtRfawjYn26eLJZU3cFRaK95j4NpwcBgiXxvNrT/cqqw+bpdPV
K4edqvcTlxLWmjlpsy/XZ/ed/E/fIo6o59/j/dARiz1tgsrTb2riomTsbBNM
TpKr8EzfKKw15Wf6nvXtksmzP3zvVf99x2yj09c9jrTytJ/mr1Wfrsv+aIyL
wyp2fmKqfN2339i9a17vfu/EQZcTr7iwYgnN/e13eccPrVxY/s9HaOOUO/jK
mg8/wAZhrc7TKRaPLsheNm2CnWPYHj/OKpw2z9xpnZ/n207uKCw0/djDS/Mc
w+L7zjmu55kjM1/W5LVmrqHJZcVTlY90nnNdXGE5GcJX5SzN/woOMh7GGv9k
DMh6+Couyz19a3oN5jDOuCzzEDaaMYZnfOV+8BUfLc93iXc/4g1vMMHyffee
ZInuJaM4r3SZvf880zA7iOs6B7MzbfONt2ZMXyzvMjmruGi6uHMAtbnYMpdO
1K68UvqGo5QvfqYHT5Ufu3tqQx+b6/mxuwf/KHKvzJaHg3B/udm1Me6wlne+
PMvhf1XZs4fxzDH3YsfKtgiP5Tc184r4ftNvKqyVbW62ganCTmGqfKjCV/mx
q584Kh5JOXtfvlLeNZ5KOVwURurZwlrTNyxfr+yD4atshdV7L3IevvJ++faQ
gfgr+KQ8ouEotu0bPHG1MdMnHb5Y8JXxJmfl8ctHfZ4zODESTBWvFS4KL4W7
nuh8nNp3Fs+0IZZfVBvPBlOVq+GcnyGsFS9RftFsPXSleZM+DV+V1z2/xHT9
tI+cbVLZsNI12aGyiaSn9Fs/59h2uindXQzdxMbxVPkGW2/Caem1OKLZPn13
xkLTTjd9xqa9r+ef593EhYajzv1MvFebianqM0w1Obd85mcsZGMbNxLvlw03
33jfnR73dzJJd6sjP76jOjJhrVOuXhs/1sbaa6NMnqp3rXKYLWzgZ+KreJKJ
hc4+V+GoecbNjHFrz3v2fZr82I55eOCoD6tPzmrm2uq8nnDaxLHxXcVQhIvm
+YPh877FtJXfTcZ6Ztdme9Wusr/FDeqzPZGy+Vu5vMGu6YzRfY97rzef/cYj
ZqfzKYo3zKcr/xb3b49QfAHMv/mY9y98tW2Dj97K8U6H79jBDxy2sPJlhbXC
XeV5KE/p9L+6Gx91zls1fdGzS2o/z2Ke8YDhq3lG2zyLsJwPM3dW/lezvmuz
CU5MRaeU28E4lCMrbipMVa5R41F+BmNg/Btb459Nlmwou6fvmF89+ZdT1Frv
+eKyvvqrPv6uXBYbC6zl+S7n5S7cRXepJ6NsS54ZH+be+WXt2MJn3oq96hw3
+mvjr51HqzwPnqucpdOnnTwX49MZylvvPu3IcWRMs8G5x+Smwk7lVFfOn2qe
U8Pv2VrCfkdHwhMw1eSv4Kjsfa71LPCY+gvnvfCb59Y/XGdewXL8hNzLM8BX
niHsd8ZR5RiJ14oXyt595ojCTvgomMq8iLMqx0LckXt1xpNrlc3ZGcdXPbnK
/zzcBRft3BIvW7iuPj1b/lRn/6tySkz/9nwj46/0T9aS4fRy8cvZ5rIDhq++
7a33L6wr54gYBWsW/6tyjU7/9ol/Zp6raSucdr2Z/6pYwrBWvu7l1Kr/eKrZ
f/GDrrVXLUbb2tu+g99F+XPIfPxV63l2wPCVchjsHEs4Y9kmTzL1y7RhnWOv
ssfFddR+8jPZ+yb/c/Z3Si9sPuNdH4WR0mVxBdOvJo4on6tyT51tfGGnfNHj
QyY/1n3DRWGAMGF6Nj/tuJSuzfYadirnQ9yUZ5s21rMNK04mHZ29SX1n0Fvz
YWbyTwf4jvSCuaGeLqA/cCZ0gfrOONs+Ivcf9iNyVd4A5csZXetacmdNLobC
T7JEtvL3i9uMCyWH4a7kLY6otTp5qzw5sekftfcBb7/lKxVOrn7zN+88bMHx
lslPMlCfk+OqnxkPOPOSzVxYlc/YLJ/GGV+wsc4LD1sh7Lr59e2Xnv9VmGrL
wY6p12e5GjYHvWNe9rkpzzvsg+Uc9hzuW64t41N+ITyHtdN6G69SjvfNUe1z
YXZ84SMfxWuRozBV9rKwUL5YYa3wUrbCMNXEQmd8lW95fep/YqGZF2uek1su
rDBY5wzO8006Q0dZn55fP+4bN+W+ysarcdAPjOOdqlc2nnApHNXZ0MrGXHtz
ixwaW2X1lcNg3k89/QgL+Z29j6yw/cBU1gXclLL70VFxWeEr+o89sDyl2otb
hNdxHOav75k/Ocyyc5I+68idlY/W5life+iUztnZ8/Pq4Jw7p0Cf5e52vW8A
z8RNsbXFR+V/nu2v/Op4rWxz33LJYWXelncdjsJNFVd4MzZLjxv36YsVBiuf
lffUj3p9mlfhKOVyOHgHz+B5ZptyF+R/VY7cmZPzjFWmHTAfKmeCTztg/uRh
Ku+RvxOZiTvyTp1TY6zVKxsn7cmz9vFaZDVfrImdZvxIz995o/BeubaUtQnj
5d9uTrluxu8Xd7N5qVfeOgcn/so6JZYQvsq/nVzEo2YrnP7n2Qc746bzBGG5
cuqezy7Mz2qeiTPPdJ5+XPW/44LuXXtV/cx4bXIel2vuVLa2X/LYHj5X0/cm
e9zEPHEj+fOUa3T6qFTO/3zaTabNZerNOKJwyLTXnM8WzH8yjBHWSi9XnlzW
jO2afjLdd+a6zH4XZoubyhcoXJSPeno/zsrv877hK7/nbx8vN323sg2FM8s/
cJn/h98C2Tb+5N38gZ2s4fSZdWyW/d0+xBpsjvB31L811Rrt3fHycuZ4BvsH
+UiMlT0GeVdvndUOxmN/UO8dzQHXeE51ru1e5i08tvdwHzzOxdh+q/cfZ2LC
D2TS7+H/YlrDbDO2MTmc9rXw86w/Y7AwVbbIbMHZIi9+FceY79jFO+fjJNtn
rDV5rb5jGH76d4WvzrGZ9dmcyt467YNhJ3M5bip8FV7qPF97q+2z8Jojp9/W
f8+7lb/dOjQx3swz5t3jT8rXtHMVPHLgB79XDmtN3EX26Bq63fqvXb7f4Ss4
J5/5fMUnNzV9n8JpM+96/JLytN+Fi+a5b52H2/m55YEsv6hye/DKnZ9b2bPZ
g3QOCExlrDoHp9hA49DZ2d417BTuCmuRxWkfbDyrrzxthdkcPYNzduy94dRi
DHEfyq4xh8NXMBVboedW5pel3hxWbz2SNx623PrvI0vv5KPL1pjslTsrXnSe
Xdh8nGflsF/ifsI5+Y27Lv+lMFV5q2AYOMc9anPRJ4tf2lz/w4ddDy6iI7P9
5Wf1W7/845ZNcOKufNTjsr7lcoZgPFX3muXOxKk+XiuOK3ySX3r8VTF68+yb
4vjYeMm8GEBjT57gK9+wfKH6LMbQuk4eyLPv4/6+V/kQyK2y8Vcme96PzLtW
P2G28lZlZ8xeWf08ZyffsPiuYhjjr7QJv5kv3tszkEH3T07Kz8AOmDzwv7qR
vYWv6JL82+kZY68N/mqeRRiXFb+UL/rEWtkQ87OaNsFyO8xzBmfu9843zCZo
3bT27ud9+YGpzA3rc/bByu4LR+38pq+7xVPlb5O/dD456bL8lsv/M88iTMcV
41abeRbJ9GkJg+VzPnme9vjnGL3pZ5W/dHnOzza4+pz2uNpUnrov25/2+jyf
V1h92Gn6zFfv/WdeUH2mK/O73nEyDyzZ3Ov1i9f6TK/4LniAHQf+wqUj8Lbw
Enlmm/cdybO5AbfYOyj7duasNu5lb2DeKpuz8FVnydoveTZrqXbhKGuyenYG
eMk7qjcPzBd7CfOALmA/sHbSF+QYxlLefhtPWW3IsfVcP+aJvsiVPZrnsQ6b
u97ZHmH75b3zOEMzPFA53BXnM+1r4dgwQ77iFz+JIy5pnsEBP4SpOl9jxjbG
X2VDzGd++lxNX/dw1zlPxeS+JjebzE+f9vY+3jcfyOL+4gqMSflelLP9GcPO
xynXaGf7Wt9qE/fVGDa/tj32Dn9V7ibr9s7dsLFBMYa+Xf5a1vNyk+6Ywjs2
RO3K8xCXRYbDVzDP5KDyUdfGeh6+mrxWvlITU3UuycRa9FH6JXylTDeZO+kF
zxamym/KfcNUyuQ0TOUdjVdjEo5SDkfRt5ObyufK+xnzM75SPzmrWZ9fVufs
eBdzyPg4Z8daQP91bk5+Wa7nVzWxFv7K+8BNf/cn/q9lT9QmTkw/1gHrj+fP
bliuoezU80yczngir/ZjOAryZyzyp3JduT3JbrhFX0/kr96Zy9n16FdzNB91
Y8QvfdoEw1EwFXxVLgX6cuIxsl8eUfeV54GOz89KvfvWxjcIdynnl1VsXfa+
u/kyhWG0gamK9QtThbXYCss3ZfyTW/iLvjEv/N2Y+YZk3DdQdk/vNPN8wnXZ
B8NI+W7RF/Fj5RrNFlke0c4DxVnhSpU9Z/novGPxg+ZO9y1vZP7tvoN1auYu
o4tu1rv1XcgMv3cyA/eXw4GeUY5fgn/il1xXLtDpZzV92vN7j8vq2nzgy9M+
YxLLc9Uzw1SbY3vFkvNshfRy8YN0U/G2dI06P+WoLG9S3FS2QuOjjXrt0wvZ
s/JjT6fk/1ObyX1NnDZzOYZt4qlmDvYwD/7nbn7jM/+ncm2y9018FX9V+Xxu
YDpxck3d1/xz33S3/uMrqp/8G3mj98lvXJM5AkfxcSLzZNQ44+bNPfXWfG18
R+s5PaHe/+YtfEWezVvf0VzYsSIvWZgIpjK2yvITGnM+GuEu9fgr7a2p+Kzw
EhlXb/+gnXeBibRRNjdc6771TzbgKfcwJmwR1na6Y9sVfs7CXfs8zqesPfSO
eXvaKpt71nnj777aGDfvZExgrX02+yOHHxFZItv5ExYDG/8TJpm5qvLL2vjp
RYdfd5inOPE4q8rZH7XpHLRz/eRIw1TTRy6ZmZxtOMrvvm/nn2a7L2aw2EBz
PHyl3Dh03qj68jNsu/Kzj7h749aZv8UU67/Yz/KHZB8kD53pFq9i3aSHw1Hm
2va3euTwI9Jm2hDjeeK1YJVyGsRrhbWyD57x1Y5jvONPnr/6LJ/PfQsjVR8H
lU2wcphK/xNfhZ08WzkTlD27svdSP/FSdj1lbWZ9fOBsM7FT61v9a5OdRXly
AvVvTuUnT0fbE1kvYCqyRU/nA19u0vyycFbeGW7CZRkLuuhJT/q8NW+1d3YP
fWMtIoeX/AVLltqbFydIPu27cEJki96FqWCP8lMpkz8xgNkE59nKlcsFmp9V
9cXu0a/F+mXXmzmsOrt55rOK78r2Vzxg+UX1f7HtH+fgKMOB4SvlmeM9DKac
X9Pkf8qNMG1q5aQytvaYZDus5VptrOfGb3JW4RZjjsO85JRfc+rCo62ycfGM
2ruPd9IPnLbtn3dsjhNfhaPCV8U2Fp8YplL2nOqzJ2rvOeN+9eEZyKpxb82x
/uwzZp6ycjLseMKPX/5XyuQHvoJj6KV8tOil8pGS1+zL2QrDRdPeV+73ae+b
+Cqb4Netc1vv4Cvl6jszWnn6tM+1N19W40zvZJex/ntvsl85e985d2U+6pWn
z/kZV8ThxB25d37XM/dC/kXn3J7Z+OKFsq/NfFBxRxNfxSnREef8BtMnaj6/
8vksv/Tj9JvK92nGKpanhfyQN2OrTLay2dEN9Jf1HC7yXdTTH/SpNR9PZczJ
v7LvZY30u72h9q7HY8Bo9envMBn+wf9+6HH7WXNAn+ayMp1uLu8Y3U9d+Mjf
vCPcZO9kfKzPsJD3hXfIuPb2EtZb/eN2YSfyYJ7gvoyJuWGu0BHW7wvve5T1
ad/s3tbv+C5rhb2He1vvdyzcOp9K3O66N10GQ8Be4S57MOv85lwfXDJv/s2z
NYtpzVe8uIxyT22u68HD9pffe/Vxs8r555fzfOZV2D7md3KG0APFeoSj4tza
p8QdlZu92Mx9/QuOMv2114Y7PJ57h5FmedtTn3eUW0/yQ7beFIcYZitHR/6E
20b6rrVWk+v8sen9/LfJ5OS1souFteJtJr6KywpfZTeEDzrXL3/4/OTjoOK1
1Hf+crk684OK18qGOH3OlbPlaT/LcVNhKt/OM8BO5MG18Uv57mani5syVtqQ
E3jJe+vHOFgPtn/Qp6/xdK1yPk7miz67VjkMVv0ZX9XG97r4MB3nIXoeOUXN
I+sJTGXe4gnyywpfeYfiCr2zOYnLmrjLvDV/jY/9lPGaeUTNz3xadm6v9y0M
Q37hKBimGEAYhizCM9n+2OZgpMs6verLq5BvVXbAmWOhsnvnQ1V+qsr5SuXT
NfEbfJVPe2fozJwMcVPFCcZZ5d8OU8VlaZO9bOaJCodYq8gwDGw/Sm6U7YPV
1ya/cfrBe+OsyKRxImPk1LwlA+WL9n2MtfEnPxf768I55Nx45LtlzsJv5b9y
Xxi8elgrXqvn0aYcXJXLCzE5LvM0fFUMLNkOX1mXih+07vO58jvdcyODi7+i
i+CuzUntWEJYiyzCV9kK88Wq3LnM5CUfrXK8Z+/b3P2zD85qxhuqD4/NnPCV
y8mQnTEfjOyDOKvyXGU3zD5YnH5+yDOWP6w1z1uZ+Zfy3Z0+WsUbdlZL+cbP
vu4z51JY6Ix5pq/U9LkKX00fp2lDzO8r21z3KrZFOf3lOfde8H2r3vwgl+rJ
lDWLfsyvie4mR2SIfneveBVyat3PV9xab8yt1XSJbxEfpT6eSv/uqY3vopz/
uba1sV76qT6s5bngK2U4jtwrmyPmDz1uXsAlxt8c97v3VYbJjBWsZB9lXsRf
GWc4ylpgbPFXcFT+V9Zt5epdqx6OUrZ+T37M3LI+WMthNnqWHLveGlKZ7iPT
dAE7DkwAn7H14PXMLf34H7aDxXwjY5itv1yI+7yFVx1ndux4xX32X3His37r
xvcd2EOb4gWKh9pxeG877N35y4WdwlTZBPNXz+befifs1zwtf0L20LlXKldw
dpl8jMvfPu2Ars0+uO/9vKPNjD1sbrY3KXY+bNCZL+ZC+MqaX70x71zjcNfE
V3T4zoN1B1+ZO+Uz3319+oG1tDdvpm/8zIfQOYBhJ+X8ncJL5ufETvrUJoyk
b9+4evO/+niqsJP3zc+8sn7CnPpRnjiqMlzkeasPd5Fz40fmJtbq2r1n+4VH
WXttyFXcl+ch//pPlxkDbehH89I18BVZtJ/qbJ3wlXtcfFvWfMM1468ml6W+
eEOya32wBrqX+15yoy4MQyedMZWyuRe+yp+qcjGAYapyfvJFV94+rw/fyk+V
z9XEXeWtuqzlt/K3axMnFpeVPdE4xoPNmEHzMz+rbJfFD4a7ytsAa037YPmm
sv3Z28ZZWSPJmXrrrm+kfec7w0LmQmclk5O4CHPdnLdumON+fBN15rbvaby8
tzUzPrbcC75ZmIrcZIt0j1kfBqucv1b8lfmuffbBMyYkE9YTa74xmvjKc8Zf
4Yzon29+w3Oudv70T1j1Ow/pJ14nO/b5sK1ryS5ZgGNwAMVfkNcwFTnu7Bv1
yvqsTeXwGKxVm8lZzXN2ihWyblp7s5Xba+R/la2w3KHl46VTiscPaxmTfN2L
8zr7ZeUDX7xh/vD57p5zwk9bYZzY3XI9TRwVj5Td8BwbGNdU/9t3aOfBi3fq
DME4Ivcl79sn41OXbOe/BLPYh+QrTkbp7h17+shVZ8qTJeO8fdDetXTcPjfj
0TXm++yOD6wx3zzrh5cO3dj/w6vN9g3ZbXb+uQ9ehbW2n8cDS7/AYeqV/RhP
8uxdKns3eJjMe59sjvFa5Nj8CUeZ89kN/S1/DfsJ40PWtW/vay2I4/J7GMw1
xt+csYYb5/AVvUCO/c3cp+9hKjrCnuGyR1mY6nK25/WO9/6kA1+ZW9aZbZN4
+qrnd2iewVrG0TzTRtncIs/0gHd0zy3j77hlR+u8j3JKF/cUd7TtiC84fJOK
Acn+uM9n2+d6hLWmD9XEUXFZ+sx2qTxtf/n853PVPCUbxcJPrFW+0DCVdWLP
ye3n2dkQ+X+Gu7Rxr+JfOssyHV0cfXqfHBcHF3c0/djJcvxVWEv99n9/78F3
lRuKbJfnYZ8F/YGjn5nnIRuicnbDsFY8VbGEcNTk1nzryuXkqTxxUdxU5Ymv
8kvPDhgGi79Sn8+55z/bBJXV342/mnyUfnY87puPNjuH06cftsX6D4PFX02+
y7ejn8lbz6wfuUnJgTUCpjLnzU1l15urxRWGqeArcoTLoqerV7ZXan0zN8jj
jb57PlsO+S13Oh3CJpgdMM7q4p+1ytnmtJm5Ebaf0OML81x8YG/l9gxH5aNe
rqpytnuG8jbAP9pvnbFti75BvluX2Knj2bIV6kebcFf+Y8rwofctNynclU2t
PJ/WS7IVplKOvyoPQ+f3ZV8jb8aYrJajw3PTZ8Y8+5pv4xm3X9kL17rhO5AT
Y+c9rI10yMx/pf8wFbkM44Wv4q8qT0ylrP20Fc5cDfl3uW/4ipwbX9/fWg6f
eE7YyZnOnt86Hb4yTnKNqqdXtIFvyju64wOfdsQe2m+X112ZLBiLcr9b7+wf
wlqVy+vu227/1Dt5rrI5Tv/57IblcyiWcMcdXR3xROGruKzO9MwvKz+W6osT
37aTFx7xXNlc8mMvt0O5QO/GX1Wu3jNMW+HZ5pht7pz/amKznm36U8FUO8fb
B2/llXLfHZ/06NIpO1fuh5YO3fvjR5fO3Tz9e4+z47fPwf23ypv3emjhru2r
9Z41/u6jL3OB3NEldOiWwcdX+233fnzp+otf5mq/87R98LAtwnW+HXmnh6oP
d5HnnevkgbU3KU4QzsJ3eUfyj8syzvgnc8Y4+H/n8P2UhYnsVYxnfu++F/n2
u7El3zBZ3JSycSbr2m2OevtuWRPIKLyUrzv7grlPvl1r3mmvTBfs3IWfeAuD
hbtgLTrUeLm3emVzSL0x1W9Yy/2sUdtG+Kz1bP6H01wXD0nnmBfbHnzvMUfK
EZfv091sdvlKlWs3fFLeiWnvI6udgxC+CqeV4zd8VR5R5eap55l5Hcu90NnN
O5fHcw6+Lp+r4ujzBSWf1hL17bnyDduc1lvWerj90d515AkMb8RfwTbkOqwV
dspGNu2JZDpdH9+VrTD/cPNO/Y4pfPSWv1Z2wPCVcr5VcFc+WrBW1+rHM5y5
Jn+fXFN2wM6mmXbAiani7qb/VW3KtX7mssrDcMZX3klZfbioNvFU+WJpf+bK
wmyzf33mD997mafGSZlvs/ntbzgosuV3mMr6iPvtPB3zKExl7inTzeYPPEam
6WlrBz1IV+EgbtahhTHojXzRyWL5FqZvVRimHFPFA05/qp3P4n2Hb1VlbSbu
Uh+OKn/CzOcQB1W+0PBSflnhsTDe9KtXH0/lObXBU/VsnfvseZTDVL4f7AHD
kqHv/Z5fvta5uCzYJgy2974PHTkWfMd81Is1sw6Y29Y7mI6+tw6KudvjsNuY
z+ZveWKth+X8LGe7+Tv955U987QVune5TM1ZbeKyYEX4Kp+xia8mPpz4yjju
WJp7l49TZw6W80p/N/vmJUv2w/li0Sv83mfe0fyy4rKMQ7bC8jnsvAzPOPKq
TUxVufpwVFgrH615fsE5V/xcS70XW2FxiMrZSsotOf3eZ4739MLM4z3Phu7c
nPI35k9SjHk5suZevnjDyXHNPFTz/JFpf8wuCSfElamPpypXYZgqPh/n0VlC
nWlLBop5sf4Us6Z9Z8SbT8Zqv8eDRxtzQT3ZIZPhq7CWvuOv4qmsZzuX8yOr
/31O2mOLf7isKVflMaj9nosfWd9CP/SN76W+MvsIHaONeZRPl7q4LJyceVXZ
GGVDzHcLnjKXjK01wf4qf1jlcuoowypkPR+q4gTpAvr+cu7BYfvThhxP+yCb
I71A98NU1hPymq2QfGtT2bXWfrIef5Uvlu9u3M0n9b6Ne9CV+cyb79kT86U3
F9XBmX48CxnZMQz3HLG905feffJrgnu3b+PbjnJ5d5s7cWLFPIadygm2Mdn9
B39FZvJdj1/qXtM+WI7H/Nj3PuROnivfQXn7Uz7r4K/y2+xMB2tSscD5kvlG
ZDKdHn+VP1J5DOCc7HRhrWxq5kIYI/7KfJwcVz5a+W6FGeLEZjneLGwWZzXt
hp3rl+2yHOn5kMcLhX8qe+awTXxU9eGl3qtyfYaRGqt4sHBXflmTg8qWp830
h68++yC5CnPWTzmyZk6tnsEalV/WPqv7pbfwWG3oR/PVeOGj7FfpOjjKM5EX
PlfmVbZCMkEHmzeelyyRr5vnXZwVOQ3P+JszAem//K+yr8VZZYNT3vmSHjvy
KhTTN32uqqf/Jq+VH9Q8KwcWKh6Qfi3eEI6K+wpTlZMh7FesYvmszOdiBsNU
3qWy9u7lHflkwxtxU8bZuJJF+MrettjAyVmRYf1Zo2Ze2XyWzGUYgC7XBz8l
v19y4lzyz2/+ytpEfrIPwld4XX3NPA/hqL1v/5zF84ejwledv5MvVn7s2uQb
r5/8zbShj8rBpa31jWwbx/zbravWnbCT54fdvukbn3q1uaSffXBZ5W2wV/S+
cVZ0TOcSWut9h73ebS5LG+t++IocK1evb+OlHN8V1ppn4oS1nuis58llhcHK
5d4etn1x9oh8VIo3LEd3eCzf+PRFtr/is/I5yZ5YzoeZR7Ry+Ko29HvXzrP2
8vsql2m8Qbk31fu+sK9vXTzmfr57jvgpOis/k+KIs/Hl85ztz7w0bhdO+cil
SXbzqXatcd420p1j87LXWpjnMg9v4Su4QL01VD/hMffd5zjtHJ5brh9f47xz
pTy++ty5cj+4ytbzsJb/zdVwl71E8YbKMJW5ULxhuKtcDdZP2Ikcw04wVfGA
7XHVW8PtH5StA2QUFlKGd8yJuClziI7Ap8BO8Vfq4Z/sg9Z1+CbOqrJ6bWAw
672xzge+2MP4K/ej+5TNJ/W+q7I1Z+foecaBr5Qnx+V91cFy7r9jjj+05qA5
2/5lx7Ls/NXnfFMbn92ZX+WXIB/T9lcO9nJbVV8b8he/1Bm7m7d+3S0f9ex9
8Vfz2cqzZy5YH8oJY150Vm/PX5xjnEln7BbfPTmr8pyTsex0sFZlbcJUsMHM
51DehlnOhlieh/KXbl+t9x+xctWH0+LNwlrwQlgrWyHZo7PK5+nv02Z3xlfZ
/tR7l/CSPvPRmn2GnbIVznuFkaqfPNW0J85+Jl6aOUjjA8v/0DOEFScGMyYz
V/zMtVW8ZPGVuCzySr/BUa4x55XNeXo3nj9/VliCniOb5S23zsZHkfvK8Vfa
zFzrcUfw1fbze98tv6lwF/8rOnc/9+0zAWderGIA48cmppo4LbvkPE9nYqp8
wMrNZew8g3ryJM+DfvIrg6kuOvn5OBc4Cj4wH+RrhYeyD2aPy8+qs/+0zTbt
nYvBsZ4YY2urvt3X97j5PlcbE9zhc+JJ8m83pvrxrcmDb1c8o/eIQyMD8BK9
WZxgfvjFDIap8iWb/lf58xcvWS5T9/V3a5fncf+5v7NmlbPd99XfjT5Z7wWf
4kXjr+B3Y9F50Dt/1lOOc3Nwer7B9mfaZ2iSO+u28vYjf8Zqs21yzzxwVL5b
20/imcc62Z403HXOX6rc2uu+1udpK5y+WPm9W9urr+xv4avOm9PHPF9j2j42
5njhUYa13D98lR/X2U/+nEeoOMR8t4pPLO4vTFVe0HgDY2asyq3a3r84dO+V
j005lHb84dXhbxN/VQ7MYseyD8ZfFbOmnN1QP9vX45H1POec5+RW/5sP/uAq
X9aOpWfzv4KFtq1+2wTLl17/ZF57bXc+lKvjXtXTMfBt/lrG2bzmr2XczK/w
lfmlbM8LX/hdGZaBr+g4+KoYQ/sHa4d6mKrcWfllWc/zY6cTzQFtJh4LO8Fq
1haYIJ92GBR2UibH+lWOH6P74qCUfQNzSNmYmhN04uaVnrXupY3nUJ4YbOPp
58gZvHg999MGvoFNPIt1Azfoftb17bN4Zz7C8MWbdJ6ycvmKtQ93Kes721/y
mR975eyA5eUrz5UxUE+G46nCXdn+4MNyXs3nnH5Zniec1pmV+U6Xn6F48PIV
0AV+579aDisYtTi+yuUCVc5mlx0wbqrcWeXXIm/lMiVXm99637L1qysvurZh
ibg1/ZP3sFY2xDCY5w875U817YNhlWyFxRWGZ9RPP65pH4yDClOVd7T6yvmz
aWN8J8cVv9fZIj1D9X2LWV9+rd6xPmGt3j2sWzxmZzuWB1W+rJ0T68cWl2Xu
kHPrvHuWKyS7G7mBQ8yB/Klgj0vs2q3za+J2qp+4ZftBvunIZxWPVA6rOKsn
wlT5ce0cmo/dNf9V15aTQb1nmzkfsktmB1RPVsqR5bvhi3bu7m89YhIvvtXP
hwOyjfITgq+sl+YGfAUr6AO+sp8tX7o9b5wVGc4u0zky5dI0h63FbGfeRdnz
GB/rrmfRxvfqvAwyFr4qB2nnV+bfns9V/lT6nXm3yFP+V2Gq8l/Fv3UWoT6V
w1fGm4x1rlP4avtAPPc439k44angG5gObjSunsW4FkvYGYX223hE19IH3j2f
K33s2LynH+ViWnduqacfHIuxDVPFcU1frLBWPvPZE/da/OzDbth+Nr/9fDOy
D4a12l+35re/zu5WTFN2w9pP3/h8eie+Ks9DPlrTPli932fOh+mjnm98flb7
LKzXrO9lzbCeWHt9251//7ZvSWe7dzZu+ivbzfkM3DDYtPtos7mHt64+ywtK
nnds9LtXfbH8xsff46/KE65NZ+bGQU2fdmuuMdx56T60xnCvkduXfq/f7z98
sbb/7gsvZyl8ZJV37OyHj/xa5rj6bIjTbkif5gNvXrMPmj/GH24i73AUrGSO
0X3wUf7tZB3W8i0mdipO0Bwnu+W/MgfKwxBeUjbu4Sv1ynSEbxm+0iYcNcvF
FcZf5d8ejtLnGVNpo944wkT63/GEz11clu/hOewrfWP4yl5M2TxzT35t9myX
83HX3kqZ/sn3Uv3OifCsg2eeex/3y1+9vUDl5mblvSfZmC18lR0wn/bOngiD
xV9pk/9VeYxbf7xLcYX4zOIifUcym00wvihf2c5yzbdcmVyRVbgrPyjjRvbK
W1W84Tm3w87t+q5bcYtkUrlcr50nNXPiab9zxD54+IGHK9w3vyxzoXNt8qFS
jkcqV4+5TR7ijsJUniHbaFir2HP3yrdq5sWKKzu3iXeaGGn6iZ0xVf5g3bc8
V9MOG1/XO1bObtu5P+W16By6ckWmH8lPPtKeO97JehkfVfxduRfii/JZKuYu
juiSo/cWdlI2RrDNzKWg3rt1/mD+6vlE4c3o1/CVNp3d3HnN4avLGREHDtQP
ub/YTI7cC3FlxrGzno3xjb5cunViLXNLTlT6/oKxns8+Zw3NPhmmMu4wVfik
cS5Hum+UPPg/H0vzuvVE39suuO1lnsHanO3MWlk+qHSxdaP8DMbMd+9enQHt
nbIJmi+V46/KVZsNMT/88JX2M2+D9+rcQ/Nuf+fPWG2nH3XnD+4Ywa9ZOUVv
1uCDv4qX847wlXbGIR94/FW86SUeY62r1nfXWd+Ufc8dF/TMY93LDhheio+K
v4qnClOd28/zdGaOrOyDrcO+gXkUlzVtGWebYDiq3DuuzS/Lt8vvnWyUw6f6
cpaWI9HfwledUZhNsLj18FV+7xNfxWXBMfB/5zRlZ5wx+Pkn5yc2z7b27nRK
Z4Vkcwl3ha/ispTjuLx7Z6moD1O5V2epGLdyX+ffRd7Ky7f9TV9wYKpinMmq
8dm6aNdnBwxHWWfNo3it+qFHpg3RtTs++PFbtsLyZZXnwR5qn1/1wNqP5A+f
37ty+bJ8F/bAyWvlfxV/VU6d8BX5Lo/oPktj2wHhGlhLOXtf/leTyyp+cJ9t
9vTDJpg/VT7tsFa2v/gr5fyv4J3Knk+f2ugHB1L/3sV9lfEn5oz9ivb77Mbn
L/95+t5Y7n3HU1c/2lpX2UbVbZ/xh479lznpmcz9cguTw5mTKg6qGEDlzs+a
e6VwWuuVtaK9YVxW/gOdaZJNIx+D+LHOIiwfS7nENw/06GHvI3/e/Yyppr7e
MvrZxxk35e0kl8rW+XJhxTWFryZ28mN8m1+dO18OsXJczDOq6qccodkl47LK
i5XPUrzcjvX9xQfXVNyW+7b37zy1cj6c8dX045qc1fTpyvanvfLkneK7wldh
qvJL5EtWbGPYKdzVN8r2Vz6K8LD1Be4tFoBO7BzGYlethxedfMT9halmzqjO
ByweMH8nZT5XndN39lef9j6yeNmDrjbqw1HhOv3MM3GU8+Oa8YP7rJfHb+VY
IPeXPfGBqSrHQeXHBVO51reKp/I8MFs8hffKp5y/GX3vO8A59Aq5La8I7FGe
KJiq/FfmRWcHTOxBho1d8W7sjdv/++MXvjKfL2vr4nDUwyThq3Kbz9j/4lPi
r7b/yNsPW573nvZBZfrUM8GEysZDOV/97Ibhq/zkO3+w8xA7B8E7uq4c4N51
54K5c5Yf/QHHehdjxv9KGb5iN9xnLT954at9HvO2h+6cCE87/Kasq/7uffPl
CF+13s4cDsUYTpugcQtfaZ9PxTxPp3yk+eWe85GGPeCK4rI7KzZf3GkHVG+e
Fcd0zqNV3FN2wHBU+GpiLevh2T5YG7ii8sz5CVPFO1l/tg/Umw8eXhm28a2M
SfybdyhPtd/p8LO9Jtzl/50f5f4j1/f25bljKwx31aaY+jCVdwx3eYbOcTOG
+3zCdx+81vZhvf+oV+58FuNj7dSGftlnsG98pWxNn3hMn9MHnjybS/rcdv7H
F3bN/0r/sNaO133xmgs7tuSBNUf2uaEvXvPOXiVf93JhwUr2Up0ZW+6FfJaK
E7yce7AwFZuiNvm056+uPqx1wSCHj1b5GaZ90P0m1gpHuV/4KuyUX5b7ZnP0
/J7HmoT32PkanrlwlPbaue/+lp98TR/tcwpfiJNe1xgna471S1nMO5yhjx/4
/s+9tgbt+LBftP6OO3Nv847MeE/+nGTR+7Q+dJ77tqM/+/ChMsfbC4SXmu/5
Z4a18jPcOO7Va92wjpHX9nflbXBt+A2W63zn/Am9Hxkji2GSznvNDkhfwFSd
/do5NZXVh8fIYvbE/KPitfI5h2eyj+AeWn/2WZJ34qCNaXlWW1vK/bux2B07
Xc8fb1auReVpB4zXCkdV7/nLza6fytOeSN7KZzW5r+nHFaaK41IfTounqn6e
LVK+7niqyY/FZe04mTvvlV+cMVU2x41FcWrl228thYXxBu3n4ZkwFZ5KeWKq
6bM06zv7eOZXD1OVM6EYwPirMJX25ersHJwwVTF9M+dVPlHnMwcv8bu3eKpy
MmRbLOdVtj8YiTxdfDiu0nk9g7l1U7/K4S5z1dzZ/nHvX7Jtzdxnbf6yI+e5
dcP4hm+LUc13Pb66s1fszfL3xu2Ue1M9jGFuswdUP2PomguenfxvX5W3HOfp
7DwW25bnb2x85WEob3y2P+XyNszzpmeOrPzbi0ksn6r5Pvkret/ae7ETr3Hz
fcxn+sP7epf4K3/LPrjj9HYOh2yCZGT7uT5t8Vfhq/xjw1ThKOVwVP5U078d
pqpNa2w8/1xvw2bFZRtneqm8WPlfbdxw74G1iofK/6r4prCKb5ZPe7zWjEkv
xrwcpNtv6c4ec+asLh9jfu+dxxe+Km9V/ZSHIZ+QctJ2ps/0ISn2s3jJufeP
ryv3dTYXGCmbSHmQ8lUOc1aff1fxhp0Fb97jsuKppr9W9kHzS5t83Y1t+Srj
vvwtPyty6dn2GvzoGrdwlzY7Zv2RW35Zvsver287I11mvvsu9MLWDS++nB36
kYVvzX06Ur35IoeDsvVh709esnipvc/5tIWJcDSdXRYugnHio/K5Kg5JOXxV
7oViCfO/ylYI/8Bw0yZYToa4qfyyyvd+OavqVv5Sc0Of4Sjzw333GR7PX9yX
9zR+1gd8lG9l3XCNsbQW7bO3X7DqlV1PTxkX6xmsZe3QjzN2PROM4Oy2rjH+
xq2cF+09WzPPezHvEUaKl57zvX3W3HOpL05Q/V5nn77wlblkLKwhM5YwG6K5
U66V8oAV350eLyeDtRo30jllMPs+t/uzjjNrwlfxWpPvCl91Zk3nD26ZfXBh
pM5rKJ9MHH55bIq/Li9N3F1xNOYV/JCdMZyTT36+YWSgWMj4q3n+iLI25Zvq
/Nx0R/5XPX/lfe76O49+GsN8q8JI8Wxhreon1up5JvaLs/I84atZDl91Xok5
Hn8Yt4YfCOdb72Eb8mc9Lg8n+SjHpnI+7fmod64xvitbXpzV9FGfeauKuctu
mH2wc5yzM7pXZ9NkW/Q+uKZyMuSvfskDdDyz9uZA+R9cOzkrsosnIT9kM2wY
1soPRs4u7+vb3Oj+hW3gGW3JM91EzskTOYdJfIOJY7Ohh6V9n3RfsX5hhrgp
fE5+3fgrutwaXB7OYu42X/C0Iy9BuWL8lP/KvA5f+T6ebdsuHjx4tnI1WJvK
c1W+0/BV/FX+WuUaLYcqf97wVf5XZHjnK9p7H8+VXi43gvd6Iv6qcbjkQ7yV
k2H7sG7fs2x5vmO5F/Jvt5bOdTXOatoEw135vZ95rXzdyz8w+at8NvSTj0d5
nitn+8sXKztg9rLazNzv57xY51yj5U4MC51zVk98VS4s//u9PAy+S3n1O8et
NnRk5yqGqYxz8eYTd3mXOKjW7fRIfFQ5GYqLd+3MOVnehp1X6bULj3U2RLGH
xeaHtabvVm3K7+3aS0zLGtv2QcZt+mXt9fIDa+6YB/6mDVneNokXHHjMt9gx
VY8sXUl32PcqZ+sx5uaKPo2nuWDuwQDmCB1p3cg+aPzhKbgLboFfzLeJo8Ja
cVPlZChPYfkWlLP95dOunuzWhr4s16h5aG7Fj5mL+X3lS0/Xwi70KdxlP2Fe
GxffwXyHcYxZuMjf6B3vDEdbG5V9B+3hLt9KGVZSr42x27nhX7bwmDbWHM9B
RqxF26/0gYW1rKeut14ZL/c19+lQa661is/q9qf8xGMfalwm7z1xVPM97jqb
Qj4GxmPG0YS18gXN5zPfmeyS5bUj8+UK2H5Pd2xhE1/tGNfPOs5NTo/k49qZ
gHFW7fGzT5XbQTkfbzI985q2FnnOCze6dBA9NnMP0jXqO4O1/Hs7D9k7Dl/N
aVPzPJ6BPiyPVhhGObxUDp/wTP5Xnek2fdcnNxVGCl9NDBmWm/7q2Qrzxeo5
G//O1C4WLH+q8GF2zHRc/KFyZy+SmXREuZ5goTgr8kFW+Bfl48QuFqcUZ2Xt
6yzmMFL8UpgqP6vsg/FUYa3ydoZ/5vmD8WDab//px1c/2QHzb49bu+iWI09p
8Yn6KReEcfztX/mz1/wy3nS3ubBzm73o4j/84OKmjJHxguXS7/7e+aTGc8cM
fNrCKp0vwHamvhwFU352Hp+XHjYy+z3PTofhcMoBFabaZ7E85bCFJf/7XOFP
XPkKPGf5M/O/yr89/0ljE76ij6x75Yef9sFsgmGqzkPMB376Ys0Yw/z3ylla
LKR7hSeLRzOG8e3mK4xU7lDv5T7wrTkMX+HovGM5RcNX5LE9afkZynNlvcgX
PT7K93cvmCpea9oB6Z/ir9t77rOZ79gN27dma6jNzIuV7+uMYzKfYIzOep72
tXlGYbGfd8tHmn0wTilf2eL+znnd46/K2Z7vx4wNnLmwOjOaPsveN3PUdwaK
Zy1GvhyM+QyXHzJ8tcfgzVc7T9Jr1jphHMI/9OXOP/TWVR92Mj6dn1KMoTbF
Elp7PE/76Jmb1DOQwXzj/U/+jGF+7/S8tXfvUR848p0q55eFm9o5HXd8YrxW
+VH3vveFax02r7Izbp/aB456GIFOtF7AHfCU9aIyvAW3lI+UzsW57L3NLzp8
1+kXso6fCXeVe4FcWhvMtXza46Do+fK6F2NoLnU2Irymz53f7Kmrvechx74t
XQPzTK5p59p/2fU+q+behaO0cQ0MEEZSNhZkQdm4+7a18d3CVPqhp8irNtar
7Rt07617WXOsoa4RQ+Td4Ct2Q+us6z2z99nxJU9e8rn9TT7uiAkyXsUje++J
u868dxhMefvQPH2tA2TaN7GGV09f7b35XouKld55oF9/7Hc67948KIYuv/Fy
FcZHxY1kB3wiTJXfe/Fr+QiRy7DHtke+dM0F9y7uxtwjg+3lL/bJpUPtB9iJ
vH++vsa0HLCdn0V30jflRsgXqzg7z1M57BSmCiOFbTpbLZwzbX8TO525qXKK
xqfVz/SzCtfVT34stTfm4bHOpMtWm02QHPou7ac6H9Dv+ZBvv+2No4xTOGrz
V/evnAOuweF0fnH2sgv+PXyoygVauXNqyjGVz7n6GaNnjS5HVvyVZ9u5JN53
5G/Pd2viMetr5c4r1H6fv/wJS/96BrwT+d7nDD9n3XOfT/4ZcVrm3ppfvoP9
TnnFzY/WauslebXGwK7G3dwm8zu/28Za2lk31OXH4nvGXUzf9exi9ooTS3SW
Mb8CYz+xVvF05ds0x7Ntec7Otiu/Sufj5H9FTtgH53nNxQ92rnSYqtyh2sRf
wVeTy5r4KpkMX5Hzia8uvOeRn8GYz9xW7o/bNyb5X2UfLH4wfNV6GI8dzgw7
FVfYnjSeKn86emnmrsleMP0uzhgs2yL+qn6yi+V3lH97/gydmxN/NeMEp/9V
vu7WunInblzygiN3eutzMYPZ+zrjLx/4aR+c+ULJI3noDOh5zpp7wC3GuPcK
N9LV2UDL51MeyPILZQPNl0N9+RnK2TXzQ7pXeGzirun37hn2vHnL0Wf+WsUb
dtYz2YN5rE3WG+Nm/lufs/F17mHxg3BUGCy/rM7Ci6dS3jkX37/a7PNCP7LG
du85tk1wx9p+eLWxTphveBfrg9+V4SlrB31kvrAbWjfsZfBX5iz+2nwrRw5u
a+Ir9TCB+aHcmc5xWXBXbfQLa/jfvPVs+tfGveAx/Ks562/7/MZtczOW5j5Z
8X3CUb4/XU9efZ/iAe2Zwk7aKBtfZf2HqVzrPr6ncjhK/8Z6Yi3ty+fgXnFf
ZMSakz3Rc3offxNbFC7cZ2s+b+FUY5dPcfHX8VrxNng6ush8wPHt+OxXrXU4
Pqp6cjnL5eKb+Kq9SXGI7Y/MEd+dfE5OJt+e7Hr5sk47SPbBuKyJtXwLGGDm
YK88+atiBtvXmJ9kyDjQm+ZGsfzuVx4A63P5CfM79Y7eq72S9zLXwjPl4Jq+
9+Gu8n3tefbOI8Zw2unySw//FCeoPHMpTNwVXp1t4qkmx1XuCOPWfY1t91Lu
fCIyFpc4+TccQ2fmkhWYiv72nfMVLzdmOTlhns7Xi1Oa5/oZl86UmT5R2f5m
vtD8o8Jj5XDIp6t8U9qL0dNn/ec3ld0wX/rsieEr37Wznj0PHW0tJk8wleu2
X9uLli7YOcx2eefdvH+1se50Hdkrr6A1CnaC5ZX9f+ljjf/+fp+yyvGivo/x
7kyTcowb1+x9YST7rLipia/Md+XtP71yN19tH+s7/FUcjnmRjt7vsPNfbbvn
Z9zCV52/nA9VuRfipmYsYT5aneM8y2GzfObJiHXAvJ72wXyqt5/CNy69Gb4y
5uEoeO1mLI74wcbH+5bzyjpGTq2B7Te9rzWtvVX5FtwrfOVbqM/HcPpdzDzS
My/WOT/D9Hc9Yw/XThyiHL6aNsFiA2f+9s5Bi786xwPmW6Vc7tBp+4vLyge+
fFnzrJzwVTxVPNvMt0C3kc1yW8W/eZf8qVxbzOPMfxVPlQ9VeRRhy/xjt4/P
qw//9vzKutZ6s3ONv+Jq56m/9zgPJVthPu2dxROOIs/ZDXd81K4nf8bEXA5T
WSP9lDsrHLXtKo+tcYvXMq83H/DYmsv0wo5x2mdSw1X0uLqdA+hTr7fPwQ8e
vlh+XBvWgq/sceAtdnNr9M518tIDX9mXke/OtSlHVthJWZu4LM+jn86e1gcc
4dlwK2Q/XLTPrnnZ9T5T+fkLU3nWbHmuVy4vqPbKxsv3p9ONo3L12pj7cBnc
Fn9lHa297+MZtJk4jQxWH+6qrB/Plj+88SX7ntO7KVujjAUZx2tt3vyly4bo
+bo3jOXHONER5r9Ygva2xrq1N47LPLH+tLaob82xPoepLmefHDbEyvnVk+PO
VTSX46+mbStuipxke7JW0y/Tp70z1OK4yFrcV/lIZ1xhsX4bY238o72xb5/S
u3hHcj1tTDCDPe3mFx5eWAu2pMuscflbto/u3FJy61nygfcM4cByQ8UdzXio
ySlNP/aJr8JIYbPwVba/7K3ZJSdvds5zFbcWjo2zMkc6n9G3KGbQXDIG5MQ6
1TnLyvSXsbD2wV2dwTnta2Gt6aPuWfMnn/7q0ybo/eGczgEsN8I8u3nnIXrV
4d8ex5U9rjMBu++89oKRDx4sjB1PRY49j7J3vORxXn1su+unruvIKZuU/swp
c8j70Re+3R7HF9/ae8JXZNc6Fn9Frlqr7f98C/XmzsUvf+kU83ift/fkAzPE
2xQTR5Y9MxxVvoXwVTbByjNfgTWYnJdflO7zwxZgXDxHvnm+p3mav715Os9r
DjvlixVPNfNfzfjB/NuLHzT22aM738d9OnsrfJX/FfnMHmpM6AQyqez+xsc4
+EZhKroln/byMLRnnD4V0y+rXO61KTe7a8v9Pn2xpg1xts83ozju7IMwW7nc
w1d0Q+fGTv4qW2GxgWGtbIIwT/gqW2HlMFX5rzrX5pzzKt8qY965zJ0P4h3D
VOWc3/L1igMHxrWWp8u82N/tDk9VOZ4qP6t4qvBS+Cqf9uIEjVV8FB2Ujwqs
616dh1KcoDEpJ8PETvgLf7f25GdFJqeNz1w2/62TcE52QOMGE/mJmwojaT8x
1fZtfelaA8JX5oR7wBE7tv4DB6+19cGnHH7vdL/r9ANTtV8zT/O/gp3MB/sc
usn8h5HCV+ZEOUvhKDKgD/PZM7i2HOxhIfO9OLvyTZFZ83THHtyz8MzOs//c
Iw8VuZjxfdaK7XNz/8FNlUuhPq0zvpm5ojzPKCTr9e++vr/nJN/hrp2D6YWr
f2uue9BxcWj5d5GF+Cv3ti4ZR98wfKUdn4d8tKxj+Y2Z451Tad3iE2Jttf7k
pwF3WautsbBs9sQwGHm1nluXzAfrNgwy1yjynS9E5ynkJ5n/xsyxebb9zfjB
cjWQ2+nTnk2wa8kDWTTm+vGO+ReZC/lKab+x7bbF27fm1+p+dGu5Lm9kZHEy
m7vYXAedYN3O3zW/rM75Mq/dKx/+fNHLjxovdPbRyi89fJWP+sRRMwYwrFX/
k6eKBwtTzT7JW/0Yt87LJm/FCZIre6B8CcofqF1nu1irwlf5KXUWzMyxmb8T
LJtvVXbAztcL05afKp4qfJWfFX2Wb3nn42Rb7AxlbbwfLNR5gmGzbH/hZ/2r
L0eo9vBx7zLjBzdfcs/BWdHRriN3ZCTffnKxfc2fszASzoVslCcwfKXeXLeG
Gfdy47QX9vd93sCnLRziPtaS7Ve1843DQnQwP6ts3Nm8lJPtznzx3bb+fuph
H6y9fqZt0V5Je23Mlz2/7/hfxV+Vv7190D5f6GVHvtPwlffKvz2fK1yW6+O4
ykHaWZblop/zPV63c8zLsxR/5b1bo9o/tq/0XnQJvi4bYvjK+5Z7YdpGs/2F
tciItSF81dmCEy/NswhnToZ4rXyuduzfHfsgPFBOhuJr9J8tID/wOKv828vT
Xj4E9fmil+PdDx2TDbGYhc5Wyxerc5/nWYSwjXHePuBvOXKnb4x174Fz4qPy
w++ctYmpPH/netQ+nmqf/7N9peKsyrcw87SHwcJs27f6Gz6Kp9r5AF518F37
7Lh3rGtb/41DuRqM1T6/4v1rDMsvaj6WE9uYpEfUm+vkXH3+VMYqXEQHk3G/
wz/x0srkuT0XrLTPS7uTX0uf5R2lQ7feeGzhtPgr+t7aQOfBafS6NcU8Lce7
+WK9MN/s0eAu9eRh+3U+vsbHXDNX4qb8mHfxSLCQa4yr+a4e/pltyr2QfVD7
OKj4K/0YO/XaZBPsfGffsNzs5bCCg8hUudz1H8fl2sl9xXdpYw3JJphfln4m
36Ufz1Z8Yv1ok90QJtk5nl6wMJhxdA0fLc/qmnzht1w/eWF1327HVX/q4snx
ifbm1gjrojUq3KXNnvNPPviu7IzbT/FOjr74K/Nh7n2K1S33ZtyL8SlvZ/GD
O4fIjh+cWKv8DDNXgDZkMXwVfxV+YEc1D8yZYpPNN1g+XaMtHGXfbh3K77oc
R9ZE8wFXk/6yfuYzYF53jvz2u3zr8pPJblg+BM8zsVbxg2GhbHA4q/DV9LNS
3vb8O7GEk7+KN6s+X+jsqvllkZliA+m7bLLZDX0j+qg4rHn23z4v5SkLf3YO
4PnsY+9fvtB8n6adrnwIM4fVzFsVBrM+lrdq+sl35rI2xiPb37albRti9r7s
lZ1rs89q2vgqXiv/LvZEcu4Z4LSd+/Ph5ce+xwAH+enr/exB6A73tM77tv5e
nLUxJf/2C8rmd/HXxQr5NnSW63wbay98op354hu41npXjnHYYMb9wUhxU55t
5xq+42M5sZb6+rE/ykZW3lF9whvaq6drOm/FukK2yXz7AuNQnjpjRpbsm5Or
zmvOt8o1ne+89+G3z82xBoWvypua/5XvY16QoXn2Vnn8tl30aw87qXltHSve
h24pn6p1rHHLz2Hninr6wTWd84vGNc0YwMlThbuMeX7v21f7WUee9nyxJo6K
85/4qvjBeKFyNYRhZvwgXZFdD06AKyaXVczgtBXWfua2isuq3Lmx1rSNQd52
K6fW9LPKr7Vy+SKyaZZfojzV6uc5I9kH9RnG847ZAcNg4bRLTPIqx0flu+45
1e+zgN52+LGHqVxHVsspWp6rclu5r/rsHdap/KnIb+fgqCv/1c7Nc8ePPa5p
+6o8usYwfxjlbCu+S7GB+cnveO8XH3m04LSJ2crVEH8V1jJfcFj0jvls7llP
1Gtj/Dsn0TiYG9aw8q6TWXO5c2roXONibpnv8A88Q0+VRz3bX/7n2c3MWe3J
ddiJXNPLO97gucu/i0zDVOUR1aZzn82b+tRu+qj3DNp3BrTnrP+e2beEA2e9
9tNuaNy9Z3ZD18SzbZ+Ozz7K3te4F9tofD0THy3v4Ju7tpwP+9znpy+fNuNd
vgV4lk+vdcd3Kh+y75Gfhr3zzNFXDpl5Vk48c9wOGe68GLJUHoByLJzxVfzV
jF8753WfuUbxAxdf40Nn4UjdZ/u4v/BYTzrXlR7ZZ5+/9aNyWprHdHF8SHH9
9gD5ZU3+Py6rOGXzu1xV+duX/8rcjEfqTJOZh2rmZwhrlXc0Xmtz1e+6dZ5j
eR4a28r5VpnjZCPfNnpt+wQ9dMQx7f3ymw/sZL1sTC65Cw8/dv7qyvMcwM5K
pkvcu7i5bIKdNROmusToHGclT1xUrtHOSla/16lt7zNO2QE737n4wYn3+o76
z9ermETvXKwfefCc5N+a7vnhK/oJ9ik/hLm9Y+Z2TmYYoNw14ShraXZAbVoP
zefK5MTc8z1gGJiKrMNXuHzzAWbIB1u5OQgjJcPNwenHfrdyvE1+WeZs/ld7
3j7t6LPz7LS3lhgv32SeoTnxFVwEX539rDrTmSwqqzde5FDZGE7frXn+YP4A
xpwuMG/IpvXLXM6fZ/utv2Jhp7Cie5qnnT9YjvryX21889TD7l9+hvK3z/xX
cVAzt5X2Mx/79LMKU03/KzqptbH8DPm3n893jr/Kv738Bp4h+2BYK/4qW2H+
7dXTAZ070xqVb1X7zdmmmGvjTGdczqBaWKWzQpSzaSp3XlsYr/N6woTeK5+r
ebZIcZGdAZS9r9wLytVnHyxntXu1fy/nVZhq+ll1drN3LB97Z+XsPf+dM3GM
Tzms6K/t0/HYgZfIPX2bP1X4yu/qs+Up509FVvfZI9sXq/b1Xy6szij0nN23
/PD1qb+eIawFX5l35cUqh0M5S801z0DnWTPooD12z144pFyg9Ei5QMv5iX+l
p7Qnv/TLHuuNr7Yd957DVhi22WdvP3f1A8uQ8el/VZswVRgs3NU5g+o9X5hK
vTJd7m+uzf44fd09TzbH6a9VWb02xivsFNbSpvrwlXlWngf1ysZ9Yi3PJH8p
TmfbLn71kaurmEjvYo0yX8gu/WBfb09rvWoPaO3Pj3TmOpjxMvrsnNDyR838
V/kmlS+0/AxkKdvf9HvvjML4q4mvjK1n3WcT7lyjZDHezH3nOaft8b2nPjoD
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
+zx/MKw1/d7zyypXwzwrZ3JfyrVRphv2+Rsv/6jzB+Ospl83TBUOaR/XWd59
r75duCu7YfF9+b3DI36s+ds++qPHOYOdjVi8Q/bBzp7uLBvrSeXiHMNC0/Y3
z3GeWHH6VuXTFX+VT3t52r3LzNtQPvbyVu1Y5PsPXyw6LzsgPRnno7xtCB84
MFVxeeSuswKLK3Qv1+698cZXZF778i107fZz/ZTriz/ogeW0L8e76z2nZ+ws
ns7oUYaj9nmfz77e+fIfWteaC9YKeq3c7NZ8uCgsNM8TJGfZBPVlriuTLW3i
ppRdq2yP1bnMrlfvWvXmYPbEztNxLR5D2fpBx8FErs2e6PrJQWVznH7y+Vll
45s5HKY/2MyxEFdGTvPXCpud8VV5tHz7YhXDbBObeeaeQblnMyZhP/XxXfr0
7T2PtSu/LOvb3pe+aNkQjcvOvfEr17tt3vTT1phsv8ufdb19jl6z8BVMYg3C
/fMj3evLU2/FH3UGev5I5L78DPkdlb89O+CMGyp+cNoN1cNPlXfs62fcyoXl
72Q4++D2n7rjb1BOCfOZvOJS/O4Z40PS43E16rOLwVd00s5R+ZT78Avurf3O
Df2zFi9kPc2nwr06V8LaQodaE4xn5zO6jz3Inn9vXfybZ/fM+wzKhWnWO5rr
njEMtm1Xn3XwV751uHRzmW9bz2sdgVvo5um7Xv6o8FVnylzsh0duqOLsPG8+
afFUE19VH0aadsCdZ/mtt3zRG/981F0bpirWr/bZEOOjOqcmLDfxWznYyy0S
P2YstadPrVN0hLHa/PI+E8H+9CIf152vqt48i5syx/JrJWOXHLVr3YYl8q0S
x+N6809Zu3gq9eZImGraCsNO+bGHkcID5trEV2esNfMzdOZLNsFyGpxjVbQ3
DpvTeuV6zpn/asc7PnjY9MvPEAcVTxU3VU6G7IbqldkTK8ND+4yQlx256/O3
1H/nm9OX+bd3fn38STGVnlt/1iXjE74qv7339Y50T3zgzN8eZ1Uu95mzvfwM
nYkTpsq3KjtgflYTa8X/ZE+c58N2fqtnnD7h2oRPsrvNcnxU+Cp8En8Vp7T9
ru6cFWud6YxL+GrHNnzfwjPaeI7iIie35r70Wb4QE2vFucVH7fHbuKv3KidD
/Fv2wZm/q3wR5K2ze5TplHI10EsTX3W2oDbWCzJT7oXi+8qXbg7mf5590E98
V9dagzq/Jr8pc7x+sgnm077l/fEDXxW3fslNc8uv3vfyTn43zsZnnxFxz/Ve
7/d9zYXOuCGvfFLo0MlNdQ5g3BRZo1v1FXYi05fYjlU2D8JU5WknK/7WWYHW
A7jA3Ljk1VtclHp6x3d1vWeI49KPb9PZN/Sf54Fn5vnO2QfzB9M+LDTzYnkm
/YfN4n7yt88Xa9Zn7+va8NX09fL89alMFr2PcvlLtYePfbcwlfGNywrL+d7a
xGV1TiK9W55VOl6/ctHsXDMvWeX85neuuWeueWjNy27I7sFfxRo0fTnmOebu
c7EDHfghfNX5zvmyTr+L6eueDbEcTRNrFUtofe6c4omvyHCxM9l9ynVDd4oX
y58nPyLzNW5n58Tf+Mo+AyZhC7ycCbH4q8vcWGXPpx9j0RmR7te5ZuUXai9j
vps3uMDyvGnb2U9+1wY/wHYCd+04/vcuvFpMrrEKr5IHc9z7zvPXisWL/wlv
/N983WHkt9917/mqcRxjHDHGiDgqqiqiKioqOv/cd/zFERURVUdEVB11HFVV
R6fnTM+cow/mQR/UqBqj6hgVEVERURE1IiIqoiL+4q/+IiIiKiqqD2baTJs5
5n7tdb2ve93f3p0HP7/9u3772te+9l577c+11tqf9cgNVSxTMVH5+MJO+g5j
G7fO/W0/YPgq3xzdV/yVMQwvzdmkL7zAzV4cedgpTBWnerwKm+O9Zynrc3iP
/i4+PzxpDuACc6iutW2syufVuT86mRwOB9OrZ/8no2R7OEX+4shVOW5gJPpQ
2zCJ8sS6/cuDo7Srjvm6eLOOnWf4cyfWvXtd1+7maqND48tXzk5VrHvYqZjt
XWfzlhczmT2n88LZvlq/5eHV/4un7OaXs57zyxd/RQbzR2e/CmsVu759hfkH
K4+vZerM+fbn+RY762H+6aNyspg772qvL1YBHjDG7FfWWvFX237l+o6/yj9Y
LsJwpv0mf6u9wfi7/sjDENZSxzorp9iO1yq/mH1vcnp/9th/zC39sWOcNr9o
uXKU7QmVw1TD6/ee21fo+uDr4Swtf2KcCcbtb//mN84eQubsBX4bX/2Jbyeu
VPd2tjGfbDH/5RErX3NYrjw4PXfb2cKH9tgdJ5+Na+Mo5XIIxmFIf9gz4wWd
2OQvHpm0HssVmJ0qrvV8bfGr05/2vPL9We/K2anUiVOUDMbJ0JnBzgYWfxVH
VjmjyyUNX2nTO5pn18mD8fFexlafi1enK+bb4xfPPgDbZJsKC5E/1+2DyheX
0qnjenXy05HR7FrlE1TWD3Zf+w4dEZ8DXRA3uz6or33z7R5rM34q172b96hM
dvRBHfLrWWGtl9m1yokDj8TbMHP8yo3Zio0nB/kT8/1tW1NthvHobm3aN/VH
nfgf4try3OxdO+cOmYhTSzmsVT/dW+6ezh6qE256xF10nbEgOzi1vA98hvMh
XnvzQPbbY9g9hifrLXd8afmkrPfJXz34Kh7O8FUcoTsXYeey43gv/qpyZwk7
e/gyW9ZwbH3o5jDJP0juyWi8N9ooXlofs1lZB/nINr7qejn1xHvbq8ItbFna
fXbPK/YtewksSueaD/iIbcK4Wrf0DRxLvukGcXGwlOv2GrqgM61bxswnGdi5
nIxPucjpdrqxM5z6Wdw+exEM0zk71+n6uBR2rPilq25e0OLG414oJqo6Xbff
dBaPPMBL7EXGwXjCRZuzvfN9Ya2dv4asha/idugc4sZU+S43V3zYzPwOF8c7
jg4vXr18qeQnfOU3+YtLgd4z3sM38Jd3jpvOCcK9+fjs6+EoejLsBG90XTl8
lY0rfgZths2U48PcHHT59SpvTBX/QDxX/F/2v/yMk6tvON7jJsVpEJd7/se4
jMiyvtm/yHv8dfH/x/MfvsonGP/V9glWLu6dH7Dr9pPwlXY62/Ky+KvwVfYT
7zR5xd98c84Uw+C92K98X8SrHN9XPBVh1Mr7HOWOxYrXPRtXXFjpE2X7ULbx
OB/GP/e225+4c0AXizXx3O98gcs9Xx69MecPPn7HLBW/lI2ouKZyJcf5qf3O
rND9dCz9+UM/9FtnX5gc2x8+8xYn58STfvQFfGWc84HGKaEP+lZe93I0l5fn
8Sxh5c2Rpex6GNJ67ZxgMfZxh6bDrVv7UFygytmFdkw7Ocm+ZC2TI3jJOHR2
j2zHl2I84sH2rGK3wlpxLGgvnvbiio3PxLV98czj+G+/eMfk23dgC++SH5O8
j8/mwyeXXzlrfA9PTqlfOHrcGrXH2VOLM9dWuWzcq779Diay9qzTcjqr715/
q29e4Sfvrr51wxYBf2nLc8nNFVN8+xDLS+hbpLyE2ix2vTOGw50xfAjDs//2
23bUeUD92VjLvdofTo2fus8bZqcqB7T3imvLu4Tr4ArPjZOh+nGcaqczg67H
R1pMV3465c0n3x4ddmLnci+Zc8+uXx3P7hxi+abLW03X0e/FZXkHew58Vc4e
99BTbC5k0/5lDe88FOXPsvbzT8Vzbi3HIdC5ts4Gxl2QrzC/YXatnUPHPhh3
E5xE7rOJha+sj87hFm9Pf/btaW9jv8oP9egfhK/CVMV7Z7+Ku0CZjny2f747
Dkpnw+k3809m6V2+V3NfbiPjHBfucMe87ayvOEmMlbEuD/hwbL333Ju9EQYe
fvx/ceYoeZo99I3r/X5H317Rzys+9N19S8dVdeW+uPnMyzuzfW3Gki81LJoN
yvVyGRd/nm1qn+MLd11npu9YLH5AbYa7dm5Be1VcCvkBzZdndb28TeXisQeE
J42B+vESkIHy1JM9mKc8gGSLziQ/k/fu1aMDlTsDCFeFqcQe5e9jx4WX8uuZ
kzhCN44KX7kepsqfGL7aXFjmEU4kq/Rp9qWNqcJFm9sqv+EjP8POP7hzmoc3
8pd17j5+BvOXf78cmuGr/NH5++K/2rapcgsah3DXxlc7Lks7xQZs/itzSYdY
P/kHN69Icexkw/zAV2QjG7LrdFYcWXHXP3KC0Q/5WMtFON+Kb7/9g8UY5EMs
jj07WOW+4/In7rOH4R/jPef6nuMW+0S4xV5Subx+5e8LX1WOOyufqX1LP91r
nPV17Kq/efa+zlaUX7J4MG3GS9/5wZ0nMV9hmCoeBmMTF1a5p7OtWXvx1sbP
XEx+MWP0M51XDFVnHuPFopfhpDkTduzU5/sofGV/K28gfFW+P9ezZXWWMC6s
/HT6s88e5uOzf128MC9wv8MI+qstYz6Y8fP3/Dan6sT9TratB3qevE4eqY8c
OxN8ZX2RFbJpHy/3X7YpOsy+Ri+Qa/sA2XVvGIme0H6c7a5b5/RUdcrjbL7J
uPbhi/yJsM+VC/3ITLhLfXIdjgoXTX7Ht9/2K/fvc4X2ZeOVXyb+qx333nnG
MFLcDtv2pf/KXYdr4m8nH8Wx578rL2H4J16szhV6h0c8lr8y7JQNTdn92ayK
ezev2bU2NsuuFddWOanzJxaXRU7t4+qRtTi0rIk5az4c3mRHftvxN/3UWYPW
Y7kVrJn8g3FvljsmW1Y4aucfpMOzU3V94yv9ym9YLkK63VzEf9V54fIqphu1
x89Vzt84Lff5wXix4rLH1QBHhanyCfrbGs7m5AfmaXzpt+nH246ckBd7ozEZ
f/zPvJAXyZjDWMYvbGbc8WyYS/Vq337+N//3/3gwsPrmeb6jfrI4jmM7umwS
d/4+mIre975hLTqiM310yvYDFse+c9bEaWBvyE4VXi3OqnK+v2LgK7tOD9Xm
5q3aeQmLy8relS2LLsvXmf1NnYkrH7/i2Pu+ezBVfkA/xis/YLnsyeXkd58z
QfRzeSjCTu1NdFhx6XQYeS0XmPaVs1mFncJd4SjXraU4mZWth+xR2Z2Kx45j
Ycdf7TNxm7eB7aB9v3OFL/Mb0uVhs+wk9jzYr/jJzv+an878bv/gxldxs9tD
hpN6OBn2WcLtNwx3aaezLdZ18e3WffwM5ng4Md95xwuZh42v6CIy4PnP9qDz
DaUOX2Fco9tXGKYKX2mzvDmdGQxHVd6+wp1Dp7OExW6VH6f8zvHmZSOimzp7
kn8wPGPPKLZ8+wfj+SzGaXhkP3bayVbmujboNj5BMm0M6Ar7IdlOJ+crj1e4
PsfJ0PUdi6UPnUPM/pYNrbj0MFXx+WGtHZ8f/3xnA6eNz533zS6UzYoemlwr
Y2uaXChfOvpguMY/e/sQ8xuWx9l1/R8uvy8cvBTuIudwvW84bZJrsqdOfO/x
lM7PxNJrM5zvHez317fi8a2TbX4LWMK6Lc+ydXj5fM5cwEB0POxjndgjrCPf
buYIhvK3Pdn3OlzlOhm9coreWIsO4Rcn+/pgnfu20P6Ov4IFi8tS7hzi5Bb6
sdufWJls2b+KudpxLNnWXM8/SP78Tx37YTgq21cx88owYf4XZTKXnUGb7s+u
lX9w26DidqjOjnUvLr2Yq3xA5fTRjnfLb1idOL6yWRWXFWZTLr7LexU/5n3r
5/ZVhbvidih3Tzl37AN0Zv5F782WRTbIEJ02e/ecZaaj6EPrZjg7P/R0zra+
dnS1/SQO9kd+BnJeDG34Sjm7VucNtw8xzFZ+nDlT+2dnLZQbopiW+EXt42wd
+sdOZY+hA+ArZbqkmHa6WB31rQHrz75rbIy/OYaFyIRnum5+yptJj1972tNZ
t68eHJU9Ss4jYxQ3LFk3/vu69l03T7CWtuibv/t//qeD4cqXRJ7UGc6EXzs6
ig7wLvkKixW/ctwd7FS+mO0fzCe4uUPzzXWWsLi12iyOq5zO4ag4RR/tVNf5
zht37VyExWXF9erech1W9lx9syfDv3PG7KeeXucYz/dsmIpcZ7OyJtim4Jls
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
4ah8i/kZizfbORBhgPx9+f7IYHxZ5XEm38VEZb8q3r74rnL0FOsVfrOHdz27
UzFgdADdzp5nvXgvOjcO1exs6udzDKd1XvKRmzT/Y/Fg6mdPy66Vb7GcPmGz
bFxkWrvWrP2D/MIMYS17jefrG/kpR0y+BmspX0DnkoZz6ItHb+eDCHdZO8Vc
ua4/9srJkTnxXdZe3MXWPjmIZ54s03vW6cQw/OiRObrd+E6M8785OIVe0ef8
19YjGYGvPNeYGC/3do5POR+f/lufxlM521T8adktd77vHac332w/fZ93cG9n
CT2Xf3D4H3/2xLoXl8U/CM+5x7piG6AfLnv/ja/gmZ0vpjwyxY13NpC+zg8Y
12i2KfXDWsrwFaxFP8Z7H/d7sVj5HOm5Yt3zCcbH1b103rP+vMJvEU6b/ekt
Z9/RBoxU7i3rwm8/xa5PnND7zp4fTzW5KmcNmRgu8g/d8VTZr/IDbvyjvG1W
YSTl4cT8uTvP4LZZdb04K37LcrDCePkQs49ljyqfXb6n/FbF/5QvoD2xOJ/8
U8VaF49tjMNak1/0fz3X4Q37ChmEs9y7uXC3HWl/47A16XM+vh3Trhy/qL1i
5yKEx9hSsmuR581HOucPvnrzBlvjnZfZ/KLF/Be7Tj9mv4Kvdr5UGEz5kf9q
c1tt3vUdK7VtUJt3vdiqYr/D/Pn7smXlH1Q2/tl/dn6ZYtc7v5ktUZ3iw+m1
zc2uD3FBqJO/DKaif+xlz+b86HgyF59YZ/pqMy6vwW3PeSrC8MlV5x+LE9vY
z9rNzlYunonl//R5r7gj9DnOq/hC8xfsc4i9i/e4cjAcTFiZvou/feJc/vSu
U66cYrqyiRWjbo7Kt+sdzZ29g94cefzeif2Lyy5eVhiITiD/1i9d4ZsOprKu
rePiPNMz+fXgW9fjMwxf+fEsewudbR+n42AX81WcVXFc2soHl30p7BTnlev6
pm4+R7iJD1H7xUFlg4ItlGENayW7FixHD7AR64P9R7+0o36+v7BfOFAfije2
NvRPfb+9Q33Y5xPLv1M+xI21wkv25WLpux6PVviqs43xOWx7VBxZ7jUXxhtG
JUveK7/qxm/ql6sxP6YxVy7WK8zmfTvPuPNQu9d6cL062jEv4TTXYYdyZGvT
3+7VP/LbOcS44o2j/+V7NX+ea41bR8W0b97CsJa9SzleLOV4rpS1TU9bm/ap
YnHnvMKnjk42TuTfGOqnterd6HNybw7K923e7Ymdp1A2n2HmbHfFR805s+c+
vm2P6myCvhR394ipOqewz0dUP/60clka52KxJi578JX/8Q+Sifne+vX7fuuW
/rAPDg/Ce27bXWcGjV12vJ1bMCwU7sqW5Xo5AV1n18o/mK+wWPdtj+o84ObU
Kv9j1/N1iRPrTAF8xZdDZ9kri4ll5yiWyb7hJ95134DmgY4cP9bPHszS2b14
qzqno/6OrcrHtzFV/j7lcJR2sl9t3x/dGZ/VP1an6/ocviJTyq7TQ3E50jvl
BY6vMgyQDYe+KN47W1Z1urc6+Q2z4WwblzWcPx3mNMdXfu87/qr4dvuabwfv
Eg9D8e3K+QrZsuiucBcM5DoZro5yvkL3Du/F63deaXLXGi93sP7GU0E2vLO2
xV/BQ/alYq6sZ7EB5XAs9mzzKoQx9th21i/sWjzVLg/H0zteiLnqzC790dgW
9x7PWHWKFdcOPRQOCXeRgbDW5uSM19T60B9zF6+ymCvybd9ky6J3jT+ZNKeb
qyqeq/jEivPfeauzy8UpQR8VD6bP2X/or+x73jFer2xE+Trza3T+KG72OK+s
2eLVw1dzhnBwFL1C7855wS/dfKTunT320wcv6Wec8PawOGnNtXdyr3UHH/nJ
31ecgL2DrqBfW7/0gP2oHKMT5zL88Oq717qmQ8jxzvucjVo9a8r8wCr2IFiY
/Npn7fvFU8FB/i4ufb6bJ/6KjFunxbfrv3I2pfCSe2GluLayocXDkM1K2TPi
O/UO3kW5uDK6SX19y+cY1gqbea732fHwrhcnX/x8nFphwuLti5lXzi+pTG9t
P6B9M9wS1upc4Y6/sma0SYcUL2fe4diwYrmBircvlsy9nveyM4bwxeaEd11/
XN9nG7f9JBylvLlPlXuW8QkfxteU/zHcteO44pPPL5nfBCZhgyL/2ak2pqLP
tTNcRH965+mjI+yJw9H7lbNG7I/kqj4bZ7qdTPu7HNz2q86BkpMwlXm3prxH
XBlxVmQ7KiYq21ScG3HJ5ufdPGnJwLZTlRcgP2B4bOejNIb6TCbi2yf3xcZv
fFX8FZuA8vh5T56S+NpPDH88BjAPPViO42xZ+e+u2NKbYyG707ZBbZ+ge+O9
jx9eeWIaxrfIHrHj3mGq+pM/0b7xTP7PuYP44Uenv/3oYbjKnMBB9BhdR4fB
SNmyslmRmetM4alTPFX8VNmpHvmpNm8VGaNX8w++DCOZk64XT1XMVdhpl9Wh
X/UvnZwdrOvlv4uXcvv+NnaqvH1bcS51Dm7bwXZMkXm2p+a3gqvsa/7vXus6
fEWGrTtzXg5Q81leZnOV/Sp/X35AskqHuZ98+taZPEO/cnCXfae4oDhIjUP5
CMJX5rFvqHg49dW+AV95Z22Er+wf/IMzRv/85v7yHRUPgz2h2LOX5WWes23P
cRQdn22q6+Go7ITFvYddw7SPvsLK5R8s/iqstWOx6LLsWuWmKd4JbrzO6Nx8
NfAVObbH0SFkG14tN6v1ChsYT/gjXtn4rzoz+Hh+MB6Jzm/2juUHbwyNWzH8
2/6WXav8g/lJw2xj//vMsSP5XdwdPQULuR6O6qxreQyzd4W1vFu5EScP/Lvu
vH506vBSf+v4/uZ81XeOncq6tk5db23GL6q+dVqe977LfHf5pqWf/CiPD/wv
7zp0SvhNu8pwi/WjDJvASPZfMhq/OhvPld/p9huWt7S4d7/jcCgGPuwEL5W7
2d+etfmyrM3OLVq/frTvufkiyVlnHuNErZ+dW+y8oTowUbH0xfn3LtWnj8jn
jpl/zAdE/tyf/So7EnmNj9Tce7b92tyTU8+i46xv+tZz6B1rwnO9j2dZe56t
fnkY8xtWhwyR8X3esLgs1zcGc139bGv2Yeug+nFWbK5UmMK7mbuwlnWqD9px
vXvNtbJ+ey5slV+STMeDaiyNebnz7LHFtYavfE+4Xo5X64U8lOvN9exL7jWO
nkfn21+tdXW8H7mMe8q866d7y/3d2YHHHNmjg165cxvFw59tatujwqvZpspN
uX2y3atcPvHK8Z7FZVXs1vYJWgPuhxu9D3zl+7QzDNr325hM/sQ3HR3uR/xS
Me3FWRlTdiR6sPwyxbqHi3Yum84GxucQFytdGBer9sNa6sfhQK/tOPli2rN3
eS687Lp9y3qwZ3Wuhz7M7wYvbTu8n3iq6b7NbRUumrMTH3ohzir+hGLLdxxU
vOvhq66HhbpeDNXGWva5HXPVdXWyU2nnZVhLeXNRFkNY7t3sIWGkbFb5ccJa
2w5TLrwwVb7CiTUZm4Pr8NXkTP6Ds9eYv/BVcVDWgrEpD87E4X79jrlyPeyU
H5C+dL8yfV7ZdXO28ZU2jZV4AuuCnUA/jE/+ymKN4q4vBsD3VZwM+8xgHPhj
D/qxF/yDxbdn99s8DNtvGN/Cjr/Kb7jPMzZHnSUMR2XjGr/U5ARUpxj1jan0
IR+i6+GQzedgTvVfbL92zJF9ZL4l/tPRG+wh9KH917yYU2vMGrVGrjMtdyx9
PsdiyeI49c3Uc2Gh4vPDY94rXs1HPBZPV3kV9/Vscdqn/+Kqoi/1y7zH4bB5
Eti74k8YG/n7ju+YrqrNbFl+kyXrd/vsrEWyRQ+QQbJHP8SjSN4mnv2bZ52q
7399r2nrEVP5rS1tkmH17EGdGUz/WDPhruLY4Yq4F7JTaccaiSOUfMfZXmx8
PKJhMPuqdsI2xV8Vx5W/z/32ZOPh+7T80WGb4rKyfWUTq052M23a7+KdsJ8W
955fMnwFs8SVmm9OPzvnWAwYW1b1OyO5Y7pcr75nxjuRTY/e9tzsfvSg/+0c
i/krO+dofMyB8em8pOtxfHlWPBLK8Z3qv73aeo2zK255/9fnzffl3mxxyuFG
ZfKqXX2wTqwt76Id2K94b9fJp/uyuWU386z5lhi/Gxxl7+0b2do3nuTX/7KL
lgc8uxAcMmvyp+48kpujI1tl9kntNCb2iGxExZzn44NPHn122+4Udsrn++jv
e4xR3/mSslkVW7WxVvarzhLG3x4/vz3IWNMlcWd5B/yB4T914y+dfBt/8u72
V3YnOpFOgq+Ui2mn7+JdL0YtX15+QPsx3VfOIPoPX3pxVl2P5yE+q12Oz8F8
8zl6ru88XKb2CDpJfHI5cMtls2MbKsdt5f+V6bZ4D7Ltdw46HVLsevotTLV5
GDYXaDHtOz7qMda9mPbiK8JR+rBtVsVi5QfU576RXddH13e8+t73i6ne+/W2
t+Sr2ufX2seL0bJ/x5VEBsif+uaCPGlD+8YqX1L5nc2HNWLf6MygsbWvxHml
7Awr3Wl/ihNg27Lsa85h0IX0uzqu27+0aTzjYAlf7Xiw/Gvhq2Krim8f7tH/
/s6xSBeU6zv7VZyisJZ3f/SfZrOK72iP7cZO4a5dbmzzvYaBW4sbjxWvZa7j
F1WmI8JU4avi8HfunjhmnHOhh+y//+X//Y9HH9jXzYuxNV90o/GcfJ4ffHp9
2xzfXDmXw9v5lMuxSPY2n3xnCfNvhruUu17uwuL2i8UaP+ofv8A1Ot+Fw5lQ
3p+JXxi/YXHs8bfT2fF/5j8dfDYcp67bg/L9hanIWDFU2an8Ni7GZGL9vnrW
o/volM4jq6fP7LXsq/oMu7FT2WusZXpDm/SDv4t7Z29Xx1yYF/tp5WIb8kuS
Y/drxzqCH8qD0zlB8u1/yq6X8yjfXLm6ivXSnvbpIt+J5bTdPspyEYaLwlTW
THgpftTqFGO/47vU7Xr+zR3b77kwCzzTecNim+PjyuYGb4W1PMO8wIbezXu5
jw7Ivxl3RLwNrmsnW1b2QDKg7fDexjzhBP0Mz+QX8ve+Hp/q9i0qh9nCcurm
S+1e7+45nqs+XVDeYf3xP30uF6Tr4a7wFeyYvSi+1vCJcTBX2QnzTXdOU1+z
KZWDT9/U9y6ek583nn9YpbzecEe4Lr+b9VfMuXob52y/3o5ne7RHFS9XeZ/1
iz+2XN61n+1r27LmG+ydL2Az7xvnRlwNnm1v6sxg+Ip9TfxqOSK1m+z51pR7
2r4yHK9vHBx15YW4cVQx7fkK6VN6KxtXOW52Dh36fbj7f/vmW9j8V9WJqyF8
5Vn2Dz4k8fN0Lp0nrxAdOvbj//3Or+qbMvxDbymHo+Kzohc7D+j/2bjisCJ7
8YJaO8Wfb0wVl8LmvHqMUa/cdfqqdrZtKry0sVbxWvR19qs5Q/vBU3/HYikX
X739fcrbfqLcHh23QPvvtr1su4o6ZCD/DqxFdtWZfJHvO7HT6hu3bb+Cr+Br
smac8gnCqOxX5JM+zt9H14av6DNzWdl+FL5SDo/FizXn1//8zk9KdsbPf2IE
7zgl70vnsuHE15H9Kl6sctCXe+HK8/Fk+NPfdp+jjKNAedsDH+Pcwh7b9xeO
cq868Wm8jEfrkYN028GKGy9+Pr+h68ND/3svcFWVTwc+oQesB+Mhvp3+IE/m
Zbgtv3lwsvGEH8jwYJPP3+f75ozfO28eidqPW77zjJ2jjOcq/2Dx+XOG8Mkd
01Us/cRUvffOfVMM2HAxvHqu5+OLL8u61sf4RbNTeVZ4z/jol/ex1tIPZJhM
5aezLrMvhanUjyNLWX3fAp6r7Do9vfMejm3126cdOqD4zHJsuV5Mgn0qn104
rdgGeqMcEPRSZwkf8+lsTi37Xbzr9u44SIsjov/pGnpGH2rf9cnn/bwde1x5
DN1rnQwW/9BtNyumqz7ACOGr7FqbXyKbUnH1m9fU/lx8vnJ9MH+dAcxelP3N
s4wnjNe+H3d9vsXGRFn94rs8Q3/IdHl26MH4Tj0z/FYOIOXwQ7hLOVwU/2o4
cGM/7YepzIv/G698Z/5W1p57zIvrnmveJ1flj58yneL9yaH/K5vTzjbaL9Sn
+133XPWyfRXDFgdFOMS40OHWXvFvdE3j6R0771keyX1eMs6ouKTsGeXptm6N
S3ak/HrW9qO/r7L5jpN2nynIxhVWzAYV12v8/J67+RaKxdr935gtHoad6zlO
UTpRu/Ymcz+8mIOv4Lk59/v64Xqd2Kn3nPN39G88optfPXtUMeowUj65x3w3
rtOD+QQ768dmVZyVdvL97Th5+4R+sVPZL+i7Z2vz6GprO5sW7Ou7MLsQ/RT+
KbYK3izPsnKx6+UHpFO2v+8x5qqcy9WJlyOOhXQdDBGmKt9N+Gr7AbddK0yV
PWrzMISd4oXI5rbPGFaO1zHux42ddpzV9gkWR/TI21A5PJB/KjsYWSz+qn3Q
z/jbn58fzH7Fvjrxbl99gUd026mU6fyu03/2NTYW+lVb4avqP+Ir8kInZL8y
zleM4MFXO/6qXNX2ADlxvKd9Ar6a8Tpn159MfuUfv/Nfl7v58XzlxkiPZzAb
/8bzMZ5tn/FUP/tVOCTbV2cJNzfp9g9mRwprNUd0YjFX5UQ2LniuyC7dK6cD
fUNWYd3Jq/SdO7eRdVl+Z1hlvl8nd3YxTn7oGms0zvawVtgPHspvqL7+F+se
18c+YxhXanFltd+z4KmxT73vhZj2iy/vtKnt4tWNRzFawwXyl2eNx6tgPKyn
vmV8102etg/cvA19u2Vndu+c5Xhy5I2c20/cRz7J4cX1c9ZsueDjZCi3aWeZ
8yf2neX/nV/Onpa/Ly53a6SzbNaOMh1ljWRfIvfl0yknjvazlalfrkN7jb1h
bM1z1i+e0vhL45OnH9XPrhWnVvYo9enNMFVx9cVlZWfzPvrg/9nc4qIvdku9
eFDjiLDPh9/iQY2Pa8d3ZROj77QTN0X+PvfVfrglHGXdbzuVuQtrqa9OeYHL
pbjPP+54/s33ZU7jblIun5H+0BfuLwbMu9kX4tMge3FiuJ6/kmyba21aI3Cr
8YQLPNd75mcMn9ALnhVvmHbqczjZHhC+jeMiTox8fNahNR3HVD61bDlxiO17
68Pmcd12pLgydo7vOGA9N4yU/WrboyqH35Thvexj+/xs+Z6MURivfN9xYniX
eMXsQeZAW+V6zq5lLrV/xQ2fPYiee6bzX7GXFEMehxV8ZV/ZeWro2c79FXOl
TM91bzYr+Kr4q7gX1He9fNDxlBYnr03PsmfQZZ0HJEf6R0fBG/RNOKdcNnRU
36T0LZ0W5xV9te1R+QE7G7j5Fopdj/OqOKvtE3yMv+q8Yd+bm4N9f4cWcxWf
g77tsnb22cMwVWcSi5mn38NI5SvpjNvmbVCOB3LziseRFX97dhJy316vHJbI
rqXsuwFe0H75B+2JnePzdxy/7Ambt6rY9fCSPeLRfkVui79Sdt28qrPPGBqT
cmCF6/IPto8X702vlaua7mELNRab/4p+gUmsiSvn+s1d3ziEhfZZv/hCHznE
8s+GUcNL+RP3mO86tROm2rxY7vXdHKbqzN32IWpT//lD3Wv9GxPrT8wVWaSr
fXN5h2LbJgbneR4x63Jz448t/Cv/II92XILZl8jj4JufuXMj5tOMK7W4rJ0T
Jz/1I29ncVbx6lx56O88O8ON9TN3PBWdq07n/iaf0pzL8y6TR/C5nSp7lB/7
FMyuTjZw32mu0yXkbGKZJ+7LfjJ5br99sKi1nk0sfGXNhs2yY49t9/3nu0Df
jGFYLhsX/ZXe8GN/JP/bvhSHVVwNxWLRU/o/uv5757nFo5Yz2nyb6zgT4jst
Br5vz3CXv5WzXynHU1q8U3jGXh+m0ubOVe16vkJlfdZO+FDb2bJ2WZ3OphV7
r//Wm7Y8Kw6KfY4yfvjixPKjdXa269ncvHt5fPQzu5n628b1yF9Rnse4LIy5
OtohA54Dqyjrr2epo1y8d9hJ2XPcTz61pw45LJ6NzBRrZ40Y44sf/byLMYKL
5vvqJw/egBe8e3iVzOhzXPrhRmNqbOds7TtfsC+xBQ2/ybvu+Cs6acdNbc6K
4s3id40ndvv1tm+u51aOr2zHrudD3P6+RzvV5mPPFxwujUskrN5Zj3KR947x
uhe75bs+uxbOK++mH+ZI++bmyh3x7rhscDJka+pMH51VrNTmUS/OKrvTs73y
6PPJjzI5cZTdq83N2V7enHIxs33ZM8JjsFzPnVifNz0tr2B5auKbosf6BqQn
6a7Jz/SXtx8QHgnn2IvzA8a7XmzVzhu4Y6v6vttnsR/j3rs3TJWdKqwVvtrx
V+Gu7aPsev7E7GA7R+Hmf/DOYSTjr5wvZucu2T7B8Fix2eUl2bFD2w4Tf+mO
y1KOv8iPfuYftBbsFfY4Mkmfm3PYvrNp4ati2une4tjDV8W0m8vqhAHcG0fW
7Dlv3Par8FX5pq2VeFDJffyi1lLxV9oWfwUHlBfbfh++KldjPPnGJ9xVPNXO
cZNPcHOR5RPcPO3FceUrzE61/bPZD2d9vfP2z+649/L9FdOe/Yru9F7aL0+x
dbQ5GeArfbWXb3xlPOMZ69ycuYufuXG2/q3dzedAB8ftH/fCjhPLt7g5wWYs
53xfHFnxTsQvClvRQ+UW96w42eK6970YR0f2In2Dr/wo0yFk1DrKx0eH+D+c
5Lr3db9xU5+MDcfAx2/+K+PpnmLd1bcW/I7jou8+5WKuPMs6zq7O7pXPsRgG
7biv7zK/PaOYBN9XcR2Hu8IhneVxTzGcccjnj7NO7Sn24uKg2l82n7z/K5MB
z4p/HkbwrG2bcq/9XzvxReQTLEa9b1h9Tt8qa9/6zJblXYrJd8071342tO1n
1B9l47Pj1vaZyuxgnUnMVpMPrvMC+SXpymxi1lsxV+prS9/oiPhajWExY65n
L9K2+uVSpJs3rjMOfnuu/mcDDGtd33zn/66zm8SHFn+ln31uEc6ho/Of0ine
PUxYWV11OmsZR30YJpvPtudkC4Ipsl9NHql33DYx5XjsjV2YKh/ftlnBVHEm
7NyR2glHbV6y/Ho7Fj07FXylb7BQeSGH2+4nbtkwbsazGLPiD+2p+qlt2NSz
tBFXmH6ZRza6sJYzg50Ldc9wMXz3yRWz/gpfyMWdfPv1skHRI/kHOzMY/xX7
VXWKy3rMAR02yx4Fs4W11Cleyzfqlcvr3RdX6J0rkDzCW3RWOZfDPPBLmKrY
9b4x97k8Y9haVn7MD2gtxh1a/FX5brJZbYykDtyQ/eqR/+oRI4Wdtn8we9Tj
9fI77ziu6uw8O/Rr5wezk1gn2ZfCV9mvNsd7vqpw1+YcyPbyaKsJG9gT1d97
6Piiv3RwMZk0V+aWL3rk9/WDr+hF+1TYqTh2ZfMXvrLHVMf1Yt2rQ38rh6/K
3eA+/TBf4avOoOln8e3+pov5BMle/KKTI/lHTt6uxnPnv8422JiEkbYfdsca
7Vw5+5xgdqrNn795yTaHwz6bsP2D3iv7VeU4HCrT3/CVOubL94wf9qu+peUk
He7kv7zth8XIkVvYOC5399KB8Jf1rWytKnfGISwEK1XOb6hvYcuLq+g+F1kc
F5013Bgfu/kThifmfXc+6Hyg5eXRnj5Y79mR9Mc7xTdF7vzAXcWc0xvFR1m/
3rEc7vG37/bL++z96Qp1yVzl4tvzOXbmzt+dr+n8r/vib+88DrmNF8u7lDve
uxcbr58wjuvFcPrxLuXl6dvQ/Nlfiicvhqp4p83VQKeFwcI2+fiKhy9+vjjV
zjNaj9Zh8Vf5+Nw3ObHmLKR+Zn+L2yF8lR6e3O3PY7E210TYsvGJyyJbhL5q
p3OI7g3vbVtW5ex1xZPHvVm8E3yYTckeq7zzM4bHskG5Breo79o+51hsFbxk
j1ZH+8XhG9t4WY2D97KXuWYcyF55J/MbenY4yjPCA/rRuYDONcA13gF+iL8r
exQ8kc0n25Q26R5ldcofBC+5F3ZSN/wGc5WPEsaBQcNXcb2Wy/sxj/Yjvion
Ubayja/K/ed5nQcsjr18jvGIqh+ONW47t531opzsdZ4iv21jbm2Wk70zDnyF
+mAOwpyTm+lbx9dGX9Br+Dl9+w2P+pzRo0eU4Zx4RONegIXsAbtM91WHTt15
cOJszz8IX5W72XPjfrf30UF8NPoyvv3fuc/d0Bl9A2ZjJ5Nxy5BD+io9Fndo
PrgdZ7XzBoaprNMwW7joZbkFs0epr82d7+aRm337++K52j7B6u/8g8Vr5aPc
3Fmb22FzQewY9W1rim88O0bYoHyFlcNX6re/hyvyD+4zhtnBrI+4K82LPQtG
LhfV5rxSLkdznAzxXLlO9jeO6jrdsOuUT4euLZ+OcSBH4attv7IfZxuBf+g8
uW/8Xc5Bclb81eQInPirsbNMXuxyL4a1OjOYDbC9vvx68YntmPbGcF8PX3U9
HJv9MKw1HCTjK6ycLat8NNm+wmPah5/wTihP/ozvHBsU+5U1Y9+Bryau81sv
2K/YHs2dsaVDyKQ9vvmFn+lt14y5vamyNUUe4FvP9X47vn3bTvWfvNEZ+tl5
wPL7VB7+5//l5iOdWK2JB8seZY14PzhKefxsr9/XvYv31jf/y9bkh/52zb1z
huzjd77CK4f90QPwm3p0BZmNq6HYdW3SQ9rkl4iTIR6t7Gk7jouu8jd9rr2w
GT3RORr6abjefu7my/Ks/I/6Q1eMv/zDd1xoORCLlbKOlO195l/ZPLpuTbjX
XIe1irPK9jXcvh++y+lMfYtb1btks9q5qrN30QPq6Y926L64IDojGW6Mf9W7
mWv90p9y7mgrf2gxYPBFfA72w67Xn3Jk+1GOn2FjrTBVPAz+n++ys5mb+ysO
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
c9bor488kE3vM/ygv3vGbeKMpmz+zU8cXN7DveTNOlamh/WBPkr/0Edzxuw7
53q5QPSHbnd9bMrvv7mdO/9YvsXwlT0dfqG7i4HRpnF2r7bJQ3azznbZM4wP
mfRDF2WPKp7NvfZj76F965q86Z9vJbJhbtRXl37RPiypf/mbtNUenf+0s37k
H9a4dMZZR3FHGPc4KDp7CKvQreWb7lweLAHD0B/WUef+tW8ssjWR73L5WUvm
PBuUd9rxUcYk21R5qMNR5ZXevOvxZYWj4rDa/FRhp82Z8Ji/b/v7Hq+HqTrr
l82qXDbldN6YSlsbf1r7xt+ckknyQ7YmJ/RfHJkn/3SndeIbURxIMSH0LTmg
e+1d1qR24DVzJF5iuBTfc8bEOxpbegp26pv2Gc45PAz0jTyAbFn03OZY2HkD
40/I9+d6vKOuX99Yp0xnwVHxNjxiMPsy+5T80d6FHGSzMmb5SekT+nnHrm++
hX3W5mU2q/BV5/7+sbj0nSvwMcZp244e8y+rs/2Dj/yfj7682nnMM7htU2Gq
ysVZ7evlIoxz3lh0JkKb+QTb97fNauOrzdUAA4QNis3uLNsj37i12Hk0OpN/
kL6mh8mTObV+Oy/WOb7ir+gkOjx+hn1+MBw1MQjfueOrs2uFteJ4tx/tWKzw
VfFX41t+/e5PHErWlz7Hz+CdyQLs4T1965Qr5zp3ffBJ+Kq4tTBq8Vcbl1Z+
5BMrFj0/4Mt4GIpj794dr5WNq/ODmyvD+oZ349Ow1q88HyfmyliyLXsePbn9
g9aA94Ov7AvDifkbR+dZM8aWbjIX5nF8Ka+fsrGDc+J4N9fKwwX8hTMXcb+r
T2bz98VBSo+yZQ33+nvv/Mt0bTzz8bSHYdxrXunVYpPo2iuP19GT5Fd/yKrr
YarwEj1A97jX+u28oTrZpvQzfgb9JL/+npiUT93xWvSg++37yhuDhZfIpHHx
Xu7Tpv1affXieC+G4THulL7oDCN8wN5kPbrX+jXe7tUH42xurE3/91z7k3Gw
jibv3CdP3+Zs3B+ePscx6D3pFXsQXc6fbvzzp8AL1oc9Gn4pJnxw1T87e7Mx
hnP8z/pjn7HWPZdeI4PaJmPWFByon8P/OPEhnZ2c86ujA7VJTqx3uJ9OG/vB
f3X2fvOj7B2NiTaV4VCyq+/6411gS33Q/jWu7yZ/6lh/cXfoez5T47RzW48+
+ldPx5/9ljt/nzaLRQn7WUeeaY2QIWNf3hnru1ip8vRVpzgr+Oox/lyd8u9U
DkfFJ79jq+bb4x2nfhxZmxshHLW50zc3wj7T9zKb1c73F7fnjrHfPOov8xtu
LlD98D0+vNWvnrGyBsxz5zHJubVW/rjhcP3EiQO5+FXvPLPlCCN79OfkgRhd
UU4HskMmmxd9ww0YPwVdObrktdOuOHYxJb4Pi48iy+WpCVPF/1k5bFaM1s4b
WFzW+GDeOJiKvosjtHyF2cHgLvJqDLxj3ID0WDafYjKLs9o2q/LCFGeVzcca
KS7d/r35DV7G7bn9g9sGVazXyzjVK2snXFS5OtmXNv7J7hT+2bamsNZjfe9Y
/a7nW/R+4Ux1hvvgA+e6craU+JfyK8VtlT+r3LvZrJQ3HrPe4tbenE7k3r1x
gJevxBjaa8iq9Rie8c0VTwK7R/YrmGq4ct+4fX+TT/dX7zgrZWsnrLVzEXaW
MF736tO39jjPKhaIDvG7/M59v2i7OCv3Zb/a/sHqTH7lE/dw8ExnMLNNbZ78
cNEjJ8Pwwf/hjZe2T7C4rOyH5XnMfpjvr+vlJ/Is2K84cO9iHq1R3zXX2e/7
XeArz6BLjaf5gK+spfjb6cWJ5xtf4eTF/PWbd9Q40y9jl/k3V77c10+b5pDO
MOb2dDIQh0O2LPuMta8OWSA39v3xbX7yxCmVW3D2mU8d/aTO5M+ZfM1kzHPN
6eR8/uLBscZSHd/f+QHjYNcne6K+k71iutpDw05hNns8OR9++q/cz/IudLxn
Dk/r+Csr+51PsPiNfJflSA1T6UPx7Y9nIa11+i2cRm+YB2NDvicX2nefdP5O
G3RRPkrzMefOf/88i9z69vL+1g0ZgSnoGN8a9iPzQ2ZgKX2HN8yHNWJ+6B3v
Zd/KfkIG4Hf9JC+w2Oz9Xz/7GJ1jDFyf3HhfPXGOcIYxgdPIorlzv/7hDjJW
+kbGrXeYh+x7Z89UhnW2rUz/7WlzvvXbx59izuxH9iDrl3x4L2vtip87sued
XbdOyRr/jnVrnI2rPYZ+I2feg8x3dq+zA+U422cny9FjLZQvrxhp17NZzTgN
H0Jn9OJDiPOzOKhsXNmg8vGFr8p9E6byLNfz94WpHjkT4kaIzzOstTFV/O3b
fgUjuZ7daeOrMNXLfILVKe/MnPV9z+E9sA6zcWmbjLX3wVH6ZG2aN//re9M8
kZ/JXfHm+1wSWcy/Y+/zf/fCg9ojO55lfsyvGAnYlC6xL7tnvr8/ec70kRvt
4mO3N8BIcaeXW7mY866Tw876Zacir9a0Nn0PF09Fj1/+ydtmFa+7PriXfFpn
4tjJLHmiM4sZi0+vHFiwRBxW/sc229lAdXbu0XgVyHbfCJt7YfNcZdfa3Okb
a+1cNvngHuOvduzTxlo7l01YaNffOKo8zhtHlVuwe8NO1Qlb7nhRbXaW2ZgY
r0dOoXI6l6/Z+IevXLdui1Hf17O30MXlWKGLyH35VqyhYpKH4+6TN76iF8mO
/XQ4Gr949uL4GYqbIhfZpradqrw51ka4q5w45cfxvhtfaTNeJt8+xtUeRp9k
T7Pm6fDwVbFVZEdskne2fooDD18Vy5T9yp4Vjoq/ojOYG19trrCdXzts1nzF
8b5zPuYTzJYVR1b4ip4q1t0cqW9u8g9my7J2t/3KHFsX5NO48Q/Gbyj/oHbJ
9qMta7hK/+nBWhNDNrFw9rb4GcybPXrybv3JeV+6PaxFHnxD+F94qVyE5oFe
sP/MOH36yejmz942onL66CNZ06a5KGZheHo+dbAQvWEfzzbld/FU/j/8qh88
dQZX/dzNsaBvYSf90V/19MG+7TqdPPL1jaOvtKH9OBkujHCwpHvjeXBvOKpc
OeWsCdf5O5xG/idHykePrcm7e1bfj9YXvee6PtMb1kfxGvYU46k/w7vwewe3
mLc4eOas3u8ePGWOybny4OL3HV1tjdgn4KLJrfLtUzbm+mvd0CfeyZwMD9Tr
T8qvo3199Q7W1HX+iexeeUJfP/w85oaeIBf5HqxXOs78i/UlG+o7b15sJeyk
Xt/1nmfeKmdbICvaFqMyZ1tOPriz3xkz8cnWoXG3brI9xp1On8CF9vDJ4zsY
mMz7v59ioqxjMk+e8vHZq4tFz8dnT4cvrFf3WmtxVeXLK7b8ZRgMBsmWFR6D
r7TT9c73aXPn+4uTYeOlcNTmUghTeZd4QeNCf+Qjjc98x1l11k9b5SVULteM
NuPtHJ3y6vmGJg/eufNT5Kr4YbLFVkOm7QNiIcwZOYdlysFRfCzMNPpy8nZp
P34S/3Ofvca8enfcC3Sj/pvjyUP78bMH8P2RGbJUbpr8gMWrkz36OlyUH7A6
dFVnBq2BfIiXTnohF7N27LFk2HXyTG7J7MXdeeTdfBZnVe6GzsvEW0W3pH+K
syq2HBaCMzrrEbdVvvv4rHZMe9gpm1XX9/nBzUn1mAcwjBRXcHazziqGf+gA
76I8sS3/5c7F3PXsY94re1c2yW2byjf6spzOlTfmNFbbTrXxlbXUmfdyQIfB
doxWdqpyDZfDrph264/MklVrpbI+aHviPz5y9oXwlX7RefF/lh9n8mZ88z4b
uPM7V952qsrV2basbFxzNv2Nex+ng+kTOtiaolfgFO9oT6Gfs1/BV8VfuW4t
zff1cLzTm74nJj7+x+5x3r5C49/af+RnKLYq3+vmrTK2O3fhy3JqZ8sq/sq8
FA+/OUV7lj7rQ7asi9fwyfjrX3165VM/+Z3NH9vC3//dbx7dSxbhKzp51sxv
Hr1K7nGQ6h/ZK4/k2GI+fLAKfUM2hgPjPx9ZpV/8rUyPhHXLuWyvGE73zx78
4D59I2+d9cu3Nfkf3nbnIpzz5R+7MVh+N+udLMSZoG+uh6/icOhMomeNH/JL
T+abfvIJxkFKpumo8tfYE+YM5XdesEd597gd7C1xZ4Wdiu/qjGGcD+S5/tjb
yVX2GfNe7FPc7OQ7/kNl8kzu3Ku+sVQ2tu69+AWPHvAse6F1QYeSH+/S+Tqy
Q19d9vczbvQQ+SoWn1x5F+vYXNGV1qJndV5a7Elx/zDVxMt96fg4jK/xYCvW
DzoMhoQVvSfZNkbqsEVccbvnPJR5uWKOz9zBfdr0/toon9p19uPYFlz3vU/3
GQN7kzKMbu1rwzcGnDu5JYb/076drvZO1o5xNR5k3nqzzuLujqsT3jAPrsMh
2ipuKhxFds1zPOpXHoObC7T4ouxX7nW98ubwdJ2tJWymHO7aMeqP9qvyI+/Y
9UccFcdCdq2uey6d532zWe28yWxQs/6f3NwR+mYdsfmRJX0iM+YBvskmf3HT
3/nLfCdODra33DEtsFbn393buXjzSA/bk/SVvomfPHsOfGtctWfv0DcYS5/N
MX0Pm5E1P3RMdio6bvMthK/Ug4vILjmP26pYKeXsqOW4qc7OG0hfsKNqZ+d6
tt/wIXYm0XV60Lvny6av8vHl7wtTZafaNiuYpxhIWDK+30d8VZ6aytvGtXlE
N79omKo6+Rz3ecDLXn7zPBQTVRnuGg6gD9zcsC8rZ5vKxtW9jcP2D4ajunfj
t+xalfXTO9FJ8QPk4xu/1nBlT7zzR2/fX3WKXd+8lzuns/VNH5GvYtrtf/YU
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
e8NU5Hna+u1Tbg/yLsNV+8aT8sEYhzASLFM8nz3F/NEH7ADkz1rUt3K56Qsd
e7V75oWc2TfoVfPNhka3aOtZ316xZsgouaXfJh/YJ863kT0Z7vJ/ezm5Hp/u
yDK8RDaMi3mix4xFOSitB99bcaHHQ0XO7f/2Zdfs0fYgMm//Nu/K6pBndYxT
didl+tB12Gnbo+ICpVeqo31la16bYS22rOrDWp0r3ParntX1+BmKuSq+PaxV
fHsx7eEouiQsB4vOOeUfPMmWByMY97Fdjv1EPfII/1i/6poXz5n5+CcHx1lz
6sSL3lp2jQ43ztkf9IcuJl9sUHS+vcR1ZfNvjuzpZJ7Oh5vIJDuVfpsjdXwb
ktnhCnrlSTqUfMZPVU5k6yJf3vD0vXbblKyjcBRbU/iqWPRtv7KOOuvnW0qb
9C+547MO/2uHbNOJz/pz5L1zGZ1v1E77VHYydjj6Ji4Fv7N10yt+6DT6pnM0
2WrKy5ltCo6qHNaCnYx/uW/ss/t65e0frJ1it6zlndM5fJVtapezWWXjilOu
XIT5AYtpL48z/BO+iqNjx70XoxV3RG3mTyy+a/sNy+Xd+crKZGow0R+ffTZM
ZY3OHvvxG1/N+avxJ1Zn+6fCVNZZnFf2W2W61xoZ3srfP/2EWexh1m/5nbNf
bf52awx22vxX2aNelotw27jCVF1/9BWaF216VpyW2dOKb6ezvaP1FrfVxW1z
4pTCV8Pt9fyM4fWdefNfhan2mcH483csVr7CbFM75qpyeKxYuO1n3P7EsFk+
x2Kuds6d4riK3arN8lCrby/hDyUHV8zHwV14iX23wpV8gubYOglfkfM4SM1l
sVjZsugz8+0bf86hfeeOuaKHXSer9lW4hQ6iP7K10ts7DyB939k97cRDFScV
/Zw/TpvunbzQn7vlvHgwv+lI2KlzfJ1JjFeh7+Xi0l2H04qn8q72Ee9iH9Iv
eqx4crI3Z+4/drCZdRqWI4fGgVxay+pas3Bv+S7MhXvDYeaoOHu63TrVBn9Z
vArDx/+dcw8brLEbfqmJg4U5ivf2/nS4dWpc7SnF3KqjH511Usda0P+JeX/T
8c/aoy4d2lnzG1MVc2J9kYk5m/dDZ+16v/Ix2OP8TZeZo3jT4Mb4U/Q/fj3n
1sOBfNzZENkbzJc9YfLg/vWTcu/Sp8Y/PA9ruD+sW65eusIcwwX8gOqFYayx
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
6jEnTucKN19Tee7K1eJ+30fqel74iv62xuErf5d/kG6Go4xnZwa3HxB2Kg8L
PTTnnoafYWOtYrHKP6i8+RkGk37lxEx6Jnm3P9oTim+P/8rY278mFvxNt3/Q
c4pvp7/KB013Wpfelx6Ps4W+7Ixv5wezDcbjus8DxgWabXDzjsZZmi2r84aP
vFjKm0NDOQ6N8lnv6+rTzcM/8Qd33Nfwgv3onc+abgv70XVsYeYMH6m1YTzY
5+l/sqjO8NT/03Nmx7i4rmwfIJ9hGLIRD9XYYd5/dAhdRZby38WNYA+fs+OD
i/K1jR/o1ZtXAb4qXp0+pzfJjDrpf/p5Ykx/6PiF2Gxc72z+xO29ep6r/9qk
B9Np6pNJ/bF3xFVlv6KDvXd57I2RsdVnMkbHX7nCzjkgMul5bESep065YLyP
mEBjVa6WeH/wHMbn7Ns8n461aS1YT8ZQe8VfdUbLXlO8h72GTNgL7VH6MFwa
Hzn9hK/iOe8bfzgPXrt9GeVTs+9okz1kzlw856SitzybbPjNZqVN+0PxV/Z3
8wVj2KONuXea83hvnLU4sTlzBgvGUd+ebx+hm6wza5+swj/0T1xSm6uT/Ses
Yq9xH9m3R4Spwjz2dLo9H1+2LP3c9e0dxVnR855vr6Kf3Zf9atu7ypsTpgqb
WZP6rE2yVVk/y+M8fugfOe+lfNnUz736Qa/mW3RdXfp0f6foHx1ojuLt9z/X
yTM5hX3MpzVlXyUvdKz3tB7JqvewPuxzxqKcj/o6eV/++qyd7GfwIZlIV7iH
bhFvYE1qWzyVName9oev5Y8OdgovWa9xUuVTSz6KrdKXYqu8c3aqyaP23TuG
yvX8d2GkzpJYd9W37rI7xWdVzFV9iPMq3tHWkbI+aNM6Cl/lx7ferY/h5vyt
2x4bdiLXE7P8vbMXX7azm+/L9fg847Oyn3Y2MB9ftqwwT/ao7e8LF4WjYKdw
V/Hq2tyxW9u3WKx7edJ33PuOdS/mqjr5DfVzY6rtT1TeeKwzidm1im/fvsX8
ifaUzg/ad5S335AuovO3XUsb+QfDUfbQ4RJ4EV9lN9i8WDvuPQ7SuBo21sq3
RR7cG49lse50pjEk055Fv5n/ySk7+QeLuTIX5bUJX8FIdEB2KmXfNZuz3T5O
5w2//689LWbWdWM+HNn/+un4pb9y/IP2t3IihK+sYdhJv4eHZ7g3zT87w/jt
3nzzX132+tuWZb3CJJ0lLP6qvELxuu+8hI98DmGtjWMfMW3x6vE2xGtazp2w
U7wNYSrtwADZLeCKuL/Kw1g8XhgsH+Xwxr7lYE7/I5PGm56Ar8ixfUE8/M6b
Mxjxh2/ud/Jq/M2LOSonDtmwR0zs7JeP/Ew+gU+e8nBpfO58r3UGMJsVPAYn
0z3l+IsXs3OL9ExnxC5b0e2/8L5xTFkvdKX+a9+9+mqO9IG82tv0KwxGtul8
66h89d6TnGSnYgNU1i4Zc481nK/N/eTHnkWvmBe4ZvKD/c9H12aPMl/WD6yS
PbrY74np/rWDkbQZVqIzzL9xMK7x+XRO0PyaD1h6znuO/ne9eBKyV8yJPuhT
/KL6aS3EeapsLjzPdzddXx4c81JuwfI3OG/umWRl8ou86c65rEyGzY9vJ7qB
DFiX1lR5p807PZC/rDhwNnNyaL123XqND8F8ZqeChe0RxZPbC8JI+e88Y+Oi
4qaKp3Ldt1o5PPU5v3qxVdqmp8Jm+uNZ+qYP7s0XqUzP1k9lz/Be1YnTSTkc
NTmrfuXp+Lx/8tQJQ7LdeS99hm3yH83a/e2jD8l9eRizZcEL06dztu3gxXJZ
Fjdu7cFRsAgZ9mxzpz39Nv/qlkcJvvLNa7790Nveyx5pTMhIeZqsqWxQbFNw
PxkpR0zYprwz2azGfjY+Qf0qh7L3YPtVf3N4XnEHp862TfUdob57i0VvHRXH
VR7nsFy+v/yD+hCWi4+0ePjOdNCFnU8hH9aFZ9KjnTmwpxeHYMzKsUlnmk/j
n9/c+JFtMhi3FRks9429NZ6rHU9FH23f38ZgO/5qY6rH6zvunczHnbV9hRsj
dZYw7FT5kYP0sf7GY5u/9NEnaP/a+CrcpbzPDxZ/5fqOew9fWS/mCl6iS+aM
2qdf8BUWr1Kd9mUYLG72bBrl0Gmvt0Y3TziZco+9uz3deF75KX1b3Par+EWt
nfKq2JuKv3r0/WXLorPjeC/nYPE84at4R7NfedZwr078VdyE9uVyaMTN7v2t
+fjlyEJc7mTQ/kgHDQ/d8KXsXM/xHjzyM+xYrOxaxa5vfNV45u8r5mrzlG5b
VuV8fJNL5l03NoYlyn9U3mRl14dv/o9O7Fz4yr2emQwUJ18MfM8tHxBMxcYU
hwM5NgaukycyHwcpOS7W3T5sPdIH8S3AP+EoOpS+gAnpGNeLFfQ/Zc9Xh6+A
jMVb1XdcPFdXjNLBP/SceycP6xfuOCsyoe/64t74r+gyODzbFJkhR3SXMTF+
sEl2pzlD8c1jj6L7yWgx2+QYbtcW2SdL6s8ZyomJohusHfLv2faUseN9+ea9
Kb9eZ1fsKe7J92d/DOfQ5fn4hid/YkXGdvWt20fpnfS5vERxIRajm69Iub3A
HkHOPEOb8z31+mmnfsb5cMX3n3e3Pr1v3Bn6cPk5z3cM3FtsvHGFqby/39ad
vsIt5oI+h2PIDz1ADvnIrDH4Qdn6tMfsGPV41y8b7R2LvrEQ/awuHUCfh4vU
MffaV3af/aY6+lmMerHr9shwV+33XaIdehu2CmvRrcXeW/P+FrMadtr2KPow
fi3Xybr38R0Km9LN9GHnB9VXJ5+pftn/9G3OVX/u2KvTacPd+hNPynlJbpXp
Q/grjrLiCe097lWenKeDo4q/srfZm+JtKPecsjVILsnppVOOzpk8fe84+GTO
nXzwyGe+P/XsMWEta3fn8sumdOUSOfgnTJWPG9Yi2xtHXb7522aV/Sq7U8/y
3HyRsJz3z5ab7WtjtsqtKXLvudY4PWVvfx5r/47bbm8O8wOay3Sd+fcM4+tb
I59gOCpM1VnLMFV2JOXNL9r1cJQ52te3Xct1zwtfFVsVjtq+v84tdj0fYlgr
G1Q8Wq5vG1fYLxvX9glW3vFXnZvYnKWbn6F4rc0jus8VlkvIffRT8e3ah2/T
wXE1dJYwfgZ7aD7BMFU2q80hsLku80PlM7IGW4/uJwM7F2G2XNhm9qsvnlj3
iR37yol1f+S/sr/sXDnZtbpOZsrvTD8pP/oQjT/Zyz84vJC/cPNfsY0bA+8b
n7n+G9eNr+IX9fydi5A+mXOYP3qfJaSz8hVuu9POxbzzQmYj6kxf+kR588Bn
yyq+fecf3Lyvo4t++sbJ5qL8R3Cv5088zJydNC/xVChny1I/H+Lc82M337L+
e0d15JWAz4wNvixr2L4CU8El5nJzZ6nv/nJdmZ/hiRme9snZ/L77DKD79EvZ
WA1+//zpc/7BnddvcqN95o6Jgs3KywyXxb2gPZiKPokvyxocDo9vnO/EYojK
u6FP5XSGoSYO+mN3HmSyMT6Kb534KDLmf+z8nh1PTrjQN69yPOphLWOrD/af
4tvDbOVc1I75u+L9j99NHbJazJl9IRsaWbKO4kuPF6M4LmPcN35xuWSrfGfF
k2Qf6Iw5vRA/D/lrj/MO1pU2Pdu4lE/Z3MN+9hO4h4zrO33g+cbPuMNgnf1X
Fw4gW9a69U8G6Em6g171f/LGFhpuoc9hnjgQsvMUcx6mKg5KO7618uXF617M
+cXRcnBQ+Mr1YqX2c9UJj3Uv/0L3kkN9tnbgPdjP+9GB459+29PyKZB92Mk6
d10d5WstHrzkfXyThqm6rqydckP7Di2eXx2/vS870nD9vn70QN991/tf3Dtf
vX3BZJu8keFsWdYXbO86mXLd3NPt8GAyOO1//8ytNWUP9z3sWyl+YGNWLMRw
bA4nFT3BD0jGyDd7UXlqKhdblZ0qfqqNka7cDqeO9y5e3XvhQLDm1Y+HoThz
927sVOx6fchfWTwYvakP+QS7N173vkHsjb5B6B3yUZwbHVicFd3eOWX7wsVb
d+qEu4od6qxfcVad+9uYqtw3m/+q+CtrpPpkOKwVptoYKV/hrlPs1raJhbs8
t7issJPrYbnNCR+PR+1UhxxtTvj4RcslHY/WxlrV6Xp+w42p4h2FcYtpfxlX
QzFXm/8q/2BcWJuTAY7qjGGYKpvJ5h4v1to67+wJXEGO1CED2UnMC71sTcA2
4x/+3I2vyHL4qrNm205VHuf8g75rlemlMBUd6HpYixwqazP+q/CV+IThhvz8
sXt41+xX7A/7/KD3L77ddc9Xp9hv7975GmtdOfvVjrkqR/bGUdZ6OYk6p7mv
b9+fOdr+xOLns2Upl99Z2fjHQ0ynZr+CYcJRytoe29BzfJUtK/7Y8JW57r1g
xbAWXe3+4V/4T/e+4oyhdW7fUTbW5J79yvjCErCQsRyO5onFgh2GK3p4riaX
yCdfONPXmcE4Pyd/yPCFKuvv5GF975G9eNTN/3BD/cunw6H1+sH/wwH/1YO3
ycWVZ/hp3MneIT5L825elK8cdEfmrXn4/LLxH1vWxW1z70d0L71KVw8n428f
fe7ZvluzO9nLyrvDttP59s3JkP3HmPn+NU9kHR67sM/BP9rUDpuDNn1H+D3z
8nd3zPy15k9utfJ37BjdOKj1X7nnkr/y0noX7eQfufI63DnU4o6wRoxz8c9x
LtKpvRc9bfyMtzklO7BHmMSahwfYbOwB/Fx0EN0R90Lc6daYv5Xpwc4DxgVK
l9Ib9gllz6a76VLjpP3yGNABZEkb/q6d4qyKC9PPyVny35x29CWblf5rR7yE
e60XOi0OdnovXlDlcgIqd06QnrTOw1fqV1ZHfTrQ+p94qF+9c+hYs/FldRZv
OJ3/1SUT3ztroXwc15nDE/sBH5H59gzzS046f2Gtdsbw4oU9a8c6mpyL3zo2
K33RFl0QZ6M9Ly44e4H9ttyv26Zavr/inWD44qziAh2e/9+9/XHFR+UTJHPh
rmxTnfsLX9Gn5Y0qp1J2Le8Wh5X1ls8x+xU5JuPFz2e/yoe4bcL56POzW2f0
P/mf82BPLhvD945+02/jaI6HM3ti3ekO81B8+KPNh6wWo158e3an8NLmYXjZ
2UD7aBhp4yV931wN1S+nYXwpXd9nCWtnl3cOaPs4rLO5s4rFysb1GA9f/FXj
UO6eHZdVPsGNu+KB3/7Bx/ODxbrbI+Jv3/iqsrWgPL6p5zl04r8qvv3RfpId
plhu+OrKY3qwh7XumrVJ59DR1kE5U6w1dumZh9dPLNaObze/ZGljLWV6CXYq
vj37FV1VOX9i8e07v/OsoV98OjxGnzv7b/7B4tU3/5V3yD84Z/DefNehc6xd
9/v+s1bifNu2qTBSuDS+1uKyshPuPM6b09UetePYzdHLfIWdGQxTZYeETybH
4EcPbsknyLfiGhnIlkUGNqc9fFWMVrH36nlu2LJvYesQvrLGyIK4LHuVvcl5
H1jqij869qi4arPXmQu6aeLah2OKDpv8tH90sApMVZ7ByZP26fNNqW9xkGcH
c92ayk5lDVYmk50ltI/EvRAeIx/2nOGKGN4repusT/674WHOtm/cr7PlT8Jt
9HNrj543fxPvOP61sJZ9ytpQzhdjDymGVfwSrHTlSjzPtL7Jz/j3PnGwkHbi
FDVG8RB6TlhOf4pxt97GBvv6+bawTnxHGMN4quPe0bdsU8XoarOY4WLss1/j
FwoL2otbC9f3/3leMVzlmDPu5pTetbbHh/6DMw9kmA6kb+wFfmuD76/8vLAT
3LHz/T3mjim2ytqNy90eQ2fS+Z5Bl1rzlemWcJfxKm5K/6z7fIWeyw5jXP2o
b1/ofJx76TXfevko2aA6Yxhe2vhKPTrNesgGVe7C7FQX78uNr7J3Xfbv+15l
4+t5cW8aL/XVNSZ0cjltO6NkLzCOxaZeOYEPlia35KoYpOREG+bU/+355Naa
hO3IKPn1rnS2PdU4X9+0x+atznDv/NVtawrnZy/deQDzA+6ze3RENiXtFR81
PLTfvXEU2xQ9X+5y8mst0P/Wo3Xo28f6+v/ouuPIX7Mrz/clWovWrtJajIhR
WhsR0WJEaz3n/H4R44oRrUREiYjSopWIOCLmxpVLG/NHG+OKK0Zr7SojrhgR
EdH6jxYlokVrpbQSbUSUiFGilPoj7sTcvtfNa6/9fs4+364uytnnOc/3efaz
91prf/Zaa3/WmYuVL7dc+nBUeezlz3tv+VfGp/wx9/uunkk38+XqO5tcXS02
WdvYk2u6Xd0Bfd2cr1fcKj/MWYPP+nf6i+gR2T59XCfPVbgrv9aJzc68qTCM
d+Vrqv1P8Y6Gr4on3ubMh9lu86zOmobFHMvL6vxg7WKIZw588cHw1dv5ssq/
ituhWkLxh5DVyYv9h7VGTw26yVcpVhjuIvP0LV9WnKLhq3Id87Gcvpd8NeW3
24dZc8lhPADhKzJH19gZawJZ478aHo7Fu7zGLZ+VNdl3FQc8zxKWl8Wm0t38
Wvmy+m38otYldiNfWf4r9oAu+z7fu/Nfl075Xfzt499+7zpL6P3iOMaFPYq/
nf2h355VTlocobf1HK1FnQ0sL73ctnyGZy3I84zh6Uus5mCYqtiu3zb+rhfv
KyYY1oJD/Lt18swnh7uG0+s/L72eGvUvLp/YKQP8HP6NP8oaSP7VK+RHYEdh
LTowfGTDacNWTS2d4fGwPpTjV96Xfk693BcvDiuy2fob1iqfEB4Id1VPmXyV
3x5Pu++qVm886uyUMfHOuLDyd1kzjcFwaj32O9ElWMJ8VL+PfSWjsNBwoXzn
wh7abKm5b39dzkZYa/J1X1wYyfvYdt9Jh+nUxMp+tPbRcWTZ5xqH8sPDlDBS
3PHxYuVniGs6bitrPN+WvcXkv/yHhX/oSvWg49ca7oQ/v3CUsRcHiY8yTOW5
rRcwdXn6cGzrAt0lw/4Ok7BvdItu6gs7a+23bmjP2ZB/uAsvdYYOpiJ7dB6m
CqvIXQ8/sDnlGrHt7off2EwyaQ2Ar/xpDdBmt9kA61S+pjBV3AtxUrHVfusb
9IEdY5fhqPxX/POwnL/DUfnNXGcjdi3TC1Npz5nY3174ityHr/JldYZXP8JR
rou/k2l2Al8Kufdc1yeP8IPXde/wnDiyys2w9lhfzOXEHt6/8BKbYi7JWzWP
yAB7N+c3/mTJtjmnC3SYLbY/JYO+0/Nc05c5dzExVu8lF/qU38afxQTLp8pf
Ws7VWdePTue/Iudxew4Py+Crzv0VNwy/7Rz9hbXIPPvf2ci+d+cRXxyk+hOP
lj7Q1XLay6c8+RnOc4WdH9nnatb4WDviJTY/1jR2xfzTG7pqLq1js47+66vO
YDwDYeOp4/7zxZkJUxjz80wcO9k5uzMnqrheZ/3KyyL/4SvtcrGKD+78u8tP
lQ+qPPmTh6F33fKRnr6y29yts2b0Wbvw5HU/ubDyU9WH27ysnnPL4ZDPKnxl
DN0z9Umm1kb1B+nFmU9FXqwx5bRXf3DqvXztqvW8ef7W2q198oSzWd1z1n/J
l1X9u9bxW3w1/NbfXVxYxib/ku89awue8cETd4Wv8l/VLiaYv4stOvlFB6f/
cPmvvJPusvnDZ//ttadu3TAPzkad+Krzg+VfsZf0Kf7zMNWJr27jfWcdnHyA
nQcsDpgvq1o5xePMxen7Ml/xvpaXXs5V9QfjvMqXb71jB8dHMWcnfX95aNX4
60wlvDHxz8mTH/7RwVflY5BzttA+DL6y/pGLfFnspz/NrXs6o+Rb9GdzG63r
cbKxJyOD31rXh+P2OxdvW7wN1VCOz8GcWh/POKP2ro+65NP3s/PGzThotz82
1+XukgHyQEfKcTVfcQMaU/fQLzLWXjgsC4eEN/Jfldcal2P8Br7Hdc8Ka5lj
uMrapA9hOd9y5nTtXO+7uLPhLuuG/+VWla9sTdGv2sacPtGFah5YE/c6cMUK
6w+ZNg9915brB+TAeMGT1j6YmR1iz9k364LviFuvetxssjmRM8B2TF8+deVa
kA06O7WC33NfTWDrjjmjB9UKLI89/qhqylQfEGYJC8GU7meX2BbvFctjc9h3
be/U9nzvjLuy2s1n7Tb2xN6WzYWp/A5W1fYe36Md/xV8FSdVOMp+hB2jq2eM
L3/U5A7+zmrDTr5dm57kp3KP67BTNQTVBrXH8CzXYVlt17Xpluue6V3sp280
FsbTvJF9OC4OGf8Wd83Uwhu8XVy4nHAyll/X/WSKjY+Dk22xrhkT9sG8mGd2
z/6ITSnGF14qZ+msCbjrYq3rJ5dUZ12rCVj+Vbnr9DF8xRb41visyKw9Dh3f
sbjLZ5UfOz4T7VseLZgqHq3y2E/86bviOWlMfFNnKnd+wYWvzFl1Isxz5wfZ
vbPecTghPgHyCV8V23K9s2/mvzjXyQF11uDL/xMeO/mp4rwqfueezhtOrOjj
T9xzxuncU5yxGGKYLXxVntUZBwwv3eKu8tu7/9ZPdfqvynV3fzgq/96JqbTz
WXm+Z5z4Srv1Orw0eeiP8VU5Vyd/e7nurrde0718F9bO4lPhK2tK9WLIjPfe
xgfJo/2ptSj/VZiH/TFu1Rm0zp1nBm9z2rXZLt/ILpVzVS5WWMtzxn865we9
iz3PfxW+sjaxy+WM6AtMVXxQTkvxQXsNbfbxzG8vF93eNM7g0x8Ydj1xbLHa
zsSxid0f30I+rtt8reY0P1j8Y8XdXJ+88OHvZTPIed9ePSPPhEOGU/aba0yG
7/jFpeOep80Gw1Pnu27z5MUByZ91LV4sclHeuOezIcWgPX/HzFZ7cxZf515d
L34aV0N+J/LPfsUdGkfW7N2H89O6aDzjDIcL2j/DyfpAh+AWc7HrH6/9LNnk
Cypn1/ViBNXsi5/K2l9NjbCvHIzOLrHhxjFedL8t170ayp0hKre8+n3F6dzv
vfoTvjIm5W+YM3bBN3oPm+U7Zm+y9idLBnbu3cNqAfrdjvksuaaDu17OA+Ni
vp3Vsnbs3zxsXxHfO3zQOXE2Nr72zs4Mr8/YMfYUJqkWDJ8Pu2p+rOnabCJ5
YOfpsD2L+SBLrtM3eAXWYhNcL7eKTRJ3iBeUra6WjT54J4xUzUG/d93aXp7V
mSvl39lxz2Rv6BI7pj/Gj21hI/SVL9cz9J9Ni/OKn8o3DE783HVWke3KT1W8
78RafpP/KkxlnxPWqs03BVP5fniJnniWM7zafB7aYS11Qq2vruNRmfoEi8tw
PW/vNZfNrIZdvC7sJL0Iq5RHFMYuvyiZiW+W3Bq7sJbvJpd0yNiy4eYDlmP7
53z9K8unFE+IPQ59Lt8pTvXqA8YFGu969ZdP7oUwVTHBYn9x0JFrezZ9jjvU
M+nSmcf+djUKT58Y+wgThs18M5sQviqnnRywgfSHbNNh42RO6JB+sYflY7LP
sID7Tl70M6/75MZ8O6xVLZjOxIW1uh5/ZvecdWHigIrzPK7OcpnoShimuOHJ
IxoeO2N/YbnOCd7yX53tW56rYoL5qW5jf3EyuK5Nh7U7Gxim0n/XOz+ofcs7
Wjsu3M4Jkn3t1jW6Wiwmv1bt1vR8X5Ov874rDkXn87HE9VS943zIk4/zf+za
ZM/e77j4skts/BkfnJrhw9kbviqn/cRUtz6rctq7Xs5VXA3aZI9Msnsz3q9c
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
I6yDu97gei95ClMZK3PdfFnzrUlsF2xj3ukezJPNp/vwlD2nNrtDn+Rc0Qd4
oxz18qziE/V3cgQXkRPrEz2vlg39o9cwiWfBA7DMPu+71pfO/rMz+mBNj7cZ
9sv+s0tsdvjQ79jucJRnif3p2+SMvrD64rna5VyxY/EesFHlw58xQfYq3vj4
EzrTV35+Pqv8V3SGbQhfnXnsrvNl0YczJuhZ8QDnv6Ln1vDaMDKsNfUSPnDx
NrDF5qicPmMcL9acd/vNu2q3kOf8veS/uBi/TRxT7S+MYzgFNiAL/tdfemv8
yWT61zkRz5m98UvX+Tu6UN2p8JV9SjwS8Z/k++38Y+d8ta0T7m+PU2yxGP0Z
H6y+9W3dnPis8qFVW8H1vr06s/nbjb312vpVPUH/G2f6vLlVLr+QsapWIDtZ
XZv4qYrBxbGg3bk8mCFeBXa1mJo+5Ku85TbvHKJ7ipfVzn8VhrEWhLvIUf4u
MtuZO3LqT7aC/M556bfWdfe4bhz8tmeG68J+9Y2e9l0nNgsjxVsVZ/vUGHiM
5bSL/YW7+hbj6V3hK98VvvLvbGDreOt7mCq/ija9zwfSmcE5t//+K/YUB2b5
Rfmvdi2rhfk3p8zdnDf/4FXzDs6kD+w8uwqP+zvMYwzIUL7o6qR3HjDfFNsa
vspnpV2tHO1y2iePeXK3PHPk9TNrfLxbH8js1AP90PLP0IPq3ZB/GBm+st6R
U+vL5Ha/58Jgw3M4/iv2PUwFc+a/slacfqrGPOwU1q3N7pYjF1468VUxxJ5T
rvjJu+5+drN2MT7YqO/Vnprz/+f2h/zPl/8/vHT+1nXyr4+1za17yLxrU79h
uKRgHTK8be6SSXawOKPfeq7f5h+ThzwcDH+92sO1/+OlF5sffK0/7JI1zziw
ZdWTNT+wDZmoBqv3s73mlO1lY8mh74YryC5ZyfbHQw5TDm546WH+Gr+t/gFf
Fh3QjpMnbFb8MvxWjWbvjyN0aiUMb09nyeGrOLKsR8UK2XzjFheo/utrtQiL
IRZvjlOrvC/vYl88jx7F+Ule3cc3RW/12fPHb/f0ws/bf3A/3BOvr/navD/L
/seND6uEqegX/fEb/qhyTbXdw3Zbr+kGP1WYig45exonOfmBQfwPM8OXnktW
4Rm6CFORCf8eR7o1uvOAcVixk1OL65PLDpCZ/Oe1XXePNtzl22Gt8FhnYD03
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
bcH8YCenaDUKy6W3B4mvjB0Ps4Xl4pWyjoS1rDUn1sqvdfqswlfhomKF+a+0
T3zlunZ+sLjrybt7i0tmB9xTOzyW38y18sH8rhhiZyxgGGMch1i+r/Ko41Mq
j731Pe6F8qXjG69e3i1P+Fk7L64ntrf6v9XH6fnlKpd/xQ4PT8DfrTyHcs7h
K3Zu59teHKHlWIavTk6G/FfsTFir/Pb4ssjbyX/lXdaFcuzL2Q5fxUkeP0Px
Qf4B37XPeK97wleDY6ZOlucYkzOH7Tw7kJ+qNjuUj6uzJCcePmO7tc98+OoM
xiN61sGJe7k4oHZ4spiga9pnfju9Dl/Ri/je6Q4bYDw7Rz/+x08vXTGexofM
tD+FAdjYamGTFXIep7i1gv3iHyBXcBOd9N44QvMxkh/X43gnI+aiesTsm/vM
fbX2yJOxGr7AP72wRFw95peuwy7DOf3TlfvNVzM5ui8tfqdya6tlXO4T3YO9
jRsbKdZgvLK9nh/3YHXT2suXo1Uts55/npPy/eTQ3MyZihcfkDnvqja0/YZn
60vnmyYv/a0Vl4yPwxrhOfrEt2BczFs13PKBs/mbQ/zKi2MbNx/Ymid6ZR2s
LkZ1augK/AM3sd2dd+6sE9scBvMcmEHbOk8P4C4yQfa1ybfrfutPuI38d/6X
XBkHtqmzIWQr7G0eytMjA3xi5tjY6H+xBj6r/F3wle8oDlj9QRjj9EfBRMX+
9CMehjO/nS3SZovcY20769Fowy+TSzq+rOKGxmHXMl3f7Lp72ILbe+ArY6hd
DBEurTaod4S12Pj8VJ6rfeZrdY/fDofvu+87L2mu/fvk4Q63STEyeIY8V3M5
7lkylC8rTgP3m4d4Tubc4HeXvrLP5I999T3shGeTy/g/41ony3QEXrI20U1t
tq/8K3a72Lp76Ekcd8UNy4HMNxX/w4kJ46/zvfmm6FTcMTAVXU5/9Y0MhQf5
AtnPfCnsk29it6cu7o/Xuh+31S3verrWPqV2fAinbyqug1vOhLBWbdfjKIi3
6szjqh0HQrjrrPUcTrv1ZRXTzEdUm48oPgdrUPldZLAcKjJWLM+Y5Gs644zG
0J9hs/K7/Na108d14iv/z7nZn1/xR233w2/mxz2eOfvbN9YaGs/NiY3DSLf5
6vlSyq0KC5Xrnv8k3NX6Hid5uOufwlfxNZHn8BV7Z10m62QTvpq81x9f+Vfx
M5jH4n3027gVB5zcss9fPiu2xZ7x5MIqXyt8xWZOPuDUd5484JcufOX/s56g
tcS6qf+ewUfBppznB+Nvn1yi37py3fPvxXt/8llpx+ka1nLPibtu7z/PIcYp
mo+rOkTmLi50fSAzxQfPHCprZTjqxFSu+xOGIf9nTns51MZZ/4yHtY9+GVt/
Fz819+Ov+sDDzpSKc7WHhW3YVWNojNmQztf7Pmu0+fXc/FpxGlczKJxmXsgQ
3OKb28PagxYLM9+T8/XeOD5XzlW5E+wqe0+O9MV66br9rLGaeNnTi2OzHKf4
qeK5KscpHCVmYW68F7ac2ujfunJ9Ow/onux2tdWqs9PZJX2gz7A9218+fHv2
/GbuIZMwR36twdJ/fX2LfvPXuc9zygHmw+isMTnsLAz7s/Ndlv8HFoIf6A5M
EaYyd3EvwELxJ9BH1+l+NrD9teewA2Rpx5cWNvB3z2cfh6P6E+u9Yr/+fc/B
3cYQV82meCzi3zCWpw7y9ZRnrV/VHfBudmw4xB4sXRD/qeZ4384WWOfYkziy
tKvdfPqpbjFY19k3v/MceImsGR9tuHQ4/j6/8rLYleo4G99q6MSXxadXHpcx
O+OM+lTulucW4zMecWT5vZwrts/74CvXy/vy7/rj2/XX2sMm7JzypYPVaR2f
y8TRRvb+5OFpB8hbXLvwVXVk4iiAhfy7saCfMFFnS/nGyBR9IJ/VX579wdRl
pi/mSUyfrrEJMFu8oDBYPiv4ap/nuCu39qzXnF7HX1qdzeGFGXwVZ915PXzV
eZZikcMh+Mzaq1pv2LSz3k25VXGHsqXW7jBAHOZ0J97OeAzs/2ED7ZMns/bJ
nxk3VDiqc9znWcL8TsXF4ky4jSee+V350NLr8rWs4+U7lctEfshS3Fme3z36
UO56XFW1O7dYzrm1rLrV2p1D0R6unF+54o/umbMYv1j4yj4jv1b+rnDX7FF/
vu6JG0TbdX1jj8yde9hGc1WtorDTuabn1zq5Lk8/ydvVxQtfVYuw/Pb42+l2
+CSOJtfDV3SOLdW38JVxIO/sT/VxyrnKN9W5szCV72Vn2JjuofPGJDxWe/z6
ry//1dQ7+uHFccpWxD9ABzZH8xP57fTRMzo/qC/uiZ+hs8j2ip0fjHO1mmvl
peezOvOyzjra+axu+UXDVM2RuY4Hnk2tHU97dW2KFZK3eKvCWmGq8q/gqHK6
ybY/2Ri6Fk+CvTyZZyvoNT3QJvswTLVdqsnl2fAJu2pPFqeTfsIHnmUu/N68
01N2kJywrXCZ76UzciTMC92KFzRfvXY+HLJEpryHbPg2GKz6T+ynZ9ITz/de
NoPdnJogryzc4vu9T44W/37nB+Mq5Kfi87H/1R99njOH71njb00gP36nn+y8
OYqH4ayVo9++wX6/2mR8a2x+fAu+K/52z66f8B2ZrqbzYM6poaMf1jvzMjHY
qbNMl8/6Gp0psKbpr3+jp/F/wlH2O/oC/9Bz+MHchQFcN6/2WOUns3ud5TGH
1oviPuVc0QPvslck47ANvDBcXB+5nxrs3192ngxau7y3GIF2Pn+Yrb2n9/oO
cjexsm+utbEaWObCvrmzb9XpNj729/GTh8HMj7WgcePHs754BtvFXpUDf+a6
i6dMXdXJ12JXOu+cXytOsPLJw1F8S8bTPTCP69rlrYWv8mWFtardbJz5rKzf
5uzWH+Xf9d+aOLy0P1o2p3oW3teeUZu+GDf20F6GXFVHzBgZe7JdLUk+q87+
FRP33OQ/PzDZZJvDX8me74IBzSdb4/nkfGqqPuY8MR/VCgxr0f8zt6p7ymOH
wdorFe+zHmjrW88vPlhNw2KOnUeOH96+tLzKfa7s4u72m844D6fjG8sGDu/j
61d7ny2+8n/4gcMwYuja5okedX6kmsVxOoVV/ql2uMtzwlflb+crO31QYaHO
68XB7p64pzqTeMYEO29Y3vuJr2qX7+RdvoW+14ezbZ3qnK92dXCqq8W+WNfi
V8kPFtbyzomvTGxR36yP+bXgqOyJuQhTaZuveNphBrJIh9p/xVcZ73dr9y2+
Inf5SdrD5tc6a+TNfnw4LTtLGL6iD9Xvq05x/FfWbv/Hf8We88kPL8/wM8x5
kic5QsNXZK8cnvxUtfNfGaNbX5Z1gDzf5rfP/v+ltV/Yvt3LN+Jb2Fg2RPuW
/8o97U2shye+6lzA6b8ynuMbepKL7Jb/6uQRzccYF1l+yDiyTnxVnJdNhd88
J470s65NccPbmoPlVrERU8v4E2vMyBBbZ06MmzWRv2TOjH3q4tYg4/az+efL
YZhcoOGo2f6ztffUZ+tkPt7xmf3NylHPZzj+y8n5oT/mwjfqC6yinc8KpqBv
vpG+l3+ezw5uKb/KuMXfJ+7nG+ccz+fWc/TJuJIf/eDzIdP6UU771B/415uv
9XsXr4K1o1xWfYOFNjfDXWen2hfHx1qtmeq4xc0Il1qn8muRG8/x/vZRrk0d
t+9d2PU8b2gOnA3Uj8kb/fJaB9hqdo9+2d+51zPYbTJt/eW7oA9sFl8lHdSO
V2HXhrryqO2vyynqzE7xC7jCfJZnRa49x9rp72xyMQsy2fnWzjtYx2Cnkccf
Lf2ds8VvXPW7i/2Vx1K+Abusn3PO4fX1zOFUe3ntQ8Pd8Ednh/nXyCFZMU7G
09hVJ4sN9d0zfy8tTt3WRO+11vgdTBVPKftW/Wj+KLLu32Ck6i2yV3GChbX8
W/WXtd0DX3WdXY5Ty77O3NX2Dja2HGZjuzmbrnpeZGb7wpbc2b+Wo+0dvpXM
siHDyf7K+vZqgxpD95BL3w3DVHeGvld/s/i4sY7jPV50Nmu4aV9YtoWdgRPJ
mLWSjJMnYxp3b9xTnRks54pumrvwVTlX5r/4YOcH/TYerbit4lWIs/Tt+OHL
n++Mieef8X3zrZ/Vu2ldNm7VaC6/lKzaW3SdPLOndB2+MqbaZLsYX/iqdn6n
+MndX42YE1/lvwrP3HJsnrWMe05YqxzvsFb1aKrflz+t+8Nv2jsH7fKFxucQ
vgpHhbW6Hm4MX8UL0Xlkbd/lWbBW8X1relgrH5ffGudy7Nm9fFxku3giTKW/
8Jh9SbbWGk2GtOkc2WKDiuXlSz8xVfk/cY3SqbNd3Kp1v7OE4YeJ3/yL5cMZ
XshnFg6ZGriP8+ThKzrh/+o7k1/+K9904qtwVNzs8BJM47u0T872uLBc71yh
PRq9zMcVl7j4oHGes6+fXjFu+xI23rfqG3xYPtWZ3+4ZfAW+nS1ih/PXsR/G
VswiTFWMNR9UNvzkFjvzrM7aN+d5z7he4xQ9+UUb/+53vXOF+kZm6H3+omoo
k6t4G2Cb4dz6i7Xm0m/jUz01Y26sjKV/a+6sTe3fjTkbS8+Ms2+BxYyv/sRn
OTXMJyfUmsoeuT8eBjbMPBt/Y0Ku23uedfraM5ozNtk3erf+wkX+bH/KXhZH
c418WRPop+9n542La+VLuAfepHflqXrHlt917slYwFdxjti3JutioGG1+BPY
yHnfU/fZ4fQQFzqcZ82zx6dLnstX5jlxQVh7ijNam+AI3zXcZX+zfFbe4bm/
fM8D/fP98VdXd8O4koHB9d++8jH8H7+6eYVnyL0+kwFrehyhxZtcJ2fsQfXj
yrmiP/6HzdiCXft9YSp60Pkp8kFOrF3Glp2M94N8lkMYH0icHr67evTVLLAP
gn/oif6zDWyL3561LDufW5y9OgX5GtnV8iH1jYyQN7LtXfpD5osL+XZzMPWB
hvOB/NCRckjy/ZLZfPVktVgh/BmO8nc2zRoMB4Wjyr8qXys8xu6WD2Y/aZw7
U2CtGez86ur/zilctiX+WuPgm8hdsdRyReJLtN+vJqm9pD2B7zfn5NCY+x5y
WN3zMEx5huW91w6r0BtjRman1ufHlyz5RvPiWf7dt+UriiOuc3xhHvoejuIT
0p9q32TPO1d4+ql88+Yduc6bVNcmfq3b63FwVb/B9xoja4TxS/bYi12Pa5+1
+umSMXZ06nF9ZMdb3rzwkr93NqR2Pij3hJ1qwz/2Dp3x7PwsnXc9nFNOVz6r
4ne3tYzDWnGth8HCaW8Xc+y37vct1n3vKidcO84E73X/GUOMayt++PKy4Kv4
6sNd+dPiHc2v5TfFFvNlpYNsT+1qi1fndM4jPbW54aYevTnKf0UXtY15+Mp3
tabTn2JVcTIUqzrjVmcedTghXwr5LefKul9dY2uC39tz0BHvOPPhz/wra/RZ
H6eagNmc008Vn9Xs5958AkflpzJfteMUPc8Vxt/Of0X/7SXsf12zVsdpGb7K
/2ZtYKt9V/tZ3wXT+caJw/3W8mUZh/CVceu8wMnBfnIs1A4Xma9iqdUNDDt1
TtP1znKGu9xTHcDaYeDOFcZfym7RZevC5s5b81I+gPVocipfWZhq1oefrvnq
XKo2mTJ/9uD04uSGbX0xzp5VTUkyzCazbeyZuYnHb9faumpP5NvZ+RsXfoBV
2L/O5ZF5+3I2ztoUH6A1cfP0rb0sfXC/b6Rb5Ne/G2v5Ia2XbL75zcflu9jt
zujFw+zf3MO3tmuvXfkk5hVeKl8cHjNfdDW/k3H3ffq248HLf9WZbvgyvmjv
iM/BM+MRhbV2fPqh/czkyf1gxUCnPuD43MRY4xmtFrZvKreKrtnjkCfYiQzE
W0gGrNvDb/KHK960azWs8/7ky/3Vy2Pn7Tc8B6bKx2Kt5zN1j/eUR0ZH6Zdv
jDdv7Mu7r/Xau8V6jO3msFljom1ejAk9tsb5/T7DsNrssfXUeA4v94vr+uS2
fWWNOTklhyNv//LyM1sTJ2b+g7U2kVljZ+0YHpS/vNq+xbd3D7/u1Kt//cJa
ZLX6XOSRXytexOzVcNM8WmNk3OwTy2kPa8XJwBYb63Ld2d14t9gt/dEH/8/5
gG8u3THO7BmMZI0yPvBJOmis6LbxsYc0bmSYfR8e3dcXntnn4JfuNIbmiD3g
vzKeu27eun9qUD3/sNoY5brnR6KTdESc3bjH+7FlYdlyMjlcIP+pON7FyRDm
KReL/NAP3y/+2znB+NjLm0q/iv1Vtz3+0vLbz3OF5a6Tz3zj7qdLZLUcj11P
eslS+VSdDaT7dLBYc/xs5Vzlp4KpigOePqt8XO4nn2GVEyOFtXqm+9nAsNZZ
v9jcdg5l+/X/UU2Z/FenH+zEVOV0FWf0zHgP4vDUT/fE+ZlfK0x1xg1hpGpM
57M6fVxxcFXbOgzWnsKfrhv/eErLh/e/6/nY7R386b58Wf6N71Hfw1rlZVmv
q48RV0C5QOXnnBjAfujMda/tHjJVfZw4e+PSzIfDVlWbj2zPfu/9y9/rfca8
82JscrVE8l/5+5nfDhex82znianKs6rNruTXcv3kZzAO8V+Vf2XM2Fc2v/yr
8o70zbfQufgZ4ryybyofwzda01w/6ztXi5Aun+MWp2j+pWpes3vhKPvH2uEo
49x+2XU2tTF33Vx4L/ta3V3vLb7pmdZdds74wyDGlP/B2kem6S8bxGbATvRv
ciKeX+PKFmibI88xX3PW6idX3RBzRD6rU3PGUvksjO3eL151xCbu9tRa49hl
/pY4oNhYGIB+uJeO0VUxLrbIfOqvOaHTnWHKlsLt5Vb5Hd0wNmTDN8eZueti
XjnncSOQRXbSNf1mk+Morx4Nu2C+jE/46uRRrEY4/BNuZJONSZiwfFB9M77x
a8UrZ3ziYfd8Y9U5RGPlWfGakgtjaO7JOvzv3+NsoS/FAYf7/pML7xTjo1/j
2/3UusZOdYaLvJv3OfP5gXW9djnqZJ/8lDtExvin6AcZMH7VQbSu+ZYdu1vr
++xXf/Cwc5HVdNtnUNZaPDlm31pt8wKLes7UInn0MN78cGlclNrVg6vusDki
T7Pn+8DCXbNeP1q4ojqt5pZ/lVzDHWI04ShrVn4U95gn9xnDyV/70cqNpzfD
GfGZi3sHviKz7H/4ijzAV/Q5fMVe0Gk5VOaPTS1fPV4s1+i2dco3bF/mVUdj
Y70LJ4Sd9JH81DZuxnP4dWds2cqwfc+hL+ao9s4jeNg8it2X6+5d5iW57ZxL
ue7xebIHdJa/2r93Ts3/1bwjk+x6e7SNV5aebSyzdMd4l+ueT6k6g+TN2tae
hWycOOqs0RzXlm+Mm91vfYt8gGw6HfccOkzvxg94t9acid1/eNnI/MZhKhjA
2LlePeIwVfnhcFT5UWe8r3O4nh8uilf8rFkcZjtx1Im7wma1Pd891ovwT3Wj
ivf13vxU4Sv97Hq5B9Wm0Y7vvbMSZ957mLC4YflX1Uk8+eGr6ROmcl2bb0q7
vPf8VPB5tXj4qTyjc4Inx6m2fysXS9sa7Zv8m7b5ypdVrPDMj6KTZ1569W7Y
x9pdt45on7UF6US8mtVxzp9D9vh5yLY9wq5nv+4ph9z/2Z/q40w+3ctX/UH6
Uc3BM/Z3+rKs72Gt7UtY18Na3e85wyf94+VLmfOjgx8mt/f7a+7YfzggrFic
iM+EHrF9sMHE595znZ1hB/vGuFWH3/O9V/0g9jFcWoxvzuP9y3U9f5Q5CkfV
Zmv7bfxj1SRq/O1vyy1nj63x1tDOy+ujM9dkyzeVz+YeenrW3c6nZ3xGF/9u
7bvJJ/tK941ldd5dM/5w7vCcvbxsGpupn+aSfWP32MTyP/3/Szn8V9lYY+h3
5Ee/YLTZRz+9YgGzb/jSleNdTqt73TO+n6fub3OrvB8GY0/LRfY8WGLHDBau
Gx71t666gea9XH+4yPVZg967vsN40I+pwfrdZdtnjoYjS1+rCZKvST5V/Iqe
PzwJv7H6Fk9N+VTVLpxzbX91+az0EyaEByan8pmH8a+1j7ZHnv3Ef1t75OoZ
2TOyh3E9kSfvJyf+ZE86D2is+K/yjcAJ9nvky3XPtQ/ThkXII5lhp+i9vZhx
8l7jb3z0f/N3LjxIdvIjtRbHAwtfxXdfDg/ZClvS28YWpio+S+fpaTzJ5sec
0zXyXJ5KeZWDaT+0xnM4cZ+5cIVx1vatza0Y+s4vXLrj9/CVfCGyol/GUJ9m
HX1+6Uh7k+rH2Utm/8tzMOawU3VzOtO3bcPFpeAeumyc2Xzv9//OJ11jFcds
Z1TLcdKX+KaMi+/uPKY/2VW60dk631NOoO/2TGMOq5jTOBaKnQ331Mxd85I/
Nsx88pOEeczF8KjMGZC4K9nd1l9rw3A7/btlr8y1frYnKs+q87bF59gHurJj
cVcdwOLvJw9DNZrT01v+q3iuigkW9zTOct0e17P6yM4dfvPCV/SRfgyX9usX
r3i+qc7oaYdV8hHdxu9godPvZM7yO+16kGsM3w5fdY/74yfvbNGZl1W9mJ6f
v+vEVOWud4al3/auavnlp6L/3ntbH7DfVns6/1W1p8+4Xpzw5bdXk9o4G8+T
nyH+qziyphbUnB8sj127OKA2fQ9H0a98Vuyc67XJve9i++JYiFe8ei7l9oTB
2JF4MuMkD1PFvUDv4BrrF50VD7AXJMN0gp+H7MEq5WIZE/bL3sSed85c/dVV
j569YnPImH63p8tPdctzdcYEx7f96Do/mC8rvqzOD+af9674r4Y/cWrtDcfo
b114yTpkP2W8fGN5re7xXb7dWMX3fua3xw8Wh1gxvjOud7a7p+unz6p7PDM/
ofmaenFrjV1jzraQw+wtTAWLjy/vS2vPS76LHdjn0p3NR7zGZGT/5Qv3Tt7B
89sGvLr65vush3SHrWA39ME8e4450J9y6Ks7NvVonn8YV6B10PizJdbhOWv2
8sWH49/iWj/zuvcYrWfCKGx4Z8HMId2ju+7zTPM4uU3vXJjamuKbwyTkfnjk
h1M6XsHJIfzmen45Op3po89+79vZ9nLd43L3zDOnd3NDXJyinRmMjz38qQ/k
bWI7n1pjkA9teP6/fdW1oYe4sDxn+AOG94k8+05rHT9n9WvomrWbfwkuihfU
vJPjODe04e/OA8JR8BX7NTU9nr/yr1yHs7XJ8ODu7y+cbH5nj/GbV07Uxu8P
q4kShtnc+mt82Mv8xr4jTmyyWaxn/IQvLX8de+H55AtGhZ2MlX7B6Z2V83f7
Xf+zG+zf8AN9eY39xJVeWmsrO1QdcPe156Iv4ShrRDls/Ffm2HzCV9bmzjlW
nzdfFgxjrxenYvsdfaGzYVec6tZgY61tPTN/1qOp5/OTJX8wD7t8coN0lo0s
kQkyY/zpQFybdJZ8tff3zbB0mE1fm69qmtOX5su7iic2RzBVZ+7YiHxf4ZnO
xpp3dtM77DXoku+pfgEZhoVhC99rTde/uPWM9ebW3DxbczawMyxxW4W7jMlZ
v2b2W19Zfav2TT6r7qnmDrtcfer469on+nb9L9/Gs1zT5/Z59Gbz2l+cV3Fb
FRcrz6qzgWEYOKpcqbNNDv02rBKm8sx8RNXLgwnCS/mjwlT5uPrtiZFcD4N1
3buq4xx+C8vVh+KA5Z/kH6uf3hvWqjZN+A0ujbezOtHhq7Bosb843vXhNke9
s4Ge6Xpc7uxZnPkwUrlVJ17SNj+us2nmy7eY3+Fr/vlai8u/OuvdsIPhq3xZ
Ya0wmOvFtthaMhWXZlgiDhm6yjaUcwVfkbd57vh23JOPyBoFX9FvNo3Npyf+
Hj+w7wxHVWcwP9WZW1V8MB+X/uXLct34V2fH+PDPm4f4GeJvj0szfBX//Pkt
YiRsPj31nrClsco3WC2hM5+qvKnBaP/pOiNwngcMg5WL1blO1098lV/Lc9xv
jqxB1rJsiLmoHoVYhn6z29Uxhy2tBe6jM9ZTukxGzQv5sS5Ua6wzg+TNeJFV
9sz6Ye8Af7HR/q1zzcUCDrz4sLWVfWUL2YZiAu0Byc/4Z15Z/Anuj+dTn9hP
74bZPN8Ytjc3f2yxtQSeKkfLN7jOvk/+9uJHXvZ+1/C5atx3ZjxMGC6KMzAf
VFwJdIENjh/et5Q3FR4rDhLu8v1krrjDeQa8s4Sw+/adPYyvNmxWbjD8DzMZ
E+9kE2befrL8osPV8ZfLbtMFe2u4CLaCxciG8ageH/13j3a18NzPZ8ImFRMk
1/YpMAoZzPdurtgKuAkOOfnxOr/ve+m278rvFL7aZ3ruhqPqvWs8jQ1byxfh
7+yx35kT+iw3z3W/nVyzr118lcOD8fsrvsTm2WdZs+k6bMN2i+EYB/jLuBgn
8Vi/hSNH5765bHL+fOMR5wk7Xy0j68vM90tLX/Y5tOWrpyPVqmCT9dFesn13
tsv4406332YD/p//8b+u+D2d02fzQp/bL+sPnQ5zspVsFBsSjwE9IqvVhdkc
GUvWNn/96rP+ez85sA62Zy/vtFrJ+abGB/unV0yWbHuuthhueU35G08OhLBf
mFmf4eHJ8/7Bylc0tvpHRq315lH/fH/4anDE8IBuru31nM19sMZh4shPLdt4
+qbS08c4/5XrzGAY+6zRrM/ZgeKD7L/xNAbDdzy1mOkC/fBt1mY6Uk47ucuH
ecYE47CKm/02Xz0f18lVle/oxCeuV3vdb+mG/lTPJR+X68ap+4sbhsfCYMX7
TuzUPfmsuidfWe3y20//ld9qV/tPm17Gi27ew1TVgO5McfV0tON1zzdVvC/u
BX6F4np0Wd+L653nAav/qE039Zntah7ZDm3Xtd3fc+IjPXnU818N59H7LjwQ
F195VuVl8Vnlk4GXqiUH4xSfskdkA61N1rb4ZOKgs26e8UHruHU7/1X87Wf+
VTlUZ23B/FdsYZgKHpraQo9W2/e63vnB8rg6P2jeZz/56fUnPa3+i77xC1kP
6TidLtYJj7C9vqWcK/q1eZDvxs4+5gTr/FFn9/yunKiwlvacuXzxqt08Z/l+
96rtaE3LD+RdnQHM7nn37EVnn8iWZ0P0YXKp37FzGb667A3ZjsMExyD9t7bE
t+P7wqXk0liWW9T+tNrxYZJ8U30/nOA38Bxflrmmo+VHmP/yxstp9wz4AHb1
775FvMDcxCXlOb6BjLF/xezYe/6X4Vx/z+Ya/w8rZsgu0ykytDHisqPlX8Up
zZZagzqv7ffex5aWM+d++hCflbnwLt9MH3ct66u+hrWmNUWuS/w+Zz5t+Koc
YHuS4auePb75r4aO+YdXzW8+ujidtM2JNdLYdW7ammT+y1XwP7tHpumGmFfn
++gF3MF+nJjqPPdHl1sX7CmMDTzINpZH7R7f01m8kffvXGfTjCWbZc3yjexo
Y0IG/fusae9duIXc0WGyFK4gD56bX4u+sBneydeh//pkPYGv9J9tJudst/WQ
zfGOnTe6bJR3sc/ZQHvDsxZn8m5diIeJDXHN/MNs7UHYus4VGsPycORClIvL
Xhn7yR/9t4vziw+Lz3nyvX7/Pp+G+8+6WuK15t/YkIfJHfvO3dTm/eO17k9N
leHlMM7G0HfS8+qk87nRc2Nhbe3sORmhL95nbSHb3rH92msvsPMtVnvOn0zu
VjVAwx9xuecL0j/2KR9U8UQ2Ma5IukU+9S2e1vKn2C/PLt5vbfIc6wfbSE7i
V+9sYDnq8Vy9XZ7VicfYgZHJb/+jvPfiGvRuYgYf3mvUm8vfYk7YMzoUVxId
rO7w2/FTxRean+r0cd3yU93iH++NO6saeae/qOthpH4bvjox1a1fqxyq/Ff5
zcpdrw/nb8l67wpr9S56Of6Pn114yXPs2av1zIa4Xo3C6g8W+ztr3MRh5Vs7
R1CML44F19mWsJP1dOcRLjsW/5i2eRsut9+74on62XnD6pwal3jaw1GdKcvf
Uv3BfCnVdmFTxAfZ8vLYiw8O3/ULT9SOIW8wOFvnWdWRsSZU3yR8BduQ0+KD
4avOD4avOic4/MSP274dpoL5/F5OQj6r7im3oTo7YgTxM+S3Hz7Gj66838Yk
vMS2xKFXDY7hrpo89jjqz3N8cSOEkdpHGyf2lwx4hutsaDXou1+bDOSb8h2e
X+1hsSRrdBxQj2Nmv3lxzrcPo+PkgU2qNqh1xF7YN7j+//2//9s6D+Ze+2V2
P95nz4B9OkPHju16dQ/DiJ0J2vUDH5y8BGwYefBNnUthg6vHZ33M/8W+kQ3y
bj/rOjko79hv2XVtsk4mO/NcXRh7Xb+r9iQb7xn0AKbrDGp5OtUizOcWH3t4
LztenZpq/xVT6Ez3zsVfe42dy3ZxJ5ov85j/KnxVDvaJr+CD1qDtx3yYnBXf
ofe+y/POmmXm0/vNEVtX7ePyY6u5TJ7MOxwVTzi/ijWA/Fpn7Qlrs2tsA3vI
thvzfDthKuu874jjznx6767ju3xogy9eW7q217mLC8W803uxeGPVedi4cIc7
5O+XXvgtHSfH1X5k38y/HDJrsf75BnLOFvufrWCvjVn1kfPRsR9bXu4nF/Dv
1xiOXv7FWi+qa+D68Dp8Z60vcUBZm8qVg4XMMVnky9oydPnMq7Uab4++zfne
9604oN/TR7FCay07AcsVr3Nf/DDWF/KX35LMWZ/gK7bF+6am4n8Mny67tzmS
1zs9n01mr8mMedT3Hftasd1i1sUiPbd25w3Ljc//E3fuKfPxG3T+bmz/c3dh
cbpDtsyTbx1+vedWzFrfpmbR1JrxW+/0HnZOH3cNqGVD2MP0lI0oDli9m5Pz
Kmxv/uks+ate88n32x62XHr98ntrc76p6hSbL//Hz5DPpzzt6tqcnFTF74r9
lVue3ylfUH6h8FL+qPxUZw1i14vThc3IXvwG4Z/wWFjIM8NOvdc95cbT5fxm
J2brvd3T+ZqeWe1FNimflb4YB3If/qwmoHs6x1f9wYlTvXXxroeFzL128b7N
8/oEV9U+d7rW7vCY5+Qfg/HYo2pkWz98TzjfONJl9mO4fH7n8ofkAyn/s3OF
YaqpM/e+K56YP8dayh6e8cHq4Ngb8+1Yg8hLXL75r8q/YkfP/Cv7vs6jxc8w
PMeP+UXLv/Jd5a7PGb/H+Mo4aLvuWbCW69XQmboTb15ndox1+e10Lm6uqW38
/ivex4bDVJPn8sx1Hmf8hMP3deZQnXWW4/OsTs2cufy/1vV4XKvLw17bk9Lh
HR9b9sr7xkY987D8b7aiswP+bfKr75ac2Kfa75IFuIa/ztzQW2Pue8YP+IUV
8zGfs0Y8s+SK3JvT/G7Wd3IwtdoeLfvKfoaLdq7Vw+I1vovu6QebwxbOGczv
rD3y1MD70LJtO1Z6xb/YrmpY+Nbh4Hpt3W/9GP7dL9+VJ0qu3EMO4mrwPn3l
I6nu3vAwzDkJa4t1p7OHceN0HgBGiiMpTtRyVzxr8++vOEj1ncvNyE8Vn3zc
g+VTnX6tnetzxQe9K9604mWbS+7yX4Xr4mU1TtrjE/3Osu1haXiZXJpr63u5
8/BS5wG1ravkvXo0ML62Z7EZMArbaO3uHOvUJProVV+b7TXX863PXrhCDHq4
Df5u6fucWXlj4Q19N4dkz9zSx7iVqnFTDlF17uZs3tSI37nnS3/JnWfO2YZf
Wd9F/sgbHWcT4G14RruzkMbGdZjK/XQA/iRHfgsfVhsIPoTrJs73iSXP+slu
5GdzP/sxa+0nlm6OLDx33x6lXPd4S7xnzrE/umKy8JXf83OwdcaafnfOyxzD
hsYhjkq2JN5vY2MNtW6yDeZemz74TvNCT+h+MWL7T99iPD2HHFSnY3JW/nLJ
pPd1TtB4x8MwMbCXLk42Mp9sJ/87jr7sZFxV1VBn5+Leqm6m9XHXwrmLe43+
mqfx8752xYXZTeOSLvo3+006FG+Dd5WHkL+6PU7nbug4mwBfxcNQfNC8pqdT
s2L4VNLHeBiK/bHzk/P4k7VHiAs3bEOv8llVd6Y8pfLMwy3hqOJrYZVidrB3
/Dl8n/l/8jWdvqx8YtYF744/qrrMZ+zvxFfFKONSqG/5rM6+lR9YnFTb9Xx3
+fcm9/DNNT6ekS/Le/ShmoD6z1adtWnaW1e/xv/W3+o5mpf8VGTJdfewJ+U9
VhfefNIL9mDOcX1qyZr5oLMT8/vV60yQ+eCrsZ+Bw+J1ObnZq88S38vJ2+AZ
+bvKqeicWnmenaEjt/ALPw+bSF+LD9oPuU4HwxLeywZWb7b6zlMn4IW1FlR/
0HPjb4+PPXxVTjucYc5gBmNi3LRd13YPm2qc4bexu6+tXAiyPzzOf3C/4+vL
j1e+md/lGw9fwaadB4yfqvOAcaezudaLOZf5tSUnk9f29XU9fGV+2YOpW/P+
ix/Meopzm6/Ht9k/6g85cU/nxGEo30O/yJq2d/kuuMY66V76EA63/pIBY+Df
2ovl+4AN4npif8plh5nZIb+3rzM23q+v1oh8Te6t7jDb1lk/fconU/y1GGJ5
7GRvOAn/492c4f2btQ/1PnMZj4G/86f53cbZ637rhHdXV5hc62/c/zD6yYeg
He9O+VTeedaiNQ63uU/FC8rXzT4Xd4g7Mb7QcjmqCXueVyomSK82n+zCb7tW
4L8ic+xcufz2Vuy5Nco8xhV58iTACdVgdZ3e5rOq3or9F/zEJvEhs8swlGvs
T/5zY0LHyZi5nvOUzy6MOn7Ijy8clUzGow5XVE+teu7mtjZbWb5fuSKwu797
ZnVDshv01Pplvoxf9QvMg3t2TsxaX6YuxE/WGtd+hU9W27urh8hWwWbGhq0x
PmSFnrBR5MN9sJM5Nu5xXvl+be/X77ga5ozac6utH54fvmK39ZEsss/xSMcX
au7gK7beGsV2eYfvY6/Ir/6ZO3aS/nlv3FBwYHt262Y+KDanWlLsg/Hb+6Qr
blvcgXzuWosX55jcTmO9OSCWflqX6Cb9JSv2F/BJfBrtI8ohp7PtO7b/bNnP
ndO81p3OgMQ5Q67ot3mBPY2PNSsMuevYLb0cjsmJw3dGMlyXn/nMewwv5euP
94PcwYG+sXs8N+6XzsuTSWNofWc7jAHdyWdlzNsjksniX8URignGVR6GCf+U
+53v6MRIp+/IPXCLeTrzl8pFJ1/hpTOHynyTv7gO9KEYYpyf5bGfscWTqyrs
1/35zbR97+Zg3vk7ExOMpxqO8rvOVFY3Wbu6yfkw/W9tLcZ34qXak8f7u+t+
bXIe75x+0hdt+ghLGJfO1/u2sJO1rP2pOaCnwwP+q8tfQS6ryzA5Pb92f3Ja
xtneeYewFvktR6u8d7a7mCCsEDd7MlYOEr2rlkR6Wg1f1z3LeFo//H+eH+yc
Wv4r48A2Vp+rGoJsyy2+4qeC/8JU9M+48asP1+dT6ywzm+Q5nr/Piq+4pPew
k/YL9LJaNuWl+53+h686Izn+kUdrHOJdL+eqPKuzHs2Jr+BnvzMOxmT8gosz
aa2bbGI+cPaFn4ltJkt0Yev/Wg+NB/w88Y+3dp71P1/76Gr7xUNT7VQ2dnit
nisf4eIiyJ6U21Gt4Tgwq+HF3viz/Dh4c3NhLJtn3WJP4WuySL7YFN9nPP25
Yz4Pp6bAN6+4wOjK5I+7Dz43JnRAP8i5fvM7ecfEz19Yv2OrfId3WTN96/AR
vuu+eJR1QRsG07ddS+Z+8oCfvzjSOzNYbZo4o+3HfX+YavgQHp8tilenPNgw
GDmLR72cdvfHBQRHbf17UD5KZ8DNbzXcyVh82tkuYw5TmXvyzYaQXe14rszV
eR6Q3rGVnge3xLfsGfyT8y0funI16Yg+GXNrerlv3mWe9C1ezfxUna9hx7J7
7sk2Zgf83fX8J/Gw6Y/1aPLEhxtE2/rKhg+v/StrDeoe7foDl+ind8OH+sMm
eA6bUd0fYxgW7fw1jKNtbNlnz2cvJvb6tTXP+bXIIGw5tTpfXr8NX2nHj1su
1nznH601iM7y1bNXcK/8duMLR7Njte2j2Tcy7DnWMn32/Dk38tbqTzxdvjf+
NvNr7ow1DKBvxpAfgE75tu3LWzaf7LB1cUeXL6FNlu2N6BRdZufnjPpwZxkL
8g+Xk/P2DsYiHTn9S34bZ5T+2o9M7ZD3r7kjA76dDLP71l/zE2e39YgclH9l
rLc/aela+eqnD6qzvfF7lAPP7ldbUNtzy5kkl50jYO/iw4h7gaxMntyr1Yu4
ctqrEVPuehwh9hRxW538BsUQux6mOn1W4Z9brGVdiNMgn1K4qPv9Nv9S8Tv9
d73nd46v/PN8Yto9pxx118N4/ZZs55uKl95YTW7HW2tNzKdXjM891fvL1hm/
6jPmm4Kpyjk35uWu67+xzR8FR+lTfnvfxu7NubJ3XD6oLTsbJw2m8o5w1ORM
P4m1+J9rnzUH7ZOKDxYTZC/oTmcJ6XA57foYZyYdbP8ya9azC29Yu9lkz9o4
d8kkf4Jcyjnr+uH7qXP152t/R6ZnzZn8h/Gbv7DryQ9vlT1lHKFnTnvxQZiq
nPbw1eD4uW6c4Sv9Nv63/qvB19+/apxVfznsNPuU4Zo4c/XZQt/nns70aZfT
zhaRmRmzP1u6Vputq2YNDFYOrT0L2ztc2x+7+D2sO3QQZiEzMBPsQG713z2+
2xym2+wenBEHwtSh+4cn6utV+yufTDhKHKqaXOxMvqx4yOMWcK+58R2eB3/q
C5sNF1uLyNfU6J26N8UQzV11vpIJdlgfrNkwlXFgq8Nj4xv+4rJzxsJ6QT7I
ius7drFy191PN+Kohv9dg7W06az2/GZ4fcqTZ3f1tzNo3sPGekdxwM6ql+9a
3IGtzp6ffqriFnEyxJEVLxZfWXFZtaSnvvi77qc+zPfWmj5nvv922RnfZX5g
A3pLz+AZf7IV1l97AGPuHnbAXLAPnsUm2Uu6f+pgT46Nvk0u6At3U8fw39xP
3YZvPoGviv3R2fxR5jR+j2oud76mWoF0MN5a8ui6a90TpmIPO8NO/qdWwM+u
uvDuq4bp8GN88vKPuae8Vvd4tjGh7/5kf/WBTpUDz0byd/ptfB7arhcrpCvk
Ed4Jt1SLUz+0q0HDvpWvPWcHvrnwhWeaN7JmL1xNJ3tJNsWcwVSTo/bhC19Z
u6wL7L+13Xexy/6HmdmEcgDYSHNaHNa4GR+4QT/zxem3tTtOCeudOS9nvnwS
skPvq0HPdpEJ+xNrAfvF5sZvBsOVl0X+q0dQXpa1wD18ROzMXi937dTxX3kf
v4Lf+3dzxMZ5Z3VMqh1OV+jTPoe/9Cl85fmdwTlrC97WVc+fFqeEfR8dp3/2
PvpPnjqTSEeKcZun+GPppvk3ztVxPrlDyXztk6vz9B3lszr5DcJd8WXts5I7
L+att/U1hcfKfbo9u5e/K4zU/v3EVKc/KhwV31T1a8qhct37h8/jI/ts2RuX
n0o7P4AxKYeq3KfiqmzTiaPo+86nW2Ne3NDzq21qHSj/gdwUy8sHBQtNzPtX
17ktbd9A77SNr3tOHAV3Vbc93OUe141veMxvz5qDJxdWfhh4wPpYXKz6etbC
9jInD0P1Ysq5otuw/S0Ps7Utfmbj6T3kn77TAfLO7pXfXi0VY+jbrTHGv/pc
xQQH//1iYSftcq7ooHG+bednMSZzxubvl/+q817maOvb2jeFr+JkmFz/x/4r
c8iWGIf4E9zfOUFjWBzQ95Ire0FjDl+5rs1WZLu04zukg+3l6YVv3fWN79uf
TQ3Yid11xtm/De/iU8s2TPzhjxfmMhbmnYyWa6RvcBL8MOfSVl7D4kYg1763
XHT2x1jNWYov3bX/79x8eeMT31n5McuG02P9nP3U36494OasWrYrHs7iAvXN
tTln+PGd2zz1X6p9Y9zMO5lkz8zb6Tfzb9WxIU9xAwyH4b9fY0s/Pc849V5z
kH/p5A9ke6sz2P63XI7OBhYrhLuqTdbZw/xRbP4+x7/aU9dwuLzm/Ps/W7LE
1rFF5quaksaRT6az83SHLMKM2ZZyq6yLdIBOsbNTE+kPLk5R2KLaMfxZxb7z
qc6ZvY+ueNyc33ycs81Xc+Kr1vE4acNR/rQG6Kf5MM5873O289eWHZu85FUL
d/059av+8MI2nhMO0SZP5ZfWdt2fnuld8JHv046j0jN9N7ulTVaq+8Pm+Hv3
+y0sFIez7yVX4aiwVjwzdFW7PPbwlTFyf5jdM8Nm5Z3SS3PEvrBl9obWtvCV
d/s7PGZdN1f6bK43X87q73AoT02rMLbnG3/2dnIo37p8j3SKndn8Jless3r3
9FO/2bHNNbb8XeSBnYhLmfzu+NKS4ZPj1DfTizhji4/TvTg/J7b4gbv82Nki
+wbvt7aaa383PsaFDZ86hI+5EfZ6v+yK+YkLIrzUPujMuYo7ojOG8ffGQeE7
42kZzpc5c2FMWvfzU1XvpvML8Mbs+x/znJPjs9bMybHQ2cBbPqhywk8fVH6k
EyOFr8Ja5/3laJ0557VhofKjzhhf1+OkCkexD8Ufy0V3T7E/z4Et81lVG6i2
Zxf763qxP+3ypsgIG1YtofKm8k3xd5A7doM/iu7DQlNr/NcWdoLVarvufviK
Hhlf97Ot2q5rz17hsS+rtnviSOm34avifXN+718sbDC514+5nnadjLW+wCPs
LTsP49gX1IaprG1sljWd3d/nhpd/RP/I8+CPX794b2CD/Dbtp+g2mzbcaX93
V615Y6v/8VbFz1A+1XlmsDyr/FdhrfHHPbVyRH2Pec1/xQawUea0+KC1o/qM
8Tb5Hd2np/ZOcVDwBdA/9qHzg8bkzAsVly/2Nxyff3blYs2z/2y1y8U6z4bH
4al/5i4+G89n5+iM8TCWxtvaoP/VQyWP9sPlIJGHHQe7q15anORx0Wh3ps+Y
kGPfXR1x3+VP65NnweBkgM0yz7CB59sLTy3WLy9cw36weXTDn+zV5HJ89fKV
dfY57nQ+N3bRd82e9ul9LufR5ipZ9vShP/UTFvD8WTt/suaqeCXZmj39H697
9JsM0CU2opyv7UO8zjrBcvnx4r2Ja+vMaS+OUJ5JeVnV3KEL5njHZx4W24Nj
Z//yp2scPJ9ulkfNXk2toL+6m3p0L64xybbQjWJG53lAcm/tJluwP10jW65v
btklt3xX8ahbL8wJmWRL54zLf1l6AX8ag/w2k0fz3BXnqhYDnc0nTFbpVzVS
4/8ntzAVeQlf+dN8uKfarOwA3GzeXdfX4cX7zMJObERtv9E2BuTFM+ds4W+s
67Dn1ISY+z3H+PgzfOXP8FXnr/OD+RbfSy+tna77k5y1T/R37Z0PfXGNTi7i
J69YYW1j1/6OfQtfwUtsl7k3J+ErayzbxY6w6fpp3sky7EHvjRdcrf/Waf0s
R6lvoQf6tmsFXX5I88evVZ+tv50JtYZOXsNLy47lz2SXyDuZKWbRGZiT/5xe
aO9zrlc9HbJH5kf35tzo1PJ77QF7SsbZqp0XubCVNQo+IQ/x91V7oVrwc1b9
e9e5xfEhDr7a3HmrffJfVS9eP8NUnhvXjX7Sn9kTvrT2wtVHMCa+2ZoCM5Rb
GH+m8ddnslce+y1H6FlnufN34agzfnfrg5q8zF9cOe3lYp0YLJx2+qPcQy/L
iQpfne8qL72crol/vHEXj2K54p29dU+2NkxVTtrps6odX7oxJNPh1c76hV37
FrpDBnwPmzAcke9cuChMxQ9Db6pRYm7YlhNfhamGs28wVfXWp9bvU1cc8PRT
ha/4uMJX2rvG6cWrMP6eL18+3mrtlU/lHrLLf2UNJMudmwtTdU4wTmbv4zNp
PQtfeXd+17gIYI7s85z1mH3u1Ft4Yckh/F9+u+ed8UH46vRlhbXKaZ85/sKy
VeGxziEaT3NC11sLOpe09zYXn1XxwfAVW1bNWe+Jm8IaZgx9m3kIa8GT8Yl1
ZrD9oPdUs48NIg9xpHjnnOlaNeCXP9z4kid65FvIZryqcJQ52jkNa53wTbOv
f23lNrA3+WfYrHCUb4aL4piK62BzNC6fZz4IOIAcxoVOFsiosaF7vsF32Ufr
j7Vmcuy/f53L2+ctH8Z/yo6RjXLpjSEbCMP49/hIjQVZ6hw/PYEB4hHVt3hh
ilHDWmSqM0f6ZU70mQ1lX+YccOvA0/fVffV8ujCxu1fWeaKpefT1y5eVbwoG
q+5z9jnO0jhC3eO3nf2kS9U9ZFfKP7GO+gbXqsnOptsLD8Z9fC4YhoCpyIq1
qNwqfk1Ygq2cXMtfv/DSxqjrLCq5yS8Niw1X7tfvhtv8z9c88Ov63Ymvyiky
r9Zla3q8pnSq3CoYhuxU19h4G3s2ylzlbzcvZKe2f2MH4MepG/q47Z7zevxd
7KE/p07DC5d/zjj4k074LXvi9/oTJ1hYyz35xMiU8eysfXlimxvjibhb2FJ7
uF7+9sppj5+BfAwH7yfXfoc+wlee6Tn65lv8bz/IRzBnp7644nzWXmuHdYvu
G2c2iK1gP/3pm7V9iznP/9b5u/iXPK8aVvnizJ/cLXaDbajuD9zBNup/fq3h
Tfwv19nz8JX9DnmeGg/fungYwidn7ULjyn9Fvo0vP+qcn1o24cHgtncvOYwL
moybs87pmDs42zPKgatGPPtEzvkOfFt8C+19PD+OCDpb7Wbtk0fFeOVPZts7
uwNjwBrmzhpuHs+YIHmorg25h6PMyemzCjvdcpiXfxUuygd11pGp3vGZB5X/
6qwvE6bKr9Uz2ZOulw/fmb58VmQw31R+Ku86fVbV3T79VMbFmnXmqJ9jNWc7
5oxqfCOwTPH94r+dC7bW5/d239So/tzlm6IvdGXyRz+/1tHap/+KbTxjgsMT
8Y/xVZiqdveEzcJX7qGLwz/0z5/gVSD77PnwoH9xrSMnjmKH2HxtcswOkzH2
qzx28gJfkVv9sB8h24Nrp27CLb6yDtKh6qWyR+VI0KPig+f5wYndfu6JOjiw
RZyi1k7tYoWnX2uvn0svzb3xIdsnvqrOBZ1kN/im4nMq/8o3eqf4u2+vhk78
omHXzhHAUcY+jEDvfJ+5JvPGyFjSU9+kf3HM7jyvJZMwAtkhh+a0mnnsiTWP
TcsG6Vs86tUE3ufrFlYp9mT91xanY0vYQ34nNtR4+aa428iGfuR7ikeJHBlH
MsOuwDAjJz/YHBE/XPgtzgv2thgZezscYl+7aseU02VsyaXr5djzI5mLqZPy
bPw0l3+MvFjL9I3d3dyja26rG6bvxmpicbM/LY/O+lJeZbUPJk/rq3fx2pDt
+DV8iznOxxU+jMOqtnvCV8Xm/XbOg3x15Zv5Xn2olkpyot3ZQHPNh0EuBkc/
v/xS+kh32AqxInZgMNDv3k8e8lvxFa26z3MO9p3Lz6yf5LyzgWxmcWq64M/w
lW8ga+Vsx08+/frh5b+q3nd5U9rlU8EzxaroONkp5yEuBbq56xCsNt2HGbTp
vn9j08wtzHR7Xdv4eGZ4A+6CWdzjfte1wzOeo2/6wE7CWvpFz8oHM47lg5Vj
1pnHzkH7t+KD8VFM3a3Jac/vp12s0HNg98nd+aOFDfWDvbK2Dd/PF1cuvrXR
HtNa6Lp+0jkyQR78Vv+1jZ959nx22f/VFfU9MN7UoP7R3fg255yCPW/cF96p
z/FgVGPR/o5O+obOAdGt7QtZ8uw35RxOrHTidHHI0wW2mI+a7FUvspxgNc0n
3+Lp+87/wYdspP/1LX+mdU3fJi9u6itVc6F8yJ3TutrFBLse10S1GosPxkEH
+7Dz+pVvKj6r/FdTA+CHyz8A55R3FLdV/qv4lM44YGfxbmvwxTF1+p3gjdNn
9Xbt8ttPX1b1kU+/VrE/MnFip5PnMz5PMs8unZxU1SiPS8F1uKh4H1xjfDz/
bMMp5atbK/NTVb8m/yrbph/loucvYqPZCrrgN+EobXPlOv0wvtre7fu181+F
teaM9Gev+GDYyRjl4/JM94ej3O+37e/mDNvUFbA2WSPKS4d1NnfzatNRa3S5
VXBU7c6S2OPBVHTEN9CLzvBmt41X9arIiLV7YiW/e3FsWi/oHt2m++YrfFV9
584P5r86+RmqMxjWiher+GA5WtWe8P3hq2rQha+sbfEzlP+f/4oNhhOGg/Xd
l//Kmhi+yn8VP8Oc6/r+0rvyHMhh6xT5HA7Rb6972GF9g9PYN/NufbQu6j8d
9f74g+Ke2nK5bFjcUPGim5fytNi0/Pvlq7tePpW5My/ey+bKWdXniQt++eI9
8Bs+wYlLvbYwJkxTn2ctmjhAeGl8I4PxyF7n7KrPGg45eT5vr7PPfhtnlPaZ
l87++kYYknyUm33WEdtn4R74jW8zDp1RGt/Mq2tvVQ6Ab9R3/7b9iHed/2S3
9d98nvXI4k7UjgsrPOa7yrMq94sO+r7yQo0f+Uk2rKVkPJ8VvxS7o01W4on1
ezLIBpJLmKF8tmoLxZ1lvjqDb38Wn7Bn5OOyFsSpz49RjWvrmrkxJuEHvhoY
o3MV1X/xffBV/h97z2qtwhKd3chfTSfpJjnzd3asenzsQPHQMFVt45HPynho
GxNt4+C6ezwnfOW6e9i1M0apT+x53Di+pfpl1vfqx2m3RmiXbwNnxvcFfxYr
zJcVF1ZYxTzm99OHcsbYK34Bdlx8cHgunl1rhDV4eCs/s3Lhy2/3u8l7+PT6
k8zof+Pc+QLfUs5YPrfJux+sZZ79WxxfU5fqYxffl/fH0cdOlrs7HN/Di84e
ha92HHK16V1Yy9purWFjyb243q6luTiKq6dJZo1dZzfYcX6e8vesvfo+fp6/
vTDScLNNzW79jk9+zmP/5RUT1OfyAeKZn3M9U8dqaov97xcHCLuz/c1LHjY/
33VOMB9UHOzmpZwr6/PJwV5++5nH3hnDk8MzP9WJtdyTnyrslD+qWjNnbLH8
867XLoeq3CrtzvdZs8KK1qxwFxwV52e1aeJDiP8TrslnFabKT5Xvt7OB2sYK
ZvG+eBLCP+WlnxiJv0V7OFWfbLPj3aMf+azcc7aNC5tQLhZbUa57eVx00v3h
KG3fTA71zbhkm8JXvuPMobJGkyHXw1fskXV88m//pyvPikxXL0Y/rDuu7zM6
F75qXXNPZ13P+GA8OeW375jiZWfIcHvY6uOEr+JqqA5OccCzXQzxxFfeEb+o
d7FRUw/q+1d80Fpibqud63fFQNnm4ilwXDls7m8fZ51jMzyHXMWD4durZUYf
rdV0ml7sGqLLn2Bsdn2GdTans+X5bfTdM+kX/fNM9/p7eZqbH221p77b1PI7
a8qYR2to9US9l54MV/UrD9knz2dX+AHYGfbYd8+8f21hqngS3Df473PtI5c8
xG0dJqnecbmm1VOuHr1vc08+H2MEU3VuMWy2a+CsOdIHGB4+ICv2BZ65+SnW
3O0zmg+qlaZvZB5OiR+p/anxcL22Z9KRfK+d187PFj9qPPbmvlih2MnJb29v
Tm48f9v3ZdPMjW8iM7CRf7MOwlQwE1m13+OrtVbCRjt38sqtItPlTHqvOone
O/7MOZ9eTruxLWfeuJHDkd9Vd3fNr3GBqYa79PsXvjIn4Yc4neJp5z+plnH5
RfmyavuWYrP0kQyWcwXzWGPYLrrH9rCTMJJ/c50d8G9sne+e2kcvLH1nA7Wt
xcUEtT0z31exSHLdWaF4rfWz81mdhbRO+K78crXjkSj3xnwZj+p1sm3lqhk3
43WOm+fnRyq337pb3oj5PvEVO+ZPa7s1CL5i2/XBt/quzkX6Xs/P5w13Tez/
59cZzM5mlken//qsP/GjTl2fOdeg3/xoxQerwUqPjBHs1Pm7fLlnTrtvDXex
IWxpeyU2hCxOfPCppaf6HbeV/ph/6xhZtQ6wP9a6/KJ0KIxX3U974M4P0tN4
sdiEauLQ03jqvBe+jMOB/tEJ4wKTkIfw1eTf/dcLd5GH4oDhK2sqWY9T9OQL
LZ8qPgTtchyKG97yUJ11+vJBdb4vboTqy7hf+6w7U67UGQes3TPj/4xX4eSt
OnOu/JtYXHWT4/n0nLhArQnV9attnvw9Hol0jQ9+fGrjU5oaPKMLwyn/+cvv
BA/ARe6pPXv8z13Y6cRX2n6b/8p1Nid/VDFEa0B7ujl79hvrt8aCDXJdm975
rXbcguJ9bPzkz/zeWptganjJekQuwk6u56fSD2tZeVbadMG3tRfe9Xkexq/d
+RHfE0+d7/Y79p++5HtI98NXs295Y+VKsYfFB4vxuZ7Pqrhhfi1jYN61Xa/N
xrq/+GA2TV+HA+rZ5cegS+f5weoP6ndc7sbK++NZtf7lv4KvYARr7/gRv3Ll
tLMlcRbN2c3hb2dTrGHFXuERusVu0bfJORjfkfVRf927z2ksuwX7eb5xIx/5
48m0/rPn7NPs0yZXXD/dM3XuXnlYPWD2UH88y7cWy6QTUwP8HStXPx78OG+8
w7s8j+0qduk72a6z5ld+LTg8P9HJsVztjM4Mdv28p3q1ncvTLpZH3sxtObTm
IWzDNsAY5s4eHB4yvnFcGBM2vPPU5rcz9Sf/p/kOO20OjmWf93nRtV/2bfnN
2GPjM7xmH1m2yDOto9UIJg8T+/yHtY6zG+xOmAqeoCPs9dT0e9fyRRh/7wpT
5TN0jV5V+8M8tieaM8r//uJhgK+sS569/W4LU8VJHjaYs3MTVwpfkcmp0TI5
RXOe6g8vfsUzbigeV84GnJOdh3/o5vASfnbZufzzMBS5df3EWvmj6HV1f04/
WLlb7Jl3VcugHHvvyp/GtpSTXxww7HT66Nirrhcb9c3wCbk3PicWrRZhfphy
tKrFY1zgJfbU97Jp/DL2W/AVH+Lwrz96gquB7MLb8dUbOzLjW7VdnzPDc249
fNVZQvqtz4OLX7v65nvKz9fPuAHP/Cuyalzbj3veydnOd80mDn/dYBvj0n7E
d7KlZI9MwDzVN4Wv7BXpAH0pn8Rcs4WdcfONxb/8fZ8F2jyNE2eszkKxQt/Z
WkZm7d3K12pPtLlmlu2zthsfNhY+GY6QHy2MMbLw4yuvye/MO/k0B/GIVvvm
9szgyc8Q7jrzsk7eznxiJ59VccDwT/nq57m/cJHfVstPH2q7p3gfeXA9/k9+
0vFnvHm1461Kf295q+JV0J4aKa8tTJXuwC/FVcmhOdWP8p0mD+zzl6/J2j11
QN9x4aswlXb1706sBTuFwW59XMUK9cMcsS3mkg1xfc5Ov2vdzxbrn+vmHqZy
vzG1l2N/3GNd9ixrtzWIfaEX5dDwTcFdtVvX7dm77rfa+i2uVI6ONgw2tWdG
Vjs/Qp63XOw9wu+tdd9zyGF7dvbK3E1c4Y/u4wJnJ9lD83fGCmuzF9rVPsnH
dbbjfmdv42/XJ+sRO+89w8v8sft9Tuw6F6Of8CtdG06rx+corcXVrIsDmR6e
3KRiudViDlu6Hv+V35IL6/uuNXG/+aqus4+dARwemad2Pv6HFn6x/od/9C2f
Ej1hu4yt9caaGKdYtaDZTvNVrrt51382MB9X593Y0uGJfnXhSu3O9Jk335Lv
y/2dASQbgy2/e12vHp9x2H67h9UPiCe5+GDn8qpBY53nt+8cHzvpmWz78Kt9
L/7WZVfJYbI355Cef1jNQj7VeGLNAzkgU+1rYR7fPfHJ55b80H1/egfZNa/x
YsFq1dDpjCQZ2rlP67q59D3Vsqm2I70on9xabD9knK31/o180WX2l+2g69ZW
fanuc+d+vZcOFhf2jcPLM/W4T/9V9W46M+j3u6b0lWMTTsj3ElcSbOBa+6Ph
L3914RN/lt8YVxVdYyPopnZ5GvY45XKEc+IrOPEVPSz/4YwbaufDP7FWdZm0
6UA+fzJbbYvqr+lPZ7L0v3NP8NVgqImdwRp0J47Q8qz8Gc/qrml3jRu91d45
edcYkrHOBYQ/6VJnmtjvOb/yheWzYtPzZVlvjVu+Tc9hM/1Wn7XjSs1PeJ4f
1PZ9cVkXo/Ts+Hr1mT00r/E2+JY4ssiJOQir81mdXLun/yruKe+JO31iCHN+
anO+3iWL8JW9iT5V05N9Ju/kIL4C61g8Tv5OPuL0va2/EI/o6b/yfZ1PMW/V
ZZg159HCddZb9sWY0Fm6ZK7ZcM+aemF/sN5NlugvfEVu9dn16t2Eo8JX8bGf
3Olhqtont1V5VuEre6I4PE9MVVyvc39xJpx5VifPp28JX8EaYarznjPPCqYq
Pji1PB/zHsddz7aMD+OnF99C3Lz2NdkBMnz6oMJUYSRt18Nd9oTVO9D2PX7b
9XBXPivrrrHWzjel7dvYiPCSNdf1qeP+zGqzs1Pz+PNP3EMO8l9pu2c4Hj9y
YSr46hY71XaPuS0m4vu7Hra3Jhpja3E2vDOwdIqukefyssi9caquMf2NS5N9
PuOD5UdlJ8NUcYQWO4hvIQ7SOLLO+KB7zNHw30zMUZ/00R7Q/OuDvcbb5bez
x/nrPMP3WpumFtbXVp/tNdkec83XwG6U656+m1v3kJnk2TyyV8YaBtZf69Xk
KP5g2QG2JU7jzsiFbcPvxezYLXsDuj18TO/ctS4fbR/Xn616duZreNqGk9j7
tn/n4nCorob59F1shn8f7vDBe2zdcMe/dPEzlDMfpjKGngVrwThTV/HphU3K
jyrX3Td6X222jh3vLN5glT9ebfEo+LDzjWTVmJMVNt8Ybc7LZeenXsvU5rCu
8vuVo0sGjFn7U2OyYzXX+YWpX/SNu2o4Gn/3FaN0HxxVDD5fWee+2XM2auvJ
ko14hLLV4Y1qK7M/fgOnwxtsE7vlGzuXOjV0nlp8pOVcGbdda3H1a/b1X19r
DX2qNii5LX+GvTEP8Bp7XlzXelHOVfnPw/s6XATmwfq+Yy3L57Zzmi//Fb3L
V7zrWz5xrrD4Nt2nm+1n2aPwBtwUN2BxQzah3Ph83daz7EbtORc6+V3sYHn1
rnmX/hRngQn9GZ88mfY95fMPr9LgkOrgzBm7l6/xmbpBH7/ylNi6fD75hcKo
nREwbsMfN+eY4mqAqcwHGZHrPjjvo9c5cXMYJ0M5+bXZ1fCV69W9JcPJm++q
/qP+V8+hmODpv/Jd2fDtZ1q5H3HE5aOOw7N60O6hd9uXufR3OAifW7JH//Iz
n/hq6jK8vnywcEW1F8sp8oy4K32j9YHv2BxlK+jgWVuB3W89ihNGe5+BWfYH
ZjVfxQRhB3MEn1iXahs/cgJHkUfynM+K/hlD7eEe+tiS08lTe/Zqn3ns5vms
m3xyihYfDE/Gl35ye3b9zEUPU+WDKj4YP1X4Kv7PM6f95K2KF9Q9cSyUx94Z
ls4HVWd8zr786MJvxdOH423iUHBROCo/Vfiq3B4yVx1h95cj5HpYSzsM4Ldh
Nlhw+DQHU8Ho4SV23PONL12rbT312xNrGa+psffZ+6nR9e4r/8q6vWvRLXm2
vuSzIrP8IdbuLbsrvmFuXdf2ze7321mLn174yhhp5x8u/l5t4ny86U61YzyH
7NFdtjrfdZzG4QL9t4Z7Z3vVatzEO+oebfMdR9YZH6w2tOeEr9ieOe/0h2tt
jR978xldtel9F0xVDv8+97xsBZ9CfAtx+ZpH+Iq9yYfsnWx9tSzNC9nz7cbY
b+3r8i935o7u84cUh6P31iZ4f+r4vWeNBzxIN8wpm0DHfFN5RsX72j+zddbK
OR/9lfVec+Q51qNd93o907PMD7mKV4rsuc93k9XxeX7nLl8ArGG+igP6+9Tz
++2Fr05e9OrXk4m4RvPDdH6ndmd/yoHXBzbYc/gbySkbb56L4XZOvHgEDOY7
fc8+T7jsod/4FrLHnxVuhEfMxc5lXu+Ffcy1b2Iv2mvsercPvJusVzsyH5Ox
JwNbTxbHy8SThxfd+JI1GMOa4d/JPLtMRsh1MdiN5R7YIxWvND7GN94ec1GO
Zed53QOnWF/mzObv3FcH0jvztbLt4St6GuckbHDiK+38MNaiqaP7/P3k7Ly6
2nFZt5fJl0V3w1fmQRtmYBfpgfbmfFljkn5U3yEOB3at3K39bRemihuw2Jm2
dS3/mGs7b/Gq0abP/ixfvRzG8FX5VMVGXdeOc5UMhq/g8c4I7LOj1/V8WcUK
yz/Xn/L2yal9IpkjA/CVPlmfs/nWEtfCouVcVVstHBu+KiZYjenOEtJt86s/
5sy3bJx0N5y068zGkhlyFC5q71AuYjU3q+s0e7RfLKx1nhOkv/YiZG+fAb7w
lTxJMrzPP609UfV/fSO/jfk3r3QqPlU+//LHNl/2yr86+ULbl5WjlZ0J47Eb
xnrOPL18xfF9R7Vcq3GZz8ec3uIrv6G7+Wq0J7fuzau2YPiqdn6t+K/Kv4rD
Kh6Gsw5OnOpxLJRPVRzQuJXHXvvkXgg75ZvqPHscC2f9Gn9OvOf3L651mKpz
H/msyFKcYNUSnXOxb609FNs2efOfe8JPdcYB+Z3ck29qfHBP+qzMk+/MT1X+
VfE+95uzMJXxClMZU36n6qfDV+4Ja936sian5z0XprKOl4vlOcOJNPb29GW1
7rjOtrHZ8Rzls9IW17YeTz2Uf3bl5cR5YhzF39ntOOXo4dQUmFhh+bTDY/nx
ZYfZoupoTC7CH+396M+u+GD4yr7VOIe15szV1NAZDP359d3mvTOGxQc9Z2LD
n70fbqPxX019g8m/Ygvty2Ak6zy9zn/lG627xe7Zv2KF5DC/enF5upSeGmPr
trHUN74v9oicTJ2Sv17rYTan+rhs18TH3nu/6xmvdZhdoEvbL7BwabxPnYON
R3389s+scZ7z2Z+7ixMnvlD98+/k0G98u/Gkx677Vu82PvH6GVcYUz/YRO8n
P515ZI/tZ43bzt1YdjJu+bgP8s+Pb+vZK39Jm8ycfOnx2MQFT56rpxl+hPOS
T98A1/m34nrGx/3F+LKZ5KHzI2SIDFTfZHj9n1kxR99YXMM8wMCDR7+4ajHT
K3P2uObg3VXXhv0wLp6r3bkG8u+97BNZpRvkwj3G2tiX30U+zvHx/fpGDnxT
MUo6pJ/GKh+yPrI78aWYP32HD9mJuH/FX8IDZ5wrX1Y8Trd+GPrsW6oPqF3e
BV2LfwmeKU/D9anP/daFtdiCsFbnDVsvXO/8VL7uOB/oT9zL1a7tnq53f7zx
nqMPcU2fMcF8O/6HPeAo32lMwpbVHKTDZyzVemo+jBH8TL7pgfXX9Ym9P/cE
vsq/1BkfNrs1hWz89//7394PZv34Vfd5fJ+fus4Mwk7br/QE/1X1H8NXvjGu
Bu8fv8wnrvPOfaPvnRze/7zky1693MM52/KV68xs/Crtm+K8orPa5pX9ZAfK
v4K1yEJno3aMe+nRcL18ZfvEHly1UTqXZz+S32avUffD2/qTJ/Zrxr2aVvGL
audzs3ctl75aG8bH++CZwaGTxz41zH+4sNBggTef8FOV366f1RnMZ1VOu99W
Tz5O0a7XLge+84NhqpOD/eQOvcVXJ69CGKwzgF0/89VPvoV0IT9VHFb5rKpl
cxsT5De45a5vz2JfHqYiz9OPR8vG0VPrdXnp2uGofFMTB/38lWd15qvfcor6
fvY+HAUXwWPD6/eedY/rZNl17fBVbc90f23fU9vzYar4UuB62ID/ir0lm2TJ
es8Oleuur/xUZHzzWS784HvydxmjeEs2bl3yWU3P6q+1jzav5Hn2ER9cvp38
V+wTeWdbxp/66uW/Go7XOU904qhqPQ9v1/A2WA/Dt+Vf4b86896N95wF/eyy
q/ZG3jWy81cXn97k+L5v8VlZb7zfGs0+aJfrXp0gtsK4l+sOmxsntsE6zu6Q
GfjKe4w3W2ltNyfWUfsk9nHy7j+19k3b5j30e/9mHiYu9NTyZRl788I+Dc/6
O9b66E/6b+48Z+qofOmunBL2Jt9B2Nlc+3Y2wjyybdXlta6zEWTd2JgbuuLe
qVP3+qoT7Z2Tpzr20vpcTUO/i5Nzzk3P3jb+c9erKeN6tQ7jdWcDjb81zD6X
rR9e6i+vNZ1MmBfjbwy1t19nja3+sCHWDu+kV9XQPOV5eF3Ht9CZQXMZ9uus
dzUHd73zhXl2LPnhcKP/2oq7Te2ij6x8bzrBlui751sjYP7JC/zs2iuJQw4f
wtT58b3VvtyxuwfVWosrfjjEnl7ryJlnEneQa+ZX3DYZhq/yX3meObJHqC55
8cGTq0Gfi20ZA2v0cI08xldkXkyq2Bm7urmzF4Y5sVY8GLBW57hv28UmTtyl
bc78X95UOepk8/RNhaOsWV2v7i3fdfm9+llcuPOA/ve98fI2Dvn04q8IdxU3
1B4+9E9cvPdhKrJv3s3Zba47G2i97Xt9C1vBppELeF/dZ+Pr/fKyvIN9j59h
24/LF5H/Kn7RM7+92nlwVPFBz9Ufc1c9C99vHSMP+m8sy5HwHfB8/HX5luc3
kz/pudXBMe7ljZuH6o51DuXxOdzXlpx7TrwibOnOl1p9ox/hK8811/EATD7S
D65a6metT9/hmcXuw4HxMPhGYzrY8zG+Yt9cH7/mjy5/lDE1v/oTvjrjgN0D
L51+qqnH8rPr/KDnxiPaucJy1635xRDZic66njUEq18T12LnAfPvldNeHPyW
j/3MvypuqB1faByhxiI+K/JT7IbsFh/0b+Sqs2nVQR6O/0fXeUBtz5rvfLTw
1YmpWtM7G3ib327vmo7kp/Ic47J505dvqhwq48jnAg+QGxiiOODZzmflOWKZ
YTM4qnuKIXqOdnETa6q10d4/Pitt162jnTEkI60vcFdcWPEwVNcgzlsyZ90h
t1ODa9Yjc0K2rUHl05Jjukx/6CXdn7pYr665yH/FT1X+le8tPui76EN+wvKy
iglO7t0X1rhWo7B8Lc/0fPrSPjobGP+VGFz8V+bPmm493fXKli/LGg1XsAd0
n60xHmSBjSLr9L1ao3xW1i72Adb2LjoFy3nG+KJ+uvCDfxsuquEe9qzyEXb9
sKXv4qJs/5x3eOMJnGO9JfMT6/jM+nPO7zy91ovxlb2y+CeGN+a9d519Yve8
d/aEX1/5nsMx+u/W/JdzTx9mf/ylu3SvM4l+7zmTh/7nV64p+0VOqjPoe9m8
ausYo+x2ueLVV63GvXdsW7DWO3JbjqqxqK4y3TInnf0hX75xsPZnlt2lC51f
3Huq9cyptzb733jm+017XnguP9Lk+n5txTSmzt/L673ViPRMbfLlu9lh8mwe
2F7zwG7CVnFXhuU6LxF+27hn7Vn0J79f3BfVVS9+7R0wJN0zl9ZH32nNrlYO
W+VPfYWvyK2+6mf4qnNwZ552XFhztuyvly77c878T6ywWHw1ZeCr4W+YvKx4
nk9MdWIt90/dhuHRovfhq9YOOOo2tpiPq9hZ91QP8TwnOHxdP7mwhz5XG8gY
GhO20Bw3DuyXb4/zSjueCm3/Hi96vj7tMPwZZ4SF4mjNz0au2TQ2gs794r//
Lyvmp19ihd6hX+ErvzEvO9fwLv5543hy0Xuvd40vZuoq6nN1n32P9aScdvhu
uOK+sZ5bjebZb/3JEzHB8k3jbGcL8l+xJ3FelXNC5tg9cRA2l6yRc+vFPkOz
zuFa/zoTI3ZmPaPr+XCsUeUdlcNd/nBxczriO7In8eDBivZi+m3+6OPUz3xt
zbtxC2tpj3372MXHfuax65v1JT72k5u9Gq3hKLIdt1W1/+JqKHedXFZnkH29
rXGTb8qan78rn1XcVifnVbVviiGWx54enWcG4at0k30YHf3pwlFTs+i15TOJ
jyWf2IzR80tmi/HFk2Bdtv7NNwymGsz36DoPmC8rn1X56nE1jP9lOHjj4zUW
ZKQcKutzmKrrxoidzcdFfuAB43Lmt/OXuO6ZsJPrnuN7uq4dBuM3ZVfJKXkj
m8UO9C9MRUasWeSfjJB/aw+5YJ/pyPhMfn3Z6u17XviKXbAWVDNdTggdMdb2
NWQbviLL+pBes13lHsQvOueEBl9ZJ/JfFRMs1725eztOhnhHx+/5hc0H9rPl
v/Jt5YRUH6faW+zpri+ydNG6ac+lz8MJMeeMycuu+7Liva7pDx+psWSnyB77
wS7xFVQzmXzReTLpmfHw0R/j7LfhB/Zk+0PXNXgARtEv+s0eVbOKTyY+aPPr
mWGqbL3rvt1z3Gt8x6Z9ZXG8TzzkowvreoffDxfFqv2w+m8P4N1sEp3ODxY2
M470mRzpl+ezwzBQvO6tN+yb+8qtMr7bF/KwfAyylF+Pv9SYznnsF7bv/wNr
vWg+2FVyu/dSy/7be5RHZE8yuOSVu722LBkebobnl9zSDXbYWJx+Iftt8Qv3
kC3vqd7ccL7/5n1+fn1kl8ov0k+2SJu/aHOXLD5q/k1zoZ/lk897n3oiJkiP
Zt35yhqTOXs6ZxV3ffI1hlMHZvhcPbecNPNWndD426de24evWuTsP1nwfnrh
T/2JC4t+V0fPePKZFC+jy2EtGGZypedcYfmurp8cDtXGpY//lC+rPXX4yt/j
0TKe5VCRu/K1iv0VTzz9XXHuhT3Kyw2fTEz3owsbk1/rY1wr4ck5A/Lp+83x
tPpQu3io5xiTOBzISfNb3ru/w02eZ7zKvScfbBrMTWbFB/lE4nUf39mHFs4q
ryzuhepCTg3ON1Y73lf4qnOL1cTx9/LY6Z81p34W75hcx4lBV5O9cyjlkLu+
eVUflqNQ/i37aB9nf11MJJ66eNTjTifb9DXf7K6JcuUr7n3CpWvGiwyXb7Zz
71YfO3dcvVj+Mc8nW3y57Dw9nRqS/3XhJc8wl9Zq92mTB3LHTpdnFccCn3W8
67c8DOQ27oV4rubcxs8u7GSdjF999sL/5r6z4OGofS78ig9WN7B212GHOHLj
bfD8sw7OmX8FU/WcagvO/u7uiZz2+Kz4DfJZwUHlWZ2Y0x7BmncbB+Tr0A5T
lceuXRzw7bBW5wrJ++S3PVq+28lVGXyVbypMdeubKqcdlui34St44hZfeQ67
XNt+9Pa637rOxpJP9iJfVufj6E6+rOrgDC/37y15JC/8V9bHYg0wge9nq/Nf
yKWxTo2dmP319kcuvYM3PFsf6DUbPPzYs7ei42wjfFV+Ox0i074F3jzPDxbP
rX3iK/MIw1Y3x1jSheoPnpw81gWyUX57ONDf+QqLTRnHaiBbm/IPuG5s/Vvc
pMNp9cErRqNd/g/5Kgbl+zw/rhBYSB/23iAfz302iWxZR42RducPtj96jWH8
UVMz+qU1R9ZE88vGk5/h2fjTtU5tfs2VAz+1t566q94MW0v26BXcEre5vsNd
/i3eUXaVLfWczmuS57it2OfORFcrp5gC7ASra0/O3uQBxsnJHhrT/DnhNM8s
Z9Vv957h4mF23TOGq+2ryz6MnXt09zjnf2wvPBJvVZxd+ShhPM/0bnxW/D5w
OB3wbOua8TCf1q+4Lq2bxpv+kfPJw3vXVYuZXP7/hN1x5P/Zeff5qLpFRc0f
FXGrioo1ImrcKqI7v+83blHjVjXWiDGiIkZFjBrZ2WzX5o+oqqiKEVEj6jZu
VRGxoqKiIqIiIiJGRI2IGDVq3CLmzma73d2ym8e5zvP9O79vpt3h53fm/Xt/
3u/zPuc61/U617mu10UP7dz1nWv5wvJTTczV11bMfPnmrlfLQz/jqWZLXK+W
rncYP2OgH7AxedUP65e8er9vmhok//Fam2yKb4bdisc2V+y5vz0TDgmvst3Z
5fDVnG8/mEuoPT6s+xxZ4ZCJ4Xj64iANaw2f430e+OK18nGVD+V6NZ3ya/l/
92RrTgwGX5XDbi7IsD4U++0Pm2gcfC+bHq++b6Qz8l/52/ezWWTMH+0dq32d
q5qr+NurNxSna3VzrKHOT60fdgG2Gn7k51a8FX9SMb320Z5TzIznxDMWD0P4
qnHWBzpMm96Lu4zd1y9yxIZaD7CJe/NNkcNqhlojxVxZR3EFTw7A5OrqB31y
4iv3WDewjfVkrOExMjm1GD55nXdby9amOWeDjJd5Kf4KhtH2p5p35ndqWv7p
mpf67DnVP7VeigEzT+zk8HP8w5rr4Qf97sI2U2fy+1dNwOLYvSPe9bjZTw6r
YqjCV+2D72KqsNNd/1V4ic2vzqB+1r579nfGXJ2c7SfuKo/Deu98sPy+/FT5
kLXzf/IJtEbKDTRWxryzCzIG43gHey0HOhwFn4WvirMKR1VvpXzA/FrFvcNU
xlfbN2z+jIWR6Dn+KN/J1hTHrh93eRU6NwxH0dH6GabqnvxU5oNvqvYb4Su/
df2scVMsFtw+ufYTp73r3z7A5d6et7b5z3914qv4Re1B8mVN7OwvX/Hh5qga
HO2hij0YXuEfXHEU5ivumjCVsTzj2zsr1O7cNnzFZ2X8XL97Pgg3pOeLb6dn
ip3gZzAe/t9YFZNWbHDn9Xe53N1TTV56mbwUpyBeL/6nuB18s31ZsQbxY9Cx
xrZzwImR+uN1P11L3+28xmX7/LvvMI/DX/WZZZf10++rp0rmrB0+EniuuPfq
+k3Nzb9Zc1rNGzbBd5N7zzN2ZGPX4Fn54ZsX7HZy296ybAeZMcbu9c30Kl1n
/u1Pycxwmz68bPrmv1u6Lr89GSsPqJjaM67bPhqW8F64FH6NX2vzY605NW7w
rW833pvz4dHiWfP/dHapb2wHnFPsunxAWGt4nt+8xjiftPFh16yzsBPdYq7C
UdYjOadPrFnrudjpqc/4yD3zV7y67y22ipyxNcZNH6qZ69uNdWOi3bmqfpSj
ufdsSybJKhnzTfrYOTgdZn3TCWyBcdGXct+MGTuePyD/FXkJGxgb31jMEnwV
d0G+rLBW+19YaHIqpp2uLjby7vmgdjr/rB8ddurcsPqwtf3ePeEu/eme4q/G
3zR1kOmizsuG2+uJqyaj/m+O8mXLjJU/gwG+eNW1Tx8a5+o80gNTp+hPl+2b
GqfDVzO1uT6/fFlxi5UjOWdLE+tOf+i/vQ39avzDlmxceYJn2z2NedzOdIBv
hKfojeFX+9uN0++fa+T/sS7io4PJXa+eQrkqvqu6yfROHInVgKdz6LJiscox
LDdKP8j2/bj0Ry5OdXs0ssq+5bOCeYzBjnO54q/YBPIbJ17+57jcvXf2Q5+5
mTpAv3vVVc9/5Z3eNTHs37viqeJmZ/PPWoHVE6zeDZvc+eDdWsztiU/8Eze7
953t7omTIexUDNXJc6UNL8Xb0HUyEIfV+BTed3Em5LNyz8kdeuKrk3uBPBe/
p59+W95K9emKUZ+199FlH2rzL3QP/5XrbHS5hNqwgrEOU7HDMJWxqAZ6mCrf
FF188lblv6JrtcsNrN0Z39k2f2Gq2q5bG5u36To3DF+Vc97ZX+3q41RPxPXa
8BhcAR9Uc5BMkqP2HbBWa8ec2xezicarfCU2rlhic3rGHgyn3ctL1w0PzasX
f3v4Sj8GW4/Pyn3lEp6xWHf9V+YRnggbd7/fWheDxZ9e76n2Bx3BXrCHxS+X
Mzi8qL9yxaFVL9sYGl/fCgv47dTS+ezN8O7/6VrfxWLRJeywfye7u+b90gPs
NPtJx2z+7is3kC3d/q3bah3bG8XtpO90lHfl59E2fr6Vrbe+NzfTOoug37zX
u4Yr8823+XzoUXPaWaS2/heHT7fS++SPDPk+46s/1vDUsf7WeubU8PzwslPD
1/SJ5ZMpZiMeQv0ffv+HLr23a3etcR7c+N5rHwpLhMHim5r4kPcuXGH+jR+s
ZwzL76i+szlmJ+M5n/pwk8/onmo3d+5GBnyruRu+p8cu7ibYQ7/jyi7nki0e
Loa3LR3AJs45/NcuW7wx3qO+s1yn8F5npicHdXlbxqF6tVNf8WsXR6J1QA6G
1+ftVz13+iV8NTERf3wz+RiPrRgb48MnQPb1C644892K04avisViu4uFhk/K
p4Nbikeyxjs7MybVy7jL8V6c+dkuz7c1Ww2Ozg3Zgzi1ykPs3LAzwc4Ty1X3
/Nr6FpdRdZCr12wPqH98GmdcunGAefPvmTf6uHvoY9eNid+613W2r/oOxj89
Q8ePLvmrC2tNfukHl42upg8dT6712dq2Fo35rkN225mgcdDP80wwn4M+k3s2
Er4qH4FNqy7S5iG4aoBWD9ScV3PBvfmv4rJjL3ZOwxVzVR2Q0TOTP1hOimeW
e062jXe+2eS8s+/2ZdURtqZhnupiF4NNHsh5XPTl+ZJ5+r54e/q5PTW8pH++
e+Lbfrrk1rxo59fauPmqJ3ieCcZbVZyV3+a/ymeVL6s4qDjY73JY5ae6W7u5
M8H8VOf5YM+JX/TME/TdnZ9W07nr8V/VLhcqTgbX+QqmTuY/rjPB4ifJz5zd
/mjtBfj0i885sVNngrWtzzBVfq1qNGuPP/2hhcfiVQhfdQ545gNOfa83jku/
i6n81pxZS9X0ZMP/tXa8DcVi6QMfRe9iz9nxahmw4+wbPxXM4Hr8mdUy9m3W
hfa2o0smq9dMzovFgrVcj8u3mjvexf7Gl2Kcip+03osToCs6jy7+ynzlv6qu
zYm13iiv0LjFt2+OjOvI3EeXvYsvizx0NlF9ZzrNeu580Dfl64vvuvxB47Dr
1i+7b3yz8/G3s01k0r+zPWSVboonhI2mS4wbTDU5AS9dtYx9TzFUGyNeMfDw
Q/Eu/Dz0XOdi+kYX00fmGbagH40Dfcq2+t7h1vjDmyO2+GZyWL598YtaD34b
D2O5pNrlFTauZA+GoM/IOfnxDOMXNgt/4W7iq4m3IS5l+pO80Q/5E9pXssvG
gk/APfrOR2eMyJy2MRounT9bNtE8s11Tn3li5qsfXf2dyfV5dvXFWjDP5gJ+
LjfBnHq/fmiXQ8dPnm2lc+JVpUt9P9mlh/n4yOLGmzeth/Kkdk3KhZfi08jX
WTw72azmVPkj1rC+tDff+ZHX3tzvzOfkIzy/vtt1+yYyan9afRz6Q592nNeS
z2z9+Ne+uDBknE7hq7BWvFhsfe3O0apLGNay7shisVjhq/je/dHuPEt79l7/
eK3ZMx6+88E4ecoxPP1Xb3Ru2PX8YNaEfk7u8mvXuaE/sErnm3SXeZ7/f+rC
Tvrp740Fln33p3GIOysMU8wn3Gmc9cGags+tJTbCftN5ID2v//T68Kh8aK1t
9hum8i3WJUxYfnB7WGNy+qxgiYmJmJgrsuWP58aPYl7jV6lG1cSBf/GqbwVj
VifU8+xT6J8dS3qvGrX5weJAiKeaLnJP/HJk25iWb06Gwlfjv33lUe3qrcSB
QP/TM3BXOT3svG+ybs1B/DDkxnvpZbZx8Ob31piQC/NL/vNZsbHDu3Y/5qrY
quoJup8en1ya373OAe9yLNyNY+98MFxUO17QE1N1DvhGeKz7i7OKI7R4qnxZ
5QbuGiA7XubBtjHMfwX7VM/a/rl6QGzZ7I0mH4TcVEvF3JzY6Yy/Ov1U+h3W
Cl9NXZNfXm3fPM/96MWx4PqJrzrjC1+Fo+5e76xweGfecbXZ7buYyvXyBE9e
LM+0HvNZnXHvw4V5/7wv/qvOBM86zuGrYjbigCoWka3lp3K/vUm1Y9ipcsnZ
lc4i4Sv/TkdXy9g6pwcmhuLVpX/yl9Ih1RyGtaqzB19ZQ4MHBl+N7/KZq3Zz
+Cr+9rhGteGAYuPht+Jpp4bf15ftoDMnBuk/XPjqxFTGpHEwf3Ey7LFe99OF
9knsU1zHwx/06OYwmhpek3v8+oWvjMmchb34aFgKBtG3HWe21n7nepNDMH4Y
2Mq3+ZuszjnvlxemiqNYP9g39p1u3/v/m7hdvMvfxks/qrHh9+Ri6k7+xeW/
8n57CuvHs/1tDXgee+7fhofm7Tv26IdXDR86k0zoRzGx7VXJFZkxD7BBsbtw
2/BqPL75bJ9ecVDFIPGjztnjiuu9qV5g3IZ7b79w6cR4//EaQ/3zXWwCP9Ou
m7j0KlkiN8O9+ZalE8y1eY4nzfyzkc4fYaPOtqxTOomddH1z+Vw4sHpAUwfw
by7u6Nl7vHzVsLbWjC9slj/NPPptuLAcdrLVc+iF6lbTC95tLmdf/+jNfP+j
D9QfDFOxHcVf5UvRtkasY3MDb0zexrSLey8WSztfVrzu+l2NwuLercHiyd0T
7tI+fVzbBl85v7WrLZv/qnY5Bee5Yfzwd/HVGTMfb4N2eTflQ/XeOLK0q5Wj
z9rDLfq9dcZXrWe4y1ryDvdUB6fnF/MAh1s79Bvs6//pQOcxruu/+bOO9JMe
Y8tPniv2jk2cfKH3r376f/hBf4wv2RwOib9f9jfOLlikmp77nGHJZ+uUTow7
JZ0ebvE8a42ceYfzi3hErVWy5ZvZhbgWi1EZjpeXlwxbv8WcWItxVe08jsU7
Sp6nDvnwzFtj7MRwrQ4vfXki8bPYh/ouurH4AliIvJw+K2NirMq3qn5NPO2+
56xrc5eDnd44zwqHk+D1i4eB3g1fFVt18jCc9QTDSCcvaHHs8VydZ4Wd8RXT
bt6LYy/Oqtj1Yq68K0xVnFW+XParvNo5455zczJTnWsyXM4+HELndQ544qvy
BO/Gt5Nz+t11vrbOAYtLdz18FaZyPcxDfxd/FY4q/urkEXV9eJPffrXjWDjb
YbCwU9fzXxV/Bb93/8QTPXTZJviqmCvf1plgse6uk1f3kMn8VyeOstaMkfVI
55OjzgRhEpihesed9cBX7ZvaZ1lb6Z+Z1zkfnH8bTuZ8WVPL+kdXXuHE4f3B
Wl9hKmM/eH34GZrT+LL8lq3srGF8ut9+IN6+M77yK8/xKb/YfKc3jHt8R8a9
OqWe01kTmTQG7SXJtnGlK42fMYlPuPM/c7HjidYZWTnV5mLXeVgxBtb8jPnL
y1/ke2AwOqizQn2jQ/nG44bw/F1zfsWTe1f+H/3zfHpt+A/+3e3EfL957eHY
FDIcH6k+6oPnGndtz4N9q1lE5w2fyjO7Bv3seY2h/4/b6uRbgFddC4/qf5zw
2v6NbieT8JV54guin32X8wj7bHuMfIHslr6RE+venBhD60x/4Sq6lP9Y25qE
OT3HvMenSOfAEdXGFW/gPZ5pXunB4uTv50a9suoc+Tbf27xUB6S62PkBqo9g
vquZuOseXLV0nQmS133WsX4L3x5jc9s72en4UZ2PWNPxdFWv5279QXJ08otO
ncknr3Zco/pycrmfXKPWuDH3TZ0Vxtsw/oPvLgxDhsNX1S9zf3imPVG5hKf/
yt/hpZMjq5o7temEE3fpQ/FL3pXd0YfwG6xY7L12nNXVeh6M+HsXL6X+hNng
JbJEB3mvvbI14R5rjJy4h+y4Tu9NXdJ3XfgKlqcbzSUZ1c/4vuArYzL+l6eu
GCTzpV/hK3MSN+bU83l5yXMcUZ0DlntCVq218a9O/fTumRoWX1jyVg3x/K7G
gC0ojrf65/qXLtXv4lXo4upYaVcfkJx7vrZ9WXsT+z3PiFeH/veezrPMlzWr
f9XJYMvoB3s3z5p4/MdvhxvshxemmlrOv3vVEykHsDHMNrGrb1SXuRo38a6f
XArFX7k/XtB8VnOOcv/s726c1XkOePKxF9MeHitP8KyP02/DV9Vonjy/167a
N8a+es2u2zPmpypnkDxVl6c9DswfP1I5gOGr7HLcVp0Dxs/g3fmsYCR2Xds4
nvgqjoXOBIu/Khar3MDTZ+X5J0+7Z55YqzO+8xzwri/Luus6nhT3kw+4Jj8Y
e1I+ILtFLtho+pldsS6sMXatOKvTr8Wearsev1wx7dYgnEEW4mqAzcpJ9O7y
xvQxbnL2qLMpuqK8ic4HO8uzbsJFbPbkGz9z8WL5xurjVHNwcP9Hl10MJ8/5
7evrmb6zfKXZQ3xzrVM2nF4JX9EV4av8eLXZ3bBo+YO+k07Utpbjk2Q/rNOp
SbN8gVf+4OQyfnDXYvjmdd6nf3xlcMTmTFnj5rvZUb60/FRkdWrBPHKTXXT+
Zfzbh2ZfzZF7di3zm3zo3sW2Ty7PY0u3WG/6Fq80/acNY+uDefYNxsqaMta+
lywY43LXrAdzRZ79ho4mR2FF/TLnngOrkNXqWA636cert7P217BOOIR8GoPq
nRX33hmu74gbR7/1x1rcZ9sr/8ja1Ue2iS2jg83RcA+/smJlybjxJEfxN9BR
xbrkJ/Z95VLFT1XcSH6qarRVA3f7t67aB/mp6DNrzbjsmkjLNsVTEaaKk8F7
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
uHJmvU/96OHC2nXmlw/ZvgCeMeb5cPyxtttrxodD/tlS7yhnsPxx180nPdb5
XfHq+azO+sudDxZnxUYWf1VcVu3yBPMd/f/VZT7xlXGqnmD3hJG6fvqyimMv
dus8E4yTobis8iLzw2vbc8WXUj1B+jh8VW1KdtHYkVt+Vu8KU8GIP/3f/8er
7XocVq6bM/o/n5U14B4yqh3uOtthsM4K2fep4/X2i180n1X+rrPmYDwMxVOZ
12Ko7uIrfqp8Vvm1Tv/VeT4YvrLuy+/b9ZouvFQ8oXvCV+QiDOY6jFGccDlc
5rB9R+eG+cSK7/I91hP9HL6y/s1R/IHtxeJe7nywmKv8V/BVeQpxilYfp7qE
MKw+Gmc+kXyScT8ZZ/ax88E5J//W0lEnvqoONf3Qd/ld9bO8v/rXZI9t0U/t
uNzpSmMztu1m5aNtG7jsVGcYMJu1bzziFCXfns9WxSnKZrJD9n3V3OXD10+/
0U/70R2rvf692CTtqQ/zvvW3tULv0T/DyTe8ZTsnc60jtkvf4neOX8vYdQ/5
Kd8xnTy+nW+tfoZ5rMXx/Ty0xhnmsjcYPqqH1z6fvOivZ8sxhAXpRfFL5U1U
qzDePzIIH5E/686Y+za6j33SL7pgeJzesWQCHvAb+y57tGqNDbfHHy4/1eDx
59b72ULvMqd+E8fg5AAO13Rt/WPTrCl99r2wz5zB3ffFdZbnW2EKNqt2NiUc
pU/WR7lX+tt6HFz97L1i+qsnYjxgPThpfB6fXnbS+shO2vvYI/h/e9hiseiM
Yt3Z6+Lbz5gr9j1sWf5g8Vf+rm57/isYhqz5vvMcMF+WP7XjxPM7/3/3nPE8
QyxeKx51Y68P+bu083FVg0Zb/+OTh5fI/sROPXXhMfdXr/bkkvLezhaLHY3/
YThT/mX5r+LroK+cRZBfeow+LhcJ5qKr6TH2zFkuHWWt0GvuZ0PoG88kw+wO
rAtPVfNuuDGGz8qY6SudVtwauS3Wr1rMxV11prz5Yu8N3+zfLRkjb3GVtG/J
l1VMu/v1xf2wFp1AV5A5OoscFt9ePtRZH2dyc2aP73va15/+q84H7QfKAWFX
yK3xpufpBOM/deYfXvJZ/m9cuMYqTunOBI1JZ4Lu157a4P94+a/oyLjitYu5
OvMEw1T5rNjzYq7uxlDld+ocMF9WZ4j5rOIODXfBJvFihZc856zX3JngWa/Z
9fgZyIPr43P9hyumfXNI3059tVcunit/4mm33ugBshy+si+I0ztuKzjK3Ewu
5UfXnsJvXD/PAY1dPqvwlXYY6cRaYSo6rNqC+azOmjh36zhbP53lFWdlLsNL
5tj66Lr2icHu4q7u6Xo89XGPGMvqMm/evqXbT7xERuJpH67v0efmHAYLX3lO
/qv2I+yZ9WXt0AfeyU9CNjbH0NLb5ebQV51f84GXA3uXk4FP5ORyr/7gyX/F
lnT+G746cwn9lt4LXw3327eunOvJt//N69ykmDR6A+4zPtY1fem74BbYiexZ
Y743u2w+ij0gt67RDebD7/STfBtb7y1Wx/NP31G+oOHKemXxM1Sr2NxNfPLg
KHqk+Ha6kK1j6/kgjD28VJyr57gXXoAB6ZG4TM1LNaPzI5ffY735LV2k//Rf
Pjvv8bf+0b3mPWxGZw9uf3G9y56EfrMnd5618+Vuhw9qOOTZh3ibYVfP837y
7fvjnrLPMK7srz2bOWH77KHoCTHD1h3b5t/1wzeOvExNzO07Xu+iM9gVeji+
usn5+MrqWzmizuM6r4zv1Bi5x9oZ7tuPb274r11neXGtk484FauJ1hno1HN8
y008QsZcP8+zQs+EPzsrzH9VXqp+6UPxNdZK+Rf0ERnz/3Exlbc+tatffCB/
MC4CMgZ7GP/wlbnq+ubwWljImjo5CvQ3XxaZDVMV3x7mcX94DHZyb5zwYSfX
dwz06sOcCf/NVXt6eJzmt/oBI7nfeLunc0bt4tJr+7fwlb4Vu14/9TGf2/iL
X7rON62v4vzNCb9WuYR0TnwUZLKzJPvKYvncb3wmf/Lp26m98+qS8+oL8wdU
K5x8livqXMDvPIsd6LfeQT9UQ7Fc3c4ETw724hviCzWm8TO0p6vmAv3jfu+z
Tj1fm/4hq/Qn/RA/w1kTJP8/vV9sCX2c3TFvsF/1FHDckenxw764eV1+a40b
/Z/Px9qmD3b8/cJg5tyYTm3sibkl2+PX+fraU1RDpNzAxtAeUB+1J27o9Svm
qnzA8gSLY9c+a9mc8VSul9OXD6r4q+KQ4Z/ODc88Qdd7Zmd8+hYng7bvjZ+k
eK3TZ7VtyHVeUF6AtvGcuNvBV+1ZwlcTg/XUsst+z/7SlWfsuu+Ho2Aq8x+H
1dT9+OiVx1ebbu18MB6GuJs7KyzW/cRX8YWevqy4qtgUeCBMVTxV/qi7+Krz
vtr5tU7cdeKru7hrc01dORrVe9r8Yau983oX7qqOs/tPrLXjmNf+YvMSLWwW
b4P72Uq2AE6Acawnehk+n5pdP1x4pngGuqucVvgK/jnr4HgnrBVPe/UHq080
OV3/cp0JvlG7GGvjrH+n/4ruo7vojvL+2Bw2Ub/ao00t5KlHRyZ9x84VWL4X
69S8lhfDT2UMPNeceyccap/KFhi/YoraW9o/whfmqPxBf+Ai+qJYqWI0zRHd
c+KrrX9Xf8JXcUPHQeq9nulveNY6mrO1X1o4kE7xh421XsaH+cLNkTey1iBb
Ard7lz6bf+Ni3HzT1AF77cLj9IIxKQ61+onGUdv7teNBtV7NkfmGr7wDBiNX
vhPmLNcPvmKn6Br3khPrS7ucXbLlt+Zzzkdm7rx76lVOXTVrCFYmN8bBv0/O
35+tPHE6P/4u36YdN4Ixd27rnmrasgWbS3qtl6kl9Ml1T/v0+GTjWjRu51l8
/mc6uNqgk4M5/qvpw9uXDTL+xa0YozjpZ48y8Vdxj0wO/m+uvQCbSM+ze/Cj
/b559Ntqu4yMfWDJsO/ofHCw731eLBijujBxNWyesyvGGL6Kxx6ugAeqrTBx
BN+7cgzJajUXwhLVP6HvyDw9NnxlTy5ZtJ+eOIg/uZmaYy+seR+9+IU1PnSq
Od81iJb8W4NxivrDDhhv40P302nabN9w23xq28qPX9zsyRjdUt1yY7LrBFwx
bMaIPtF3v6Xf7Uc8a2JVPrWw7tS2/eQDtSHMiz4XtwYf0qnWDP1T3GXymc8q
DvaTeyGO0DhDqtF81m6uXqf7zRX8rx/54a2lYh58C5xSXtWu1bquW1NxME58
z5evOjj26efZenWfyXZ+2mIG2L+d73HVNSb76djqMnuW+2CqiZmaM4vOL+Jq
KH67/Rf9ceYMFotVXemTz6pYrDBS+IqNLXb99EGdOKrzu85ximc4/Vdn3Pv5
W/cXW+X58FX1kuJhMD5+G2d7fq2Tk8E98gTLH6luF7myX6Xv23dMTYgfLftr
rD0Lpip2/TwHPHGU61N36tcfuF6bjoajuh526voZi3VirfxUZ25gPKLxXIWL
7rZPfDVcwL9x4aizfWKwrnd/fLzWRfEtMNJw+768ZBW+at9t3oqtjYdBe2Pt
db/r1c8tft5as89PtzuvoWNgDONNxsk62T7r1yeT7GN5aWdsFVsJw3YmaFzD
VydPu+txjcK2J697Z4vwxMl/RTdVJ4KNODmsir+i39h6fYfJyeHwCL5yM3Vq
3rV0Bb9WsVjk2fcaJ8/XR9jO3LNZxQGcmCrsVL7z6JUXVxy7PrFRxt+YTk3j
961rvoEe2/vL1aYL42kv1h3W6syGXy6fkbnX95NXYWpNzr7TmtEPf/uj/3SQ
8R3M8aZlA9n9zSWwbLS58L3+nzxP7PCHlwxWD1q/Oo+oNhD5mRok71myW61k
99GBzkfiGWZz+b7pIWco1i9Z41vwd/ntxiA+86nR9+c3u+7UslPmixzToeYX
LvHebYOvmh3Zo+bOvOza4BcXInzlfvJl3+Ee/W7tTJ2dTy4cNXP04rp/c5yv
5+yznQfy1stDwTtqfOGMcqx27ciFr+hmssGuk9fqufum+G/JdpzD5obcsoN0
Mhvot3FhGZ+4yuPCykcU7nLdvPj+sFbxbPlzjH/xVMW9xw/WGeL4RT90xUpV
o7A4q+Gd/c5Ve3rXYLy45sjJ+M7/cu/Bn1h2X5t99/3iTHyv8SQ75iFseXKu
uuY57FGcLeyXZ0zezruvWvBk1Rx6l2eSMfcYN2NcXTBjPzxZT1w+bXYjHrbG
33X9yQfMVsRDHEfo5AQ+dcWJGZPiZ/JZ6Zs5jC/UPDmDrq5N2OmsX3CeG27d
sdpxILu/OHPfu9+3fkvPFWdFR7TfDF+Vw17Ncc9sPwIrlMNe23OqD2WeyFq1
G+LRNQ7VzYGv2v8aE2Olr+OLef/mXP/OZYOMMzmnd4xdcVbFXzm3qI5zvizv
OmPdw2Ndr303l7BzQO04FsJO4SvXyXOcV+X9aee/ck/X47A68wTvxsAXo3Xi
rjhF8wFOfbR3X2vtxFdxPueznbO4Hy+b6zf0DexU7LpamcVWuW7shp9nzgTp
YHhJ+8RX5Qzmyzrj2M84q84H4bT8VLXP6yf3gj4U33j6ozofdP/olPvYyXXv
Ou8JX7mej6vcJesrPa9tLOMe2Xkzq7356lbbeqnm4MbCy6bk4/IcNom/hV4q
Toauo7ddG26ex6667dlHc2q+Or8+OUX5r8r7g7WKs4Kv4rkq5mqw2rNrDuOP
rR3vqN/yg+nr1Pz+0FUHwViGQYxdNtCeUX9hMm12Qb/b+0/Myq8ufwJ7DctP
nbyXLp+V35JhOjVfDL09Z9mLg2afv3x/6RNtvzfm1dvg44J1Nt/SveEv+vLV
Ln/QftV6YDeLX6HrilG3L/btmzth6VTyzQZbJ3y4fufvsJC1Zxzz51nfcY3m
73KdboubmW6gF6tjoR1OCnft/Jyb6q+zR+bRetBfz2Z/h8vn75e/kf01Hvah
8WC7Tsbbs0yMzu9evKDeCUfR5eyMtWd+jTM9Qwb1k72z5zc/xoVtyncQx5T5
J//sS7wKnhXvonVR3kGxuMU6+v724+Er95ijnhO/YmvTb73XGHlve5xi3Xed
5MvPAAd21l99xfCYOWMrYC3zZGziGTZ25cOS8+EY/szN6Lm/CONfWIse8p1s
m7kgdyN777/wlXa8DXE4FAMfptYO79tnGd9iq6rvELdnvO7GsTj2k+fBM/3J
b1btnvglXNf/eCSsU23vGi7kz63nx48E1/mbztIe3q+X1x6wXNf4IshqNanH
Pz7cL/yFzgH5f+kp+sfaIq/0296brTY59W9zrv23y1bCY8VTGefyGfU/Xlbf
WHw+fdu3bE7Oe8n6WeOmM8GtI+7Ft1sce7UFux4GMxbkk97zrXFNV9+q2N24
azoTJFfkMKyV7LVPDL8VG2+t0hHk3PeEqegjc9l3GV/6pBgqOql8mTmjePXC
VOWtm7eTMx/WYofpLDqvOoPG1PXqv5y1b04+9nCdZxUD1jlgce9hrXjaXe/8
rngq+OfEVGc+YGeL7skPVjx/+CoMduKuu/FXxX3FwxC+qiZU/ivrLp5AYwUT
jjy+vGSeDvWucgMHdz53nQOGqci8e2afNj6r8otOP9WJtWqHwTpPPH1W4aW7
fqqu1y4nPBxlrYWX7uKosNN5Jmg9uT9s5h7Xtesne3XiK2MEO8WrE6YyxmGq
zsStKXMVj+g+v70X/1XYjEzHyQB7VO9M/1yjm/gHymkLX00s3QcvPo3ir+IR
hX/jXc8HBWvlp4K15lxnfFbGu9qRtY3V+BQHv8HXnkPf+ts9ZJ4ezo9Kvvb+
fulwfaA3O6Ph82lvxX9GV9Dd5JYOoiv5u9iOvZ+7nTpv37yZc6rhOfY+z4lv
vDM+68/e12/9xvizc95Rvg87YE9XTRf4yjgP78XEShlvOI2+jQt04ui/tO7f
fqw1tvZ8w9v/9YWR97Pu6U8x7ebIXBkr42He2SC/01fyUn0O7clD+ev1HDo+
zGbddv7ob2Pd2JBvtsN5MFszuSk/WXLiewZvPnblY9KT5GS4H55Y/ipne3Es
GDNyaDwnPu13rhxk8gZX6j8b6V5j416YytiaG+vC/HWGUu4im1JuOx9UdQPz
TcUFqj0xN6+tdtw+1bWp3ZlIWKv1FU4LX8Ud1PXwVTbIOq1W+9SRHH+CsQ5f
sQlxCPNrlRtLVovFYqfcS/aMG0xijOb8dOo+8w9os8lwVxzv2ttXcnFnGUt4
IPwTX1bc7+b3jHGKnyFMFSeD6+aOTdCOL2u41OeZbO7pT3O9Wj+eGe4KU+mT
5/tW8wlH+T44kN4oHpAuIsfxgloDzp3pGfu+cpfIo3b7O/JMV5NFa06brGt7
/uYpWLmB+j/+gifWOJB/GDWOL+3Oceir4tPC8OQkbtt8VmQsTtpi1E9s7zoZ
ts/x3dUK33Fzl3zGVTV8asOv3rm267BTfMtk7KxjWy6h68VodT7oN9XNicOh
nI7OBMuT1fYt5HY4hb+2/Ev01uiSxy4ONPoBrtBH+Eo7fMVuaLOT3kcfdw4Y
psp/FX4rzsqesrPC6j6f54Z38Vh8WXE4xAXa2Y21FgYrvt098XqFkc7zwbMu
c/EX52/PmPb8Wp0Jxtk+ea3/9eJpLz4Q/hgei79ffR4Z/P5aCzDF5Hg8t+Ix
jNE//R//08Ibw+X93M9hqmKuwl13/VdTV/7+9WKr4lSvXQ1Bz9ePE1+FncJF
w5X8zgtHha+0i6Ga+ICHr+ec/q67760d9uvskgwVi6jdmjprl++8gdXeHK73
8inQ4WzH5Jd+c9mR4TgerAUTwVf079SrmRhvcTH57clS/O2n/yp8NTF2T1/4
x14vbqvw1cjHM2tOOivUrj7O+Cb++ebMHywGfs4zhxPe2qCjrEfzaD16JztL
3uKFss7iePSbbJzfFS9q/thjcukbPWfXzV62iR6iR8NX9j1sXLmUsFM1Aume
fu9e61lf2kvu88LVLqaafhm9OrHVs54+vDDRyauwY85u2texycaQPNH98KBx
sp6sEXLCRk9MwncuXqzhG322PIkrZ2JqBLy04qYnZm/OFs1r3KTTpyfjNVw+
rmrrWOP6Iv7N8zynWvZkIi4mdpnuKg99/B7/aZ39+z1drL/GnDyyoX6rT95P
lswZnegdxcCwR8a2mmtkm+wWf1IMlXXkm8tPLx6YjeisMN8Uvd+54fbdrns2
f/Zqm9/qMm8+/dW2NsiGeTJe5e2S9fDV6UPQT/v61nIxMOSNzfIt5XORy5Pv
8eTH2zzFyw6SiThIw1p8YrOP/M9rzMZ//58vbgdyaZ6KayLb1TE0ruaifMPO
Fo0TndAZYrWVjRP8M3VLvvvAWaF28d7dMxjj95Zd0O6Znu+99FDyUEwiPRAH
BVmqjiT8pv+uj035q3Wd/MDH5U+R+fZ6+kKuw2Dkf2I85h66y3dM/ZKP3Fan
XZ/1cXjD37++RVv/ywPSzzhO47mKV44OtleJz8T6jBc0rJVs71o4V8xVvqMT
XxWvFQ8V36y9GZksj8kYdM/EJAxGmpykifHzbdWunbyiqXmRX2vqtL9++Wyt
9eR2eJOfuCk/unUUTy+5rdZVvKD0hD/k0BiTcTJmTiZ+6MmFPSY/4YkLX5Hn
YqVOHBXWOmOxwlSdFfpt19mR4t7zU4WpOjd0D6xVTHvtM3YdZu5ssbzCu7Wb
z7O/fFyn7yt+hnje4sg6+UXJEh8CWTa34atyiOJl9L3VEmKX4ZThkf/YisFg
r+ArmIdO1aa7+Tj4ssb3/euXLyu/Vjjqbtx78a+1wzaeA1OcbTjHPeGrsJPr
+kCfdT/70LneWYtQH+LOqv5OHPJvxGsKl5yc8+e5+ZkPvnMur9pPxdaaM+18
Fu5pD95vyz2kz8+a0d6d/8o3TE25zy2Zmfq3k68XP3Y5zuY33uO4y/gay/sr
Xt23h6+Kszpjrmp799Qpf2ZhM/Y0/lKyHm+8Z5qT8sR3vsH6lh1vdPFO8AW5
DoewU3RxeRnj83n3sh07NmGNA11VPlp1Ndi7asHyR7Floxe+s7DqcJS9uMbe
2MlTa+9mXuKCpBurP+ia9Tk1Uh9eNmXqJH9wjfP2fV8c7HQSPGnMvE+Ms7/t
dekL/XDP8D+9smK9rK/Jf/7c9vFPXL2/zZ+5ZvPIAJ1rnujV/F2eyXZMTbyH
FrYxx8aTXNDNZN/f1k78eP59cnY/u+ym+Sovm+3Wd/qAfvAuz2Kb6Fh9t5/i
+/Zd9nrkgm2K6776fPS88XQdnqk+d/VrfKd73G+uyic1TrVPPkZ2oXo3+btg
s3ja2ZQzD2tikl65zu7Zss4H8yfTreGluBw9v/h5vzUHZED/O68hH+SdDJQX
Gt+jcSwnMX/s1Ij8zSseyTmA3xkfulrb9dE9L6zrk8cz3Fn0VpjKfBXXza7l
v4Ildl2fpRNq58siy7BWcVl8zvG6xzXqT7Hx/g1WmXic8WXF96ZdPqN3meOz
BlD9KUfSe/PFee95Hr1rxix9NbWD/n5hMHOc7vL+2ad+eL3XfLrfs4cn4vdu
Zzy+t/CSa+7X3rr1qidozRq3qev16vJXlB9cfb3i3U++0M77Oh/M75q8VVOp
2PUTd53yWX2B8/x64iO/fOW6+m3cdPmvrNHwv7Uvxoqs0DP0iXVEj7eHpUd9
C3zmHjoPdjeW8ZZ0tn5/zzs8cPSGd9NL5C0eFeM5NZHW3m5hmHgyXZ9Y0OEI
tZ5OvOR67ThF81/lm6pdfDvdGi/W3fvDYJ0hhqOKvwpTWV9hKu38WvmvimOP
t+E8H4wjQR/sjzof7EywnMH8G3RmdXD4BPIPwyXkYPYtv3O767UsWzw1Tn5x
4aipDf/WC1Oxn3DX+LXfsfCV+WBntM3T6cs6fVy1w0LangMvnW2YR5uNDUeF
u7rHde8Nm518DvE/xOcAO2nDsr7Fnqga09U3nJrHcw+7WV0etq7aK8VNxmE4
8TlfXLbbOmevXS/fsDjbcFe+3PCVe8i8d/h3+nxzVaz1Vfywtr5YG7N/evI2
/0ocfeX0kcn4RavdHCfMrnX8c1irOCvzFie/ueqsEL5yDx1onXumvWqxPeZc
3+ihjXfXt1grbJxxY5PZWdfNH91LJskt/eK5cy498TXklm6g22GUyVv6TvxW
99IbxpbunppJr9/EPeGd+jY46r1rzMv9ic+IrqPrfZvn+V117obT4MuXf2zH
c6x58w5jQPbIJb1UDq4YCX/7dnbNfA7nxlfWXjkuhZHJH9+UG0HXGx82Y7gx
h+dh8Pa/rNg07yFnnmneyAI9MnWaXsw3s/Dc1P95z+qT99MhvocMkHe/0Yfh
vXxk7VPYQfNPrqwvz3IfuxlHh2+Kd9ocasNt4aj42TsTjLsVnvDbbNmuAXlT
LbRs1s6Zu2xTMVQ7b2Hnlf/t1S4PK+7QcrI2j9fFJ5sNsk7iSzlztcpF9d7i
ZOK74ysgf525kJ+Rld+8OB/CcuaoGGN7wuLe5azFC0c/6+PEVr53+SE9n70I
+9Nb1Yme+NNVC/Nmcm7+t8uP1PkgnRB3ljmNwwHGqB4xjFTtPHrDd04M2gev
fEPX44d3f1y54Sv/3xmc/4/PQVt/2vd01qnPnYcOv9z/cNtZvXa+u2IC3e+3
5HlqJcz9nZme+H/iDgdH5W/RT/LP9sVzZc7ZX+Mw+aZTq8tc77oLV52+4gfi
Di0+MB9pNQW0h9NjuHDP2CrteHFPfFXNdO3hgXlx+WnJYTEk7JDfkYGpkTo+
UmvYveRkdMvE+5387dZ/7YmT/cCS1WK0wlf58yfG/JmrnqB3VPcqfPWv+a/c
E+7qjO/EVGEn1+NojWs0PFZs1c4zv9re6/5qFIavap/1dOKBZx+7h98pXjXt
N8Jdk2cxZ4XxgOkzTBU/m3b1dOCuqdn746vuqm8PXxkf+nLOUV9efgZrhKzS
t55n3OAre1V97UyQfdUeP/U7F74i6/SHve3pv/q32vmspkbXwwuP2Vc4q9T2
fL4K93j+cMff/+0ZuxUvVnUJ4drwUnFiYSfts84OfFWuYhisuK+TH776hjsf
+l5+3c4ytn66dHL7keGo/OIVf1t+k+udfZhP+99ikOh4a8pYex794puLFaIf
YAK6zDiZq7PWc7lC5fTzn5/+q2oLhq86Eyy+3djmvyq+ffynE3+lbS9p/VUr
tvh2c8WO0vlkzPouRoV9LL84+wu/G1Pv1e7czzvhTHrZt7PbvnHXKrgpj93Y
+rfyBL3XuJHt6k/DOdWwKL7ab5wB0YHeH6/UnNV9eHNTDfeUMd+xyffCeezm
rmmzZM3atY7oJfhnuM5eWLrNmmN78x+ZI3LOTxefg/XdOeDE7/3hTbwtxVP7
njAVrAWvk3/v923eOXnJz63x8HzfRE/7jTGgj6wr32TOzJf3kwM609/Gz/z6
fWfN5tK86Fsx4fv8as1jMWb5qeBS9+xY5jXO7Jl51yYr2R1jXezTzh9Y66gc
w7MmTnvs8M8+Z73Xfqe8rc6Lw1fF0pOLcFr1cz2nM0Tt6iu5P5urTTbifrQ2
2GXfbl7JGDnv/NFzzBc8pg/myT1zNv3OJdvDifTu27n3z646hp4Dd7lGhmAt
1+I3mHziz9+Mz/7zV33D6umUkxjO8Xf5cXG2ha9qk2XjFKco+aFPqrUHn3TG
4brnFJ+w52O1zV9+9c4o+238LfFxlWvs/9lofS6nT58933d5Rn2onqd+mg/r
Aw6sxrS+wVrxsXtP/pa4tdvD0gEnr45+hO3Pc8Cdc3CvXKPa+2zz8q8me8ao
euL6C8/nFy3HvPNrNuKMv6JPO78uf6d1G6dofi39h1PgdrqDXsln5fvLW3dP
+Cpe99YO/an/Uz/wibXm8nuLyWKT4ZbOBzsfcT3eQTKZfzu/U7UF6b+w0Jkz
mG8q3BWOcr36OMVihZ28r3Z+re73TDrS/fCV8XK/MxG2J3xVPLx2vO58mJ0J
WnfFtMNRnRvGsdz12tbsf9s1ndmv4hv5DcoZYcuSc7bb86wv2CN8BUfBNvQE
fGUf6xmuG2u2Bb6ClzortE7CVHevw2P5qehu1yeO837b8/OJsWNhKs8sBv4u
l3sYqRqFxj0O0mKoyjcMm8XzkO8r/FZcVmeafBTF5Vov4atiFNub5IPNrxUX
YvnjMNXs3yc3qpj2MwYJdvA+62tiL35j2d/4RfNfGT9zlf6kL/Lzs9Xmnf+K
Da6+Mx9QMQz5Isy1dvUHT64GWMtepfjS4UP98MIS1Qsr1pFcGJfh7nnkdmrk
fmbhq2qVbtx3b3Kt37nOyPTTGYrf+vc9HwtDVlfUmA2Oe3zZ7fSYMYmTYfNW
XnHvnpfdr46qf/NHjlj7SrplzlN+sPLFzHNc7voXfpgc9q8tPwYdSUbJmnXJ
B0SvhLnCTtUTNB/xvPJ1jbz+eLV9c9ykp2/KWq+mK/1VbgS/qrUME3sfeTBH
ZAxOYHfNj/+nJ/VtasA8tOTYuJK7yVl7ePmpyQB9BB/+y//zv96Ob+XNa/0U
CxS/etzl8T/Ty83pWSe6HKtq2ZQb5fvYEfZin+csmxVeqo5s+e/mqPuridMz
i5Mvbyt757r7rYew/ZmTcsYww43xNrheu7qEnfuXwxhnaWcx8WgVn+mZ5tmZ
41lzc/ZLb18+h7AWHRDWcs16MfZnvJZr5mD02V+svUJnheGoauuUb3j6r+gh
7XxQdEVcT/m1wk75tU4fl3vyZXXOGAarXox7hkN0cvGqb8AnVu3C8lj9oaOM
kfWavmK/nf25RubFIVg/9JK2a/7fmWY1XGAt/z68S08tfUgv5bPyp5wg3z/5
xZ+7Yl/zYe6zx3vtb+1/44xKDjsrjJMhnqszhvD0tXb23f6imEBjWaz71KZ6
4eJO7PzauqO3quNencGpS/bBi7eZPjziL2/KVa/tnvguNvfSslnV6CST9JZ9
U7F/dK7fkSt/G3PjqR/xsVcHJ15Q2C2MFHfoeT7oOWecVb6mfFa186t7juvF
YrlezNWZY1jtm3CU9dL9fMLkSjtfVrwN8JXrfFZ0p9+Gr/QTdsp/xf9/tuOc
hI86d+YDGs65f1g2IJ+w9T48It9bfSD77Ax96x2DNecckK098ZX2xMs+vPDV
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
b/I+z8menLaDvrWPjkvUmOe/6kwwzoT8ZZ2VbB6mK0YrrHW3Jsjp/ymWadc0
vvgb4x11T/npndG3Bk+Ox3BasS5hreJbTqyVn7kabfnHdt7Pz2GwYt3d0/1x
PsQVCTd3RtP3FjNn3qsxXS6YOShW07c4s47XjN7g12IrvQs2qJZ09QFhrfEx
ToxW/KVk7eRzsIbo0c4N6Y049Iq/KuYqu0CfzP7p1at2jHlrH0fX8FOxM3Gw
wzb+xL8XdqLjtOmKcv+rMeG++F7CVGS0tv3G5nxa9+98uM3D+wvLLhl3ffCN
8T2yJeXXTAzVI+usoXi8k2OhOHLjbE0aJzKpPfztb7opN7Z4TvLjfvLv/XGp
nbG4xYoUcxVWrxZ5ftFk8uRVs6+F+YqVjI/dGMTFZf2Gl4xvGH5qoU7tp5Mz
JPzmepy6rffwFZmhV+C4uA09AybvLI9dPesp02HVB+wMcepL/tIVT+UbOr9j
m4qJKs68s7zu2XEkq2aXNrlihzd/4jpb897zHLCYqzBY8VfFsYepnP21L6An
i/GjP+O54puK38P1MJVYnbjUYKBiC+1zrRv6ADZu/wIbTf7u93ddp19b33Li
JfjKHkYMl+vGXbv8Qc+Df9j+8XEMNqPzw1ThruLkw1He33lice/FZZUzGO46
axeavxM7abs/7gVt8wSL872YJ2sVBjNPE5897epTG3dz7yyMvd813JZs7LOC
S7efWIv+OjFV7WJXrB1t667ck54zvoiR/+1TW+tr8tEmvh3GLs7aWPo9HENP
7nP05bevrjd9lf8KvjIG1Xpmj8slNGb/Gr6aPIpnr3xDY1iMlvvpvLjiPaNa
sXQW3b7j7W6q9dKZ4HARTCwoPQBb0l3kgD4pr9V6Z8ezuWHXfEpxdZoH6499
IcPeVQx8vEzuzw9DX3beZ0ytBzrKvO0Y8HUd1qMDmwNzB9d1nX4jZ9aXvnd2
SlaLd5pYyvHzeO/k7w6/oDVqDNxDB3gu3UT+9D0dt3HhWkubl/mq0W0v5Z6w
3pwRvrTkyNmf8aUDzKF5KT6V/63cgTDj5nZfdmb4FV+/NzkXn1/7dHMUDwP9
HG7UnnrDr1wxV+UPkgM2JV9k+ty3VzfHe8uNag8Ch8SPXd3A1kj1u7WNbXHs
5rRY9zO3Kz9z6y7sdMZP9lv3lDvfmXHYb3J+h8PtxE67Pvnqv7XXPmLy6O7j
Sdi+eJjyCsujd8+ZFzPxdFO32lqobvXObbr4J6v5a61NHew/WntqfZ+8zndf
Ndbpv7hM6c5wFz/DcM1++4HafHRL54bFjVsr9CF7XB4fHWAOYS2yTD/wcZFP
/c03Fb6id0/sREa7h3yKsyr2RrtzwPiT2Ui2aHM8Lb+KNVhcUPVzd3ztTTLM
T3jmSuRrNV9w6XDoPXTxtmkbLzLc9cHAb7qpBgF85Tl0mrmwFjZf17Wn6Nyw
GjrFEyYbcb9rG4u4qqznuGGKY/feXZdu3WOc4gnJZ1UdAd/unuHie9dVDzr8
Vq3DfPjWY3W68xOad/NiXk//FTxfbT5+1HIz44kyH9WsqX5fOXpdj+czzJMP
yryf8VGd67l++rLCTrU9R/uN4qw8nz6s1jM7X64En1UxV/RpdS7gqDPOKkzl
Ht+rLebKOghfVVc9fev/rc3yPvh7/cY3wFFwzuTtf+zyWbkOh3U+GL6KwyF8
dfqvzFnnd9qe2Tlg2Cz/VfylxW519uc5d8/4vKv4qPHRPLf8TvCEe8wNWYEN
zD35jXe6OMl8B+bF33EjDFfu81cMZDUx6bqTm/f0TYW7Oteohpr7qwd6xpmU
G56/etfZWuvFuHQ+yGfRuSHd6B1TC+b9Oy5n+JbJ4/C8PH3Ve4KpjEFxU2zz
rIHxa4WX4K4z7r0zwZMXa+JEf3rVdx4+tQ9d9dPNYfFX8GH1QeL+qu6L8aQ7
2jvoB8w99SReX/qBPZ9clZcuXAQnGX9zY43mp9JX9mXqg4yv3vPJNf2pXX2c
zrzok6lLMmeC2sVrdRZmvvLJsNeuTT3gxxdmg7vpKeNFXuky648+pIvJlud7
146Hvc4HzVmconRDHIG+nU0rh9N7ign2TPM6e8vvrz3u7Fu/tmR2YgfHx0Un
uE9//L8xogOmPvrkLc4Z7i+sPY5n6ZO5Nhb5rOh040AW9xntxRsWvoqT4eS8
OnGX3w5H/eAQ77SPzjZ1tkJu2o+c/Ng71mHdk8+qfU1yVXzXGQ9fXmH46uTZ
7vyx62cucL4vY5yfKuykHacEbFNcTd+o7bvKkXRPXBDa8cD7FraruifVIS02
Pl/H5gpZOmRy8F65aveQVW1z5l3anm+c3U/+ylskG2yrfu7zgDW/w9v2/NJV
7I45hu/sTflxjTedXf1zPmp/W2fxw5Br+sdcFt/emV0xWvpY3EJ+LX+TbfdY
z+yf3/rOnpm9Y+vzIdAzxteciPnRprvhw332dtXdrg5gZwf+PVmdGgFvvqk+
QfWz8mUV/wRf0Ud+G59bXLjavhWGIfNx2+afNEf5ysLk+U61iy00L/QGPQYX
sZH0lvfEeeX/tcnp1Jp+85pT/dcujn3qbH38pj1bse7kTZvskVXfpf9Tn/mx
pWPZc/tuey92Pl4FNplslUNn7M29/Z5v84eusfZ8dzVn6bKzdgyco+0P30Zc
B/xLxT6x1cVEFSsV1tL2b1Mr/BcvP1U+K/eHu8JUtc849p5vD1IMYf4r4wFf
+dsferI8Dt9bG1Zqr9GZYPagWm3OFn3ffPNHVs6geY5HlN1wDtj5YJwMsFC8
DcOjdB9TuW4+vMdz8l/l44r7/WzHZxWX6cQJPXed/bkOU3WuZ/2TI21zo898
L+Z4eIQ+suvevL5wiHmhF4wVDEX2Jv/9bQs7nf75sz6C+6qDGSdPur04yXLD
yTS7Y+/J9ofHtLMdnjlxQVPHPE4Sz+ET8n762Thal9baxqBrjZOr6o7mv7IG
6aKJ8fzBdT6488/WOFUrx1iSp+Kyinuful6vP3CGWN3n/Ff5uzzTuptYnd/b
Z+/fXrqOboJhvId+i1NUm+11j+8hp9UJt+5hAfsvYwl3kV9zGv7xzPHjP3Lx
JrEdxrUzwfx66U/3hLX8G5tIZ7pOHxrDzqHylZlH7TMeI2xMF/kDX+V7h21g
TWsAbiBfvm/Hld5OjbAXF0Yy7vS9tdZZ5PaprPPEfE/G07gb43IBrVW+vs1f
uHSad+qD/g0mndxQ+wf7H2NKZ7jum6dm40MrJkdf+aDNjX835t5Nd5Kd6jfO
3v/1hSfJIjtlTKZ2y4wbO6xtfuJlrV2Okm8vtvbk7YGdzGN1o8uLr56OdRf/
Z3n05/lgWKg9jnb8Wqdv2XPiztIOa3W9e/Iz5FuoHjSM1BnlXf7ScJf18EZc
8Z0Zxf1YPIy54H/wHDIUHqCrilW2BoptnrzeP1z6iYyVZ1msJrxA/w0P8TeW
zarOufbUiP7+skFxoXedDNqbji754YqZMRY7H/e2/BI6x730hjMjOma4Jj+w
7Bu54tdyzXeU6+c6HxR8Vd0Ha98exT10gG91vboH7ndt6hW8fz3fb6vjZk05
0yDz3qHPnWn6Nzqhuon5M4urNM5hqs7+yKexra6odUt+zG/1+8Jjxsn8tn8s
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
IIfadHg+K9eqt5H/yrfEW0LOxt6+uvCwMdjcM1fdAfsO903u4n1/VLFVdDN8
5SyPjs+nFC9WdZ/DTuGl+NXDUfR8fqoTa01tvOeusyJrwb7c860XeELbmjKO
ZES/4oNt7sxTvDR04PDIPb90JtvJLpeTFr46uaOn3u7DP5d/Qc7YZevIOi8e
e5/FXjaCz+TkcE63F9N48gLpb33Th/YyZJkNYgus83xubGEchuTWurQuzAk5
JYvWhX5MTYin13ySgeJIOx80P+yV9hmXNXj5ny4+Uu3isnwrfOWeqRH++1ed
9LhoilN1bs0+2C/A+dbL1KmZmozbj3/T3ptdNp5suPvz9Re/PHP5yLJHJ76q
hoUxNz7Frlob/FTmvxhp9pduoMfaE1Yvrzy4YhXoNt8VTss+0Z9j77665tf7
dw2zm/jT6RPjQu79ng6g98yV+SDrO8ds7cnpCmttcnk+sb97MBsdOTmxry/9
Yc3Ct9aDuSSbUwtx5X0t2YeX4sWxNowdPGv9bL/e7ZxDfXnp2qkN/sE1bua7
Onswoblwj2+gi7Sr9e079MXv6YfN27jsRXmXbI0xN27Wjr5mR1pf2uWz+62+
WxdnTedqq7Xuwk7u1+6e066dtXWKh3F/eK/fnpjq9C3c9TPkr27fRG/G51b9
xLBWMVdnDSA2IIzne4unIhPFlZkbc2FM6H9jYDzg2/LI6FTfZv6qKWONaJMl
8ggj7RzOFbvuHn13vfo1sNP2xa/fxt9uDx2/aLEH7IV2/O30TBwO8M/og39c
7bis4aUwWL4y8mm/ru2PZw6Xymvrnsl1fm09v/pudIs1aU3xWRkjss1PRV/s
uKS1h7NW6KXwFb0HE5BZ+o0vQ5ses2ev7i1bxiazNdp8JMaKn8L9ZF0/rdet
W9dcWP/JQ+fjYfvixq2FMH85Mua1s++4Svhmzfus2+fWs30PfUO/w1fWeH4q
epRs6FPXrUt2yr50altNvdr8V/m1tdNx7J3fss2z539pYWbjTKfD3uaic704
bLTD4ca1+uC13R/vMdmqDpr/105u82sZM+3wmLHXH9/OluSzNec7v2jpUPfU
njywv72ua/ut53t3eGzncF/+MffoS/XO+kb3h9PGH/rS8veSrYl3/uE6o69+
gTHUX99erZfOd/zeWoej8kcVQxXWgoXo6WLIyXa+JrbgPOPLx1V8e/jKb13P
r3XWshme4l9ecs5Gm1/2Wt/IkXVHL1vL/j1cUU2BYp/4AcjcxCVO7NOZW1Sc
bbXwYCS6EdbwO/IJR5yYX5v85/ezJqw78msc6QD7cXLAPhUv4T72N9sf1opf
Tp/pkepGVfec7rWmrUc6t7rq1vbUmX7sysu2PsgcnUa2yQ0sGr6iW6y37ZtZ
c1ucVfVatF3XF/cXrwVrVSc5vixjQ4+NXX3b4rExLsaAfi4Wy7+V22JMjDk7
W2yzdQHHWRf6aT367ZyDf+nKEYtrfWpG/MXFAajNJ5kvMexULa3NSXblVmuX
B1QsXPowrgYyZ/7N2+SpfPwmn7jnky/rrXPMzQmxuBfoLH3zveUVknlta7az
WO9sv0QH79osaz2aj84Tja+17P/pMzqWDFkDk9P9yMUP1riay2odzlnAcDj4
FmPqPdYYGQlzV09juF7Hzy3Xw5x6L51jfMs9bO7oOvYg37cxMM/GGj92NTfD
Qn4b9rCmko1wi7lufsMn+a+s02J3T86TYoabx3xT+RiLrWqtnZgnf1fc72f7
5LXrerFbxVbFm1T96GruFFdffHuYqveShXiJp77kr17ng9Y6OWSD2kNZ4+33
izmn2+jO2vBS9Qftj41R7b2W1l4sW1Oe4Pinnrg4GcJX5C++d/doV08tDtK4
3ycv6h8u/ROmKpdKe+rnfP+Kh/ebcFc+MfIR71Yxz3zg5J18ha/IDv3GhqWL
+B3IIUxl/8HuhanIKf3GvoS1tP2+6/Yv4S5tNst+39497sQ5m3pivcs9+uI7
4Jrhmh6OOHqgON7iT6wF86pt3s0n3WW+T5+ANcZv5t7h+JyY0I111vPDVOUG
1o6b1JoyZtmyzj6so8ldmfirM3/QuMSdzN8yHKZvWjiTnhou0vfcTo749xaO
0m9zyRdSHLuxHFmYWD5zqi32aedJXs+hy/jErWFyVryW9XH6x9j/ORv/6s2c
97649O7kbH92jSVfJjtRbtrOyVltY6DdPnDqQgwes0bovTCbds+HXcJ49pv1
wTPrG1vserXHitGb+OIvru+1RyCDxjO8lG/Kfims5fr2Ry79S7e6XnxU/qgT
O5XfRz5P/1Xx6rXJtnmyXmAq/kFyVH3JnRN25R2b4+o3TYziJ1f7POOrPkW8
NNW7tB6K5Zhab0+sZ/pOa4J8FvtkntjH6mlak57rGdaYfrEpxnPnii+7VZxI
/l7ropx0sl09WXo1nxUbsesHLkxIH9Hzfn+2jbuYjfGJ/dbt2PM/X/pq740X
vqrWeXzId31W+anCTsW6h6/cT1/FySTW3bz4jfuL56YD3Wt9WY+bn+Jmzq4m
R7icdNeNGxmENaq5rU++3XfNmP/5Oj/tjCRfnzko/plcd25oTdBp2Tg6xL+b
R+uPXrEeisWaGoQPLf0Wz4Z3zvn8cNIYs30Gdhu/sbXmW3sPedNn69G1n937
6H0u8feu9di5IfnVJjPWt2dWy448dFY83ELPxlGxMK856JneOTV5/nLpUTha
2xiTy+pEWz90yXDbv+WKDRt9++X1bL/3/WR28v2/vJ4D63a26T6yPHUnX7vy
AvJ9Tf20t61vPPMl3RPngO9sHwQ36BN/FNk9Y5zMNRvUHIRPfGPxh3GzFx8V
5onXtzq85YuduKv6zqefyvXzPLH4yWJm8nEZ/+Jk7vqs2q8Vq5/9ym6eXKP6
HEfxrkW8rneOY/74U8JXbD75Np7ltpgP2CmMr70x5eXjMh7Wo38nM/m7xqf+
+FVzVjtfhHMB7Wo0G6OpQfjkFZ8MX40fa/h8pkb0Dy4clT/KuISjivvKZzX1
K5684oTPs0X2iF6ho+gWcpj/qpoGfFZsMLmlo9hmawTW6hyb3iPH7Cqdxq5b
g3QXW0M/8c93hqjt3JB+6rq2vb85sM/ovKY6ucbUWTr7Zs7gMfrB/m1swaev
OF42wd4/PuWw1sn/Zt0W3053Ff/lOnwFB1gL2tU0ZafICZ1gbZI964svq71J
PoT8pWSsvYC2fpP1zrPohTjV42w2HtWOME7xjDmnsLZ9h3HSnnOL/7jrpw1v
Q3iMzRqejx8srBUON1fFVvGf5EcqPxEm69yQPBejQI7NZRiJLQ5TTT7P82s+
6N54+tmcyaP9q5vhwX1+ra+pG/DJhcHovXjRYDn3Wkve1Vqj9+KtaS78fxz7
rpP/9DhcdOIr4+v92vAo3QsXdZb3RnipM8Gzvkx2VDtOKueA5ml4lD6y1oW1
Yy9j3Zg79sBY0buT6/3B5ZsiC+Xuua+cHTJBv9F1s6d+eMmVdnF9+UvjCaHT
jO9dTFXNmvaVxm1qJf60elCrj/YQ1iG5Yt/yGWZT9Z18TK2A8f22jsq91/Ze
a7PcovMcIY5fOtn74um1L9B3zwlfGRu6qLjEeJLNb7FYxbHn16JPTo6s4rVc
h9GLv9KeOImPLJtt7cDD/t27T+5TmL14f+1q3lmnnkFn2gfFt2ycfoY77sX/
4ns7IwlH7TrD9+LXg7WqZ8E++l25geTf91mPw3Py5Yu7xjt+9oz/ng4a/9ib
lo3Tp9lnvr5kwLf4TnNJL5FBa+DEbOU20nEwnnnx//oWfzK5M1awsbXpmz2/
ujb0YXgp7gWyM9yz4x+dGOm3XXWo9Zd9mpiK9W9X/R0yS0atHd+k7b2eU44h
HWbt5Vtjh+hcOok+8a3lCunHcAIPRxZdF5fUfPuvLj1Jlj2fLJDTyX//5MWx
kD9q12y8+NjDMNZY8e1nPLnxskbIenip+s5xwheLRR7yfxZjXF258uXjJorn
tryGaime/PBhv874Ovf3rrga9LM4NnLCLlpLZKO6mPm1znPGeOO1h+vjvp4p
R9Maz+fqrLD8EfvasBb73nl454PGyXrcZ+QLO7lGnujjsFZ8enMuOHVzfGt+
qjjei3vnX8qn63q+LL/NTwVHnbFb+azcc3KWlqfPpseb7Twl/u1i2v0/nUZG
w1fDKzG87s4HrSdtck2e4S7Xa7Mv2mEttqV4LW26Du4qdgtWsJ/OThXHFQaL
XxGu+r//r//ldvyD/2H1wXzAC9bS1Jt/aK3vanS2fzTf5ZmSyfwA5Hl4VZ+/
qSYEm1UdHHtVemtjoKsG/MlzFf9J+Cq/NpuoD+bMubzn6Le59X7zHu86mz/z
9vLS2/SiP3FYxTFF1l03ZpMX9aN1jzYdYlyrI0OeOwuOD9m/wV2dHbvHe/0b
f2RYHdaq1oB2Z3ywNv1Ods1NsSedJ5L12St+Zq0Xdmy++6+vfAH2ZHDlx1d7
zh7+fN1jfLYffJ2NatNtYTzrcfgJxqbnP7SWyTwZZvOKrWKXwku1yZLfxZMw
fpCPXdzsd2OuwlS1B8P9wZLhHd+6z8BXHbllA+gBY0InTR78S1fcjvEKY+x6
IDfxn4dPyJW2cZnnPbZk6S43SL7T3b81JsagOjXxULnu/nxQ5m7iif/d5j/9
ybIj2mSXXHbdO91PFvTXGO1z+gsbmzv2NB+M58ZPMjL0xbXfOfkGfVdc0GQy
fFWMBBmgi6xJsm2cqwl14qt8WZ0DTj7B6xemiufqxFfFboWvJmfj6fU7tou8
xNNp/2Kt7Dj99TtzZa9Jx3cGF2+372BbjQVdFM9k+CpfVnxi5psPSjvOpfYm
xpUepje3HV3jQRb8rX/OZazHOZ/9xDVH9p19s2dbv/pqXvR7cnYH81bXeGIY
Prt0ZpgqHk3fmM8yLFEtH9/nuj4bq/IqjcfUPP3GwgA71n6de7bf489JBxlD
urF6OnSDNnvq2XSIMTLHxfLSE8bF71zzbm3rl7wUY67/8VqNL/f19fw543hl
xa2dPiv2Rt9nDb12cemfcYbZkfbnxcMPxn7x8kPGJbXrc9yU49mZYJwb+mdu
iuMq7u7E3tVSLMZ4r8P12zjWqqMUBjNfxWJ5V/n1YT/rNH4Gz4wrLx9dtUuK
y7obMx/3e2emnSPxb7aPtvenG7Tp4Kn3/tcLX9Vmz4391CZ6fGGnYuBbj+6v
XY34cgx3nNmyreayOKvypLTNR3UJ46mmt08MNjVIv3edLQ72evI6Q+wcMJ9V
9he+si6HH/mDF9e3OCtyZP7zX/k3OoftIOPFt4ev2N3aXaf3TnzFrpNzbetA
m96jT+mMau+GteDaauCWWwtrmQ+2vba9SHaTnoPBnMHAC+Etz586Ao8s3TZc
EC9cObPtBYan/BM3nbtb7/RGcb9h+PC8e7KJ2UHyPPVP33VxO+eDrTaBe9jk
uMvMtfH2/zBSfK1xtld/0HzRBTBY2NjYbA7cpf8nhvdHFzarXb6D8Y6rs7bn
aE8N5B//HB4rRt08FxMV7tJP8xF3Ogwedy4dV25INVa1yYc1By9pFytXDNjs
1d673uUeY6Jt3dF11mBntWFd85yvjNySI/bvLnYyjsVfnbl+xcCL14rnqtj4
4bH+2JUnyGdV3Du7zJ9KZ3e2S9Y6p9OnuKHomont++Rqm8/OkcuP6KyZLNHD
nTXH1ZaMTczR8IHEIVPbeE7u/1sv7vTJVX/sijtNt8N+5lZfhqPvp2tczalv
8jtrmnwbw2wNnQBr7TPv5cOMH8PzfQf9WX5HXNDVQRs9P+f19g3VseL/qcZr
8agwQ/4r41vsejyi5QCWMxg/Q9c7K/TbajrHhTW1EueZxlcf7Tf9TYbFgZDx
fGXWCexPh7UH0RfjzwYYG2O7z2SWHTQW2Vm2eJ/n3SvfGL4yDnPmOtwXxsD4
aFt/dI71s32ya0zMk99Yv76D3BlvunXXEltrgKzRc9Y0ndZapbs2V9baP7Z3
0vbvU4fihfVNxs+/m4POnvxbtrs60N7LRgyXz5/sGIavLj9PNRZhDH0lA+bd
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
wBUXDVN1JqhND1W31LyGtaohki/rxFp0Cp1GtvxGGwah4/JlGXvtqSv2iwtf
sRPWFr9WfFl8WWwqWdZmU/kW6En74cmtembhIPJP75Fdz62Ored2VkieO6O5
e1ZYTj07X3wyLKA9nLCPXu3x5Xxs7UvZbTJgbVrHo0Oev3iHipGIQ5tutbaz
C8a0mjvVey3Xg7zlL6VDrD/zbmyMM71tfshSMeqe55uKudKO/8c95qTYqtr5
r8JRxWLBV+UeFg/vOzs3ZDvgBNeriXO27/q1PIcNjUuNTSxeK7+WtrndMf3r
rLC2fWJxXOasvUacEsPL8tjt8MR/aa3H2Y+Nb9k6M4auWxNwBvsIn9G7Z52a
s55g9QHzU5GBE1+NPf7D69ywmsudcXv++Mjev95j/fPF0R/laBUjGlf52Kz7
Z3ZnrJQ1lE+JfJ/XiwM0bp5Bpxrb6sgY/2IYhl/7UxdXRnlpO8Zx2QJrMf9E
55jVWErfTr76h5fdZpvYvV3HY8kDvQBfWa+e3R5oOLRulj0z5nzHvp8e6NwQ
bnGtXLr0sDVFTjs3nDz653dNvYlHtS7oEzpmOGc/cuUG0g/GzrzAWuYtfoZ4
2umWGd9/XvWS9Ffb/eWeFX81nDUfWn/TvfRb/nxrkN7yjexq8SzxAnWumf/q
5NU3l8Vfndyw8RplQ+NP3pyGa37YHrY1+1iN+/iWyV/1BPVpfCKP34tPnv9z
84Yu/FzeRRykvtU9WxaueoX+wE76vG3M2vsY93LFqp+Yj4vfY8fmX7xY7qcL
6Qtrm86c+X9p+dNcixvBM9k6+9NqSHT+aA7gRPNkbx8fYf4o+3S+gV3j9rYY
e2t//NETo8VmkGGyZq9Pv01+81vWubnvyF/k++glsm0dkDMyrO+dJ1pPm+Nv
6aXyN/M7F1MXV5XxLC/P3MUJXO7eyeXbuWHxV9rWfLkScVhVQxDuLb+vM77k
xPo/nxMPDFu26wWtedKmxyZ24d+vGCqyPfHOS84ujtDywc1X/SQPfhP/6sSD
jl99eBJ/67a6AWzQxLp98TofrHaD+a/+8ub2Wv6r2X9/bdlQYzQ10p56gG8h
n2j4KuwUfu8e74Cdqh+nHb4KU03u/Qeu+r8w1fiufrji2OnG/N5kTBu+iq+Y
PqH7/Jvr5RK6Xp4O7ETPVDOavNF37jEH+bJm//zmC1/lyyrHA76yz8iXxb6a
n3xZ+Qo6NwxradOl+bI6A4LbOje0dmCnOEvdw06z/9Xh9azwFazBtrKX5EV/
zDG/iL5aG1P37QsrD8h6yZdljW1u17VXLTfKdTot/gdyQ0dNnPFbl4+CXJmX
OIn1d/Jnvn5hoc4H6X7tMFXXZ52/9sB1vzVvp89q6qi97/KDdT4YvsqvZVzP
us/nuaFrZKgzRP9vforXMr5nLeb8WvCV79q1uC//VdfpPu3OuM3H5E1+dcU3
+p31CO/4Hd3qW6yJqcU23I9zvvHs5V8KU5FF8+v81V41/1VxVmebbITHnP13
Juh91gA76xlh1OEG+8urhmm+dPaiPD56lL4lr+Y9Xlmy0PXyKKd+7twDk5Rr
CauwiWwGfFWtyWrh+e3wNv3RTXnlbLvnn+eA1l91UeLT2LyGF39pfpLq1dJ7
cQwZf+tdf4wNfRm+Gh/Ve2+zY/ZJ1jd9Mbkow7Hp/9mrbR/We2GIzd+/7I5v
7FyluhX6QJ+Y22p2xxGa/6q2Oa+2oL6c+Krr+mkNaHduaO2by8kL+tBttezo
NP++fTNrzdJvZKXzLrqvmGJ9Z1+qDX/6r+gNNsscnlirXMKJ1Xz8ppq1ZKm6
3cVZVS/Pe4xh9e7Lu2dDqxHJttIN1ZSLD6ozt+oaW3vso77Eb+m674MTqinL
P2b+5vtfiMN+9ce/dxZWjWPfZI3ni/Nd9iXVkdYn38guFktfba38KObAb4ez
aHjdzZE+eJ45m1oAUw+W3Bmj4VV967KVcDYbE28D20Bm7B07M3HNu+n4iWn6
8IqBJ5/6U6xH/GNkiR62DuG1uL+M3/CGfeLRcn3z53SWAW93lgEPs9ntzcmA
djVzzRF9UZ6m39IL4fb2R9ViNp7DU/vKA/mD5SHaExb3Hi+E5+w98VV72pxq
W7++y9zYa1ZXwrcnm9aQcTNnw4H80LKV5RL6PZ2R7MOr1cexpsjr1CB68uIR
tfaNlzGAr/xdzcHhE53Y9WoUwkvDfXUfO9WemL/7PFf0CbxUjUK2WLv73ygu
K6wVf7X5rhZ8OYPwVWdG2sVOw1R0hH/z2/JOXB/OxX+69nH5tazV89ww/xW5
jac6DmSYim9ouKp/f8lj+ezhq2Ja4vpjs7XDV54bvmIfiss6cwzzZZl7vob8
D55bjphn5ceAF7TZXziF7+L/a+t+I79rzzvfV1RFVUVF3aoioipijNiqou7r
d0VFxKiKUVUVERVVVeN+EFvs3U0eVEXViFFVWx5ERETFiBhRFZ2oiBqxxYiq
qIiIqjFGjHlQne6d3dd5rPe6jus794PLfd7rt75rnX+O8zg/6/jzOYzfs5y9
8JoxVHONHDrb7Jf2eTZVa59dq/q26c9/lt1Xp2bc255Xv5rMmHPr5H1Xzban
6cc/nDUq5iqfYLbH8JLfFt8eP4O18n5zE3/exl3ZqcjD5naohqBnuid85Qwt
99B8FX+1fYXO03ISzTVcVB2c6tpY52K0rE28uPSafWH+4Dr7proJ9qd9Zy3m
2V88be+iW8n/5Ol98yl5YGPZtQXhJZjZmfroBwyDkYEwVfFaV37e82Jr7Oup
gfHNg0/oHrqTrNP/1SyOI33O88FX5fFpj613cFQ2czqHnq4OJwyTbcrc0mPG
Pvwowx9ycZ4eW8XFH3HHq4fZun/8UW8/55e5NRdTd/Yr1XY6+tD72GnJcPxI
1TUon0zfjNMzJs96al2ZJ/Pi/8mM+TOf2RTpCvpDH6f++MkRfQZPDDf61Ird
PITVpPD36uNM3sVv37wKO54qP2Dt4t7dM2s+Nit9tzfok+rPucf6kk86yljp
W7JjzvS33F7y7btAX9KncQhP7MvUhbzyy+9aEhtfVcOLLmAngWXsFTineJQ4
i/ZvyUExz9uuFf7Zdon8UP5uv01N7eEtu3KwnsVt61z2HudH/FfkNWww9WLe
edcO1of4AItzz4Zjb45t+7eeJpfoK3eO4XyT/tbpT30b3oiJY7fP4wslL8MN
+qVjeys23jzNfX9wfhcfl/+SO/JirGRBP+wz9irjtPYwgzOHbE6Nt/9ynu9Z
ZHBsbMNNbZ6rGRQvn3UnN84NWIEuLB5scnEPx+7ZR9WMNkdxVdELO/d812so
d2/nQZjzzalVLZJqVCUD5sXaVYPc88nj5nYovj3ba3Ev1Qylp+zXbFl0eDGu
5H9s4Z8+7exXY+t+31NcpuwJcQjD28PVMnppYgh/8Y5pp6c9wz/7XZ+MNT+g
f+wf/mtdYCrn5MSX/PrBWtbHWaDt9/BSZ8qjHzAcFb7ShpHCWnFhhbvyD2oP
hpo8QWdQNquwlnZna3EF+QrzQ+UrzJYFX4W12KLyFZLHYrTyG2bLIms7Lou+
qhYo3DXnyo+fdpylsJaz1rPgq3IM6Uny67l0Yzp9c2TBVNZ7aqkPvvKsja/E
0uxYrKlz9updkw4Gcc6OLXL8huYa1rBXyfTUuTt653ybjH37C0cmp1bF+BNr
0yOXbnzVdbJK95GD8FUcC9aXDMTJYF3Y3rIxdv3KJXrddvwM+umZ2SrzG5KD
7FHhqOKsdo3mMNXGUfFlhaPolbBWsVj+Vff54kW+Y92LxfL/9Fq5tOakmj7e
NTjrL8655uzy/+SfPnR/dqTBcL99x/qU7xB3qN+Hr8JaMJXr+QGLxSpP0DqX
f3rlvR2cbx7Nv3mlE0aH/9Kd01ee9Zzbv3vzJMT1XZyV8ypfHrkoRj2+L3rL
mTk1PKaW98Qt/tvbt1jen70Rd9/lOz9nwtRYGG4E+Co/oD1TPGy8ZOZ9ePfH
nj9xyMOFaK6rvQInFT8VvnIukR/fDLAhbGtd/NO2X9kKyAN9Qtadm3T/FT9y
cJ15nG/qTxxfIdxCD5tP+pM+oz/pFutsDTYfuzUytnBU7cf4q3L48w8aC/2Q
P9E9ZCe5su9GRn/1yKf9b42cA/avMV+5K3fcsvmr9k2xVfEgbU4G46+G4GVT
OfNcjWb3T37EF27u7mKrqjWcncp3n3NwfMnTdl0fqqMd3wydffFOPh8/5ptu
/gc2WPc5J+Dqy652zkqyUW3E+LvCb7uWtDmr/tjknv67Y48yT87r8ljYSI3p
inU777dmnm2NyEs87c4PZ2uxwvaCeyd/68NPxSiQWc/zLWT85I38TxzYz50z
x9+cC8N1+aPn+3n27zeeJrfws2fe4lqPv4LMsSkV9zhz+vYTw0vn8D84F8tR
uLjfXvWtZQ3sr+oX5Hcrl9aYjau4ROdB/D9Tt2zi9MhffuRyUavjXGyVfhaX
ov/lYQ3m+dRdKyeuBmsHJ4e/s5WZ67jlnZdker6Lnp4PN8wfneueYT+bW/Pv
/uEF+fhdAysud/fAX1Pj8j03JwPdnM+RzerCkcdORW/pe23Xw1f+lRuY/aq2
80I/3LNjscJX4ajyYmGn6rk/4q4d014NTxjJ2Fz32/i9YartKxy/3/gKyYf7
3EOPFQOfXSusFUdW+Mp5t+Pe6dTwVbFYxb3H7TD55D9+cFf4Ks5SejM+h7CW
s5x+pD/hAOfY5ninM+Eruhm+ClPRn3zk9lf4yhmuzecUvnLmjl/uIwdrwSn/
8x//j9uW5ZpzzlkyXC6DnchCOebx+ZTDkz9R27cMHaW/l0/94CvzFDd7elp/
zat1Kaa9WPf8gK7Tl+7ZPkT9Hq7EsWtl49pxWdmmwlfbflUbBivGPn6G3S7m
qlgsZ+589//daWe/MmfVerbOcThY2/aIZ5pT/6xJ9V3LXc0f5PdsCtYdnhsZ
HR9xdW2Kucp+dcWGn/XLV2itnf2ub59gcezF9Vmb4tiNgQw5V5z75N16xptX
rRl2nOKL/S6blbM4vs3wEj0zXLwT22lM8aaS3b7vyFyxW7uuTZjN7+muanE4
U/TRM/MJ0k3GnE/AXHiG8zx8VS3zcn/K6/cs30WX3eSsnf83B+Ze/+xn8ua/
3kkPe4c+FotFj5DruGTzPXlvXO72lDkxXv3LP6ifO38wPiuyTh7KHwtfFbte
zFU2q31/9iv93Hykng+/wQrFwVp/GE/f6Pvkn8zbS1cO4W3zcU4VywsXOXfK
uavuSfliU+958sKcH52VF3/JS/E25i58Fedkucnm1Ls8p/eGyY0JjrRu17uP
jGRX773wkvGQbc8Ib+SfKjasut5xBTivq1NVrmK4Sx+uGjynP/Y//HBxk5+c
Nfdmg7JG1pksWwMyY07j5sjG459+ZTugg7WnDsHnDjarFjUc1Zpr2y/kxbW4
GMiufVLN6+Y5+5W1c93+ha88gy6xB+AFY4BR9dUam9tqw8TJX72k8tNh8uxu
YaorJ/mu+xym2ryg+YLjeLd3zIt5KC692jfxfuxa8GQD5onr2HXnUL68+UYZ
jmLnQvWdYFN/n++0p7sORd9ExepvfBVfvWeGzZ2p8BodtXGU/W6v5x+Mq8E9
8V+Fo4bz/wN3DTg4R9s6aNu72a/oF/PkfvNiPbWvXLUbU4XTsl9tXnf4qjo4
xV9Ve2W428dvaB7DV9k9nCPxA7in3LQ4srJlkdlyDO3V7Fe+Z90Hazmvdgw8
2dWm66oN7Qygy7Jf1Wbj8CxYK+6sOBziI7Xe9kX2K/gqXiy/L9bdOeCe4q9c
5wOC1eKxYY+BqfiJYJ98hTBLcVnOWveYd3jEuMudJSt89GzrZMQ5xa6VT9C3
+a6Bol/WavjQf/XyqY59yXpZu2xW1iLOqzCVObZHPcfcF4sV1irfUDu/IRnP
rpVPcOcSFktf7Lp7zFHt+N79g4X813VzWp0xa+UcrB0XLl1UXkY2K+1qIJL5
YtftBXLiTJ48xteODJgj82/dyZ81srfDVMbP7oDPv3h17WKu4ChYK5+gNlly
DzwHJ8Tx7hvWuZzNilzoi7W96gocHUKWwzbwRXUwvK8cPW36JExFJ02cwb88
mIqM+AYcroU/PW3X6EJ7go70W/Ph+VNr95W7hvjEdA9mswc6Y+2t4kWn9sIf
HD1mXrJfxZlAt8QZXq54sVhx49Ch5kUf4eS4Ru1NONy5bQ7sP2eOdtfjcCCr
4wv6kedxV0ye3XdedZZM/tiHzvcIOTFvkyv3q0eWpv70h4/8k5V4FeKwgp2y
WQ3v/ot2vr/sV7BW3LP0wMZm8213bCFHH5Jd+nDyev/i8Kg4W43fO10bn8yn
XuKBzH83uVUfO2fWhcueFcfjHOwbfse358cZm+Onbv+gM6ucr56/45zjxXLO
0S/O6+qqm38yAueaV3NYnmN8TeWp+RucUJ5YcV8Xr+cZa3Y2zzIudpj4ibTd
U3+yv8VHOjbTN9/1zOjLq07LXR9n+Do+eTCV+S7Oamot/dHTxAZ/9/CsludJ
B9Otxgjzud+enZj4dxx7gPWyxvM98oZzDrlH2zW/NRd0aHWLXtge33TFv00e
PDmH3+ghcq6P8WzoY/mbww/17jPP3gNPxj1RzdArh+Tmo84/uOsYFhenXb1m
47/06LNi7My/38a/Yf9etp/7t/kEr9ii85zh5/+xM6dXHbvTT/rfs+PEtobW
zrfpcBbO96C++9vkP37sfCvRnWzgwykzeUDVHLS+5Dqb1WD2X7u/tcNX/jl7
yx8MI5Ej7WK0slllvwprha/CYP7ufdm1wlrVR8qfGO4qdks7HJVdy/x5Jlns
uvWjE+iN7Ffa2Te0y/ePz2Fq2v3G0SvbfkVeNp9D3O/5Cqf+3MS600fDL/Ph
o9PCWvY9fBX3uzPE/fARHRr3O30NXzn7ybbz13pnv4IhyH5Yi552HS5xXlYz
2u99t8JazgHXyYpnsWs92rI865/+5/95xuO6c9gehbMm1u+dx2Y1nL2Tb25v
im90ZlnbfOjOc7jFunqP88HaxTW6Y67cp71xlOvFtFuji/fuyjn43h33Pt/8
Y8t69BXCUdtOtfFVPuVyAP3bnKJhLW3YJ5uVua7uwPYDwgnhK9ezWVmDqW/w
tWPvNZdXDdiDo+jG6izns6vGH9wLj5IlbePXzveXnQo35eRhf/QlW1b3hK88
07qbo7GPTAyhvUkmptbcp8/3l28yeqb4q/jP6aTyBOO2ipvLWTO22OFPMJ87
x9l/nQddrxZ29qjhyJxctHhBXdeH6jnmZyyOvRpDMFX1Y42JTjPnruuXtbi4
cl6Nu63vAmdiZzpc5J3W1Tr6f3sAJtQ/fTF/zijnlfWBbfSXnNAbsFH4Kv+g
d1Xft/rsbH3eaZ6r80Wv0g/OP3os+1V8od4f1io3kK4ojt39Xbf3zZHr9n72
K7iLHd376Bz7aLixP3TsV+SAnhgb3D+dM7j4l+HOGB7vK7fp2Jfmm+sLBwvR
A3AFHLLtD2Qiv+Hkwowfh1xUA9pa5vvLNsUm4LnmMKzvTGdfsh/MKf1ZvSZr
UV2YibH61I3f4pYvvz7/Ue+qZgoMQA7NS3wO+S7jSoUzy3d1dmdPM964k9wf
r6C4Nb8bn8xwYdFH5oN+sT8vTorn8YtOPOpXT386g/XZuUxHliNJlqpf5Cyq
FqHrzh/70jobv/X0N+ejuSKz1qY64tbBe2EJf6enyAs95vyD1dxrf5RH6fdX
3YITH+JcFF9X3Rn3+Ht5dvG65teLazTui+xLdFM2qDgcqtfc/dUuJCeb8+ri
fj5rPTz5Ew9GZuLEtq/jnndmTs7N5w7nZ34637LWPp1mTOXDVJveuVRcIh0V
VnUmm/MdczU21F976VzITqUdLwj8kw+oOKswleu77X73dO6EzcJd3e969z/a
taqlEv/VtlmFr3Z78n7/5vYVbqzlb/pmXqw/3ZKvMPuV+9gZyG22LOchOQ1r
Zb8ih/kNqxPtOl0XvrL/ySX9ue1X1TcMXw1H78Ri0af0IfuLdaMzi7+KC8ue
cl6Tj/CVdfUs1+PCcr1cQjYubeeDM91ZPDjlo8+tsTOErmb7Cl9UT4o8qjVf
LWdtZ1a5ruQZXrOXJi/0l+8c8HBRtqls4dmpwlTFZenT9v21dhtrFeteDej8
hvRCOKr4K+MIX1WLMLu7vRaffLFV/hWjnk2jmuOb88p6ZMtyD/mNg4JutWfY
J8e+/CN37l6xUnCRszBfXrl+5otuq/YNrL+xk3b4KlvWnK8T0x4nA9sZvUKW
2NSM35lurpwJwx0y36OwA53v/3d7uNunBs3YRYZjYXjOJy507K9Tz9T8Dyaa
tv/SU+YtX+Hkw/3uzVFfnFXcWZ4VX9/wVr792Kyu2NLnneHGmQ9K2+/Mubkj
s7DBxN/+0LG7XraNg6+GI3F4Rchm3NL2W/U9yYz5zn6lT+bAPtn+QfueHqAn
9I0upa/ZBLx38pjG9uvs8059qQ7F1OX9zYMPyFu86/FfeX95gvkByxkcPrh/
c3RG7fgm6IHqnYSviu+a+qMv/A7OFbblfFPFgV/Y5K6DHEe3tYnzvFyp8ryy
C8VFWS5Ydbs21iqmvd9md4r33xo5l43NO6tlox/mvXy6apHCMJsHPtsrLFd+
YnWonV3F4FV7pfWLs0s/y5EsHr6xuId8FWOW3BvXjj0jCxfXSbaWM4eeXT1o
4yA/ZGVydsenqb/j/3n3+b5zRpF9a0kuyKrvPO04SGEk+2FqBfzEud+5pa1/
w2H/xpsrLE54z4DJnGtkH34lC35H9vXVvoj/s++f8PPmfxvu2r8/cxgng/aO
b4/Podo6zhHt+ECqrRymIm/m3Luq+1Y732J1mfUhXpSJi/rZ2w7vzCynLxxF
Bp2Zrc/U/v3iuWf8DL93xUx+68gDnUinF5s6OW1j0w2zeUf+wXyFxbRPbNtX
75h24y+m3X/9zd7MlvVov8on6Dn2gmfCS66Ho7q/fMOw1vY57nzDuEOKe7cO
4asdo+W8zFcYvir+OY73/IPjn3mZI8v9cWRVu5Dsxkc68UMfvmPdi3sPX21b
1q6zMzzUbz7tXSfauX5xBZ1vZnJOx2a/ohvhDOd5dQntIbgLRvH7aujAWu7J
P+i6M33q9b128FWx7s7i8a397+e83nFZYyt95dg3rAFdyVcIX5Fj+Mp54Uyo
xpxz3hwPZ8e/Ou2pE/He207ozA9fxd+u7d27nU8wO9X2CcbVEK9stQjzD4ap
Nr6ia6ZOyN/fMe30VbYscvJov3Itm9XUEDic0zdfrjYZtgfopSvv5XwHkcPJ
p3ntzD39mX/WXoeF+Ifsy3x/2aaKldr1Ad2z49jFtznrw1d+a+08J5uYubM+
ZIx8Vc93auUORspXZYx02MSav+22n099mQ+cbzQ6NluW3+bjI3PjJ5zcZOfJ
8Cz83M3B7syPX3Q4Bua8ihc0Dqv8gOZIH8mfcXqO+aX7X+QGvnLwDF2k7Rna
9qGxDKfoJ2470pU3f+xI+licdrYa8+K99IMzzveJvsIuZLiaCHHU+Rs5oR+q
X2jcnhMvHJ9g+IouNg++fe0X+ApWpxs3vqpec/ar/IP0QDFXxV/lEyz+JjyW
/Wq4Xv777R+kJ+kZe3C+GT5wc5xWg+niIT5+NGdPHOxTM/GvD+4q5zP7T/Ht
xVBVT6S2NbaWnU3OHDgn3tH4JCf3/kPnbC0m3DudZXG9F8NMDsy7631L++bT
Z+vrLK4GcZjKu9ia4qjsfnoKFiJPxdXrZ/V96lv5hq7DhM7xYq7Mh3flO6sm
9dgx/uZgD32/cvyPPNNn8bfTEWTB97izSD/iEDS/cYJYq3hEzVF2VZh5/FQ/
duSQnMTh7r/Z+pxD/jnH6LC4FX0PwWGe750Tb/T+Z/bOZTN6lb3G3+PBq95H
9i9zaJ6zI1VDLZsV+Svu/arvemTA2V9dv657ZnYt98SPHU9EMXvkszrUcTZ6
1xX7/zQ27nedb8mxQf3rG/P4ZtX2j64dHr7/cPCVv1sD81Ys/9SJHk6ti1v8
yIX5LDYVTksHsllVE81+t/bWOO4F/1/MVf7BfH/5AcmRMzmM5DpdvnHUbpdv
OLUHvn4wkn6/XhxX3KSeaW0mnviDRw+Fu+yTOBycz+UbwlfFvQ+G+s5Lse5x
OJAL91TPZWOt4t6zX8WzC0dVuzCfS7HudF2x7mR/8nbGVxi+ch47W5x9zifn
Br1HDvyGHQk+8hv6Fm6wF2AquMR3M13qu3pjrfCVc3QwxWAte8c95Maz+Ixq
8xVmy+IrNL+ue0++wssO8CqdO/wnP3RiS6q/RvfCaMNH9dVzjoevsl/F0+4c
qbZgNqjwVXwL2amKXXc9W5Z35Pt7vXbc/tUfzD+48VX8tOax+uDFWcWrkN+w
OPZLR975GjBytlnzfsVWHpxpjGTvMe/P3t64yPkHU9nb3WOOtB9r3LifTs0/
eNmTztpdvFDHnmm9rDt8Y/z2Apm9OJmeX/xEZ+zwx1Xr9ayxNpmj57T77qNr
fRtrj3/ufzu2I/rEuUwvFWfVtxudTadVN7D4z2Lj6aW4rcJUxVNox9O5bVbO
lbiRhjPxD8/9cw6N38lZTO9dvqmDqZyjYS32q+Exnfo+neN0l3OKrJrD/IP6
SD53fLtr8JV5oGdhOn3Tx+Ie4Ap6eGIrJh/EWFzTF9+zxZbTA/pN5uz36jLv
3MDq48y34tQlnO+K3zzXJ6bwN+/6zu6Jv53+oZMunsvbL68PxVeQl6ue8fH1
XHHMdw2abIXFrW1O78tO+ZI9KqxVfHKxx+UAul4tIee1tZtcpQ90Zt4168lC
cdRxHDnDjMnf7evLZneeB/9Ue+6Ky7/fm3/Tns/e5RyqxkqcXRsrFmsYF0Gc
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
qN8++EjsD/1JDvymuCz6Hu7SLhbL+T6YYvIN/b64991mz2DLKl6LnWT4O149
dhRni+/5an84szy32Btn/uQFfu2lOjj6aD7Mu+vmuXrNxWV5d77Czbewa9+E
tdyzcVRxVuGujak2P0O87vqsL+Grvt+r6eyZ4Su6cXMyuKeaAp5J1ibn9r1H
Vu1bcsK/4h541dgmN3VsTdZdm12LvoSRjM0cxcmQ/QoeIzewrvO4PEF6Ie4F
zx/M+hsHD9gX6Q3nxdSuHEzl3rCWebhif888hJGGt3Byuaw5feacgLvixiR/
rs3v335jKvIRlqk9/Mg/fecGut9vq5uTfaK6NnSCPdTZVZyVuQ1f+f605zrD
7cXqV5hfz7cu+lQdQDpRG76ZvLi3nrPSfBV740zy/+TJvrQO3l/M1fBCPR0M
Y0zVd7Pe1qa6k/RTuUv0V2dE/kHzw5/uXdaJfqA//M5+t45kFdYaXvvv3zYr
7fIHw1fZtTbWine0e4xt8mM/fPaXd9vf1cQjj/aFc5ieMk/Vo632X3FH5GBz
a2fbsR7OJTgk/2D379w91/3Wmhgn7HHhlJufavOChse0yUr1a5wVxTgVlxVW
cH3yW790c4eGqR5j3d2Tf7B6hfFsGEs1L/N7Drfam5+qp1LOIB3gt8MZ+91T
72bO0JNXcNd0ti+M9eKsOnMz8emfObap6ulkW/dbz/M37yb7ZJ5eynZJ1uMH
JNfutxe80732Gmw1fOSTa+lZ3hFuiiu1mMi4eY2znErPz15U7ebsk+EiYyvO
nB5sL4SdzGF8C8ZWLbbkyruqlZOdbfJYpj3x928+2JRcm2c6gq4uRtS5k07L
HlUNsp0nCP8MF9f7T9v747wyp5dP7Nnk//z48+zf5UR7brmH/tlTPaf2jl33
7/X4QsMw2ZGqazP8aR+6eUG1ux6+0s4GtetBZysLUxXrFafWjnv37OrvXNys
N77qfnORbW3nFe64d+dpeYXF8GiTvR3/GV9W+Kq8wnDU5iCNL8tvyb62+4vL
oj/5S4qBnzPmTTfvaBykzjn7Be6aWJafOW0Ygh0FvoJ3+GroW+cyLLBjsbSd
0Tsuy3PpW7as8Zu9duOr2tmy4Ks4HMgcHKEPnuNdxkwfktvqx1017Z+Pjfgb
L3Gta8NUcbnDEfS7cyqujOKsHmOxul6eYLWbXQ937es7pj0u92rfzHf8f3nK
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
t6df7z9rR9azX+UfjBsqPvbinKv1HI4qbiqug/x34dv8wbv+TjUN868Vf17s
U3FQEzd4eDxvP2C2KeM399WBsxZ009QPGJ75sGK1hssfDPtVA5GPzP3FzJOp
+CXmjP7i/ZzqtuhDNfL0GbbVV2sQR/rU7PhvT/FyNV73eVc+TXNXnPlV4/CM
1zNhSs+wnr534gGLG5YcG79vBjJanBQ/jHeMf/m/nrmiry47zsm9te5xIGy7
U/zt9v/l616cb5M/e31DPKvWdrWiJl9y8mpnD08OSP44uomeNYfm0x43J9r2
n/0+Oe2vHpuV+fH9myxkvzL/ZLuYK2dddYe0rVm1gsxbnPzJ5+RvfiAujecX
j8ZtC8ouVDx5MU7bP7i5rTbHwo6hej1OhuoDul6eBCwx9Za+cdpxLBSXFe4q
Xj1/4vYbFvee7SvcFbfDI29DGGzzM2S/Cl+5b9co3PgqTBWfQ75Cz8yW5f7q
vGybVe3qRMNK2q47k6Zm3uTs5x+kq+POypb16Cvsu4J/ELagN7ctC76aGiTv
uDmy4JFisfIJbvsVfDWx3i/7AbWLv3JOw23hrvIK48vShg+823+NCVbh96Ef
yOfEYb7v2G/ZWfrWcG7Yf8Xq2E9Tm/zNd4y0MdMZ4x946/kGsTc8316gI5zd
5dKy/ZAHa11+H7mEL7Ovmgsy4P8nLu37R5eEqcgEDGbd8ksW32Vval+xFdca
fvfEz/gWtS/MTTFX5owcta+Hl/Tz57rfGQu5Mhf6aT5hOHKz46xgKjaFsJY1
omNg5saWfNIP1tl/s1lN3t7YqehS/0+fx1Vgzp31zppsVlPf9B13vS33508r
T9m5SSf71raOzvbOyXjX7V/9zg4BC7ineKqdA5idKluW6+Hwat/Ef2XOyu+P
k6F4nnTjlft9zqDi243zwn/P+haFtehNzyp2aGL3xkdh3qyvPm5+UXsL9vL/
xWKZA7JnjsgH+deX+bb91p1LSAeIjTGGYj/o62IV6C77ffKMv3dsWfFLxn8V
J0N+w/gZdl5htQjjcIi/3TPdr5/FUeifuTXG+FGNOU4kGLMc/eFPn3w98xnH
RfareLadidmIYKSwyub5DHcVcx5XbLxScZ6TjTmXJ+7Lni8ejHx4V/WZ8ktW
Z3lsThMzr4/GFk979rH6s+tNxz8fP4N7qmfd9WLmd1v/4a6wKOxANzlP9J1s
aJMN80oe6JX8AebX+lmHfHzlUdKD5pb8XLHk93vNg/cmc/ofN1f30x36Wj0S
8qhvziK/1zdnrXfpq7Gw/TaG/Hr6lE1426aKb9eO27974CsyZF78lk1Mm/zA
7tVlpmvoyLCcM1L/yYlzsTzB4T8dm9WOhaADdzv7VfFX+u58M3fWnx4lm/md
y0+81uHC4W87Ooc+6rfmMUwVD0P4Kv+g/w+DPfKlbxy1+dK3nco9xThtfoaN
ndx/cXLd+Iq8ZL8q7ivuoOoVZr9yPQ6H7R/0u67Hgez6joe3rxrX2Bu+cce9
5+vc+KoaC8Yb1no9+1WxWPGQa8fpZLzDYzQxWmSieHj6jb7Ob0h2tt8Q7iru
HdaCr9ynDTfR4cVlwe/a5RU+4qvyB+N1n5y5f/NS/FWxVRtrOeu3Lat6heGr
iT3/6HPzTh/ns3Ie2Lf0YTZV9g2yqx1/tvE7l8nrVZ/h3G/+4oY3f3EEhcHs
pamt/XtHZ5ZTVl3guEe0fb/QDfSUPUVOpobcV488OBfJPlmpRjNZL/6quLJi
t8yHtYbBjNf61DY2v7WXB5f9xbGnkc9qqU+cx+fvmozxHcGI3lEdHPr1n3XK
wVTWVxvWiochnta4Q2cMv3Jkfr5zX31erC45cg6Yc88tpvribD7r0neZczBe
hc1bRXfBMNbIvBtr9cWmPt5H7nj4+Bqntvm/ve1OnV3WK7vT5gXlZyxmpzWt
XnPx1BPf9O+OToh7wRzai/qvzxc/9ZGl6p3RkxMX9Kajw8eeOv6O4q+cHfl9
nAXWB/4absF/cdYX1qgmDrwycRpTK8f6Gr/1mByBHzu/MbfDPfa165wd/yB9
YF8YA109vBSfuet5Ga997Tn6Er6a3Nfffj7+1xeYqvbmcCge3t6fOLnhedCn
bGJ0Dxmlf4ob9E1x+fCObJhz+vCqC37WxfvMn/kPXzlz4/+MD6q6cta+M6v8
wY1htm+xeGn4h1zZl9ms4omKL13MlWvWKS4szyk+qhgt98SLRVfoGx+ie+gD
vw3XxS3vffG3P8a0d392qvzW5UcM3/jHLj/qJw6W8P/WQ1/sX3Jrb1UT3LxM
7crBzuSqNSdbUx/y505/iyUz1mL72SV8Y9nvzkJrZF/og7Uz1rg99cG5Vv/j
f6Of7ZViqKpZk51qcnr/5OAfa2dc3qE/5ty7PTNbVvbAx7pI8YPFcQGvek61
BV03btjSb80LTDVxny/qds1+HLlwplXLprY+hrW6Hmet/Vt7uO6H52Fk6bXT
z8kp+K27zgXZ8VzxsOYoPnbjr8ZNuKV2+XrDt/1XN54pVnxjrfxx2abCUS+4
Xj5028G6P0yVX1rb85xB+57sV703HJUNLR4J161VtixjzP5WO1vW5h3tGy0s
V5+1w1rZtYqHt8bhxm2/+sFVt6VcrWxZ4avqFRaL5fzIfkVnlW+4497LMYSj
nP1kil2rWCzX+eKyZcFX7iuvkP2GHs5n5xs2XqxyCdmvtGGt7Fcw/cZX22Y1
PrfhI934SpsPa+qCP51aOt4Tt5eziV52Djq77IWZg/HVXH7Qc3abp84642dX
cT+d4zna5rg4H9fLGTF3+Vmq267tnniWYFb70fPhhHjm9TNflb7RP9UOvuJQ
j1/yylc5+3F4O759MJV+a/MD0l/kyjyRDW33GA/9xN4Fn9uDrruHfFoj7yAb
xa47F/+///f/OvjKfMJX5lx/rZH4gHC+Z+q/9bx01h2jbmxxDpsr8yCfOq4Y
150X41Oa3EC4IUwVR1+2R2dZ3490jnuqv+xcovfMsTGS5c7Vsdf+/o2psmGY
c++i38h3MTjkG9apvtrEU3z15mz3/NYx3mm619+KuTX+qTMy3870Yt/aU99l
eEWqlUO2XI8jyz4vBhv2Lpdu8i7fcvAVve2bxjlINswF2Ykvy/3GMnnS3zoY
nQ431/kghhdozgLzQNdlv7Lfh8flewdLm0e6KZvVjrl6Pf+gPo4v/LWba9T1
OG/dbx6nDsGvPh+byBfuWkXannfxYD6NnX64iC5elTP/zWd82ub/BbYebu1d
NydfUvFLxX7H+bmxUPUNi2kvBqk4p/gT/HO+64sztVzF7FT2ezHtU5/5Gze/
aBgsvvLtN3TuV38wf6Wzs9gw43V/usP14p7jgKIH4fbiC+NsJ2OebS7pMeMu
Xl0/rNPUbPjHg7XCzjD9FRN8dBFsYL7JQHWC6BMY3L6hC6eexnvCs2f+6dx8
stYovn19shbFTZmr6gaGi7y7mPYdi06nZ9cqnmrHVmUHqw/5DWtftpzTBzrV
ek3exE/dtf/iCzWv2azMt/1YLos9lU9w8t1HRpxp3j21lt5yzpoXtS8nTsB+
Y/ee2vNvu/NuPDN/Ilxhjchm2OORtzPuqc1zlZ2n2mrZssIkj/FUxbdXp2bH
aG3+K/dn+yo/MRw1ebBfOc+JR/TRV1i7/lvb2nF27fqGG1/Vt/hIw1rj23kR
A994yaL+xfce1qK3/D4+h+LkYaXi3ot1167+i7GT+/yGzpXi3unhOIvmTPqR
Oy5rc2S5L753+4zf0Dlr/eErtij3wVcwkft8n2bLoleLdQ9fwVq+bbNlsWsV
9/6ItXZ8ezV04nh33XNgi2J+45KhL/IJul6MdDn49oIzNMwzsbeTs1Zdp+wn
8QWZV2dTvMbOffjBGtClnkX/VGNU23fQzheON48NvPgDdg/XrY132Vf6Q2df
HDAnht9ec86SPfsrfDXxAh868TfVBbCOk1v7q2ed48utBhjs6lnGxw/Iz2qe
4Csxx+aJnZDuIGfW15nn3d5rv+hbdZnNabUhqo3LZmIefzB83Ge8xYUOt8Ir
NwYWb9Pc9s3YdTrSt21c6/YgTEFX2b+to/5c3F53XHr2q0ebVXFW+pANwPjg
K3sW7iofUB+ya813zHC2O5/IAJ1rDcot0o7beXDzp47+7/uaLr1qgp35sTbu
qdYGfKX//KTOP2s0XPdvPftOXIdvH+ed9YFrrbdvFWuo77AK/VE9gGJILlvY
ldv+3jv2Iz2j7/Y4DK8v4avsV2Gq4tuH3+23XorFqr6zvTm2yKn7PLmnE5fF
Bjv68b0nLqXcAfsg/m3nEV2pX3FS0ZX544q1tq7l1pGr6vS1Ts1t/rXqx1XH
8PLfh01uG1H+r7BTMd76kP0q/Ja/GYaxf8Ng/l7MeXxZ9IP+53fTLo59YmwG
O8UVrw/VcMrmFn9XfBHFw3dP3xWeU46ksWev81vvtR7eSUdYk74txpb9T1c8
9U8cW0F1cKwJObB3qoMze/xjF3Y7vB7njPPtWRx7cz57+VP/i4/Pfhm7yXde
slm5pxzbnQMYbty1vIuhyg9Iv5R7SLdmI3JPuYH0y+RUvvGucUNHmUN7yzVr
6nwbXtI/Ppiq/B1t46k9cQovfILkxPk3+Su/f/mvP376lg/UfKXrhoPv1YPT
/N73rr7GbXXVvrrjl3bc+Pa1hUMe+diLuSrG6TEHMBvXxlH5E/MhFnMevnqs
V1jslufE7ZBda8ex5zfcXO7FvRerv32L9NPmfq/mzo6fd6a6Lx9isfHWuHzD
7R8cntFvnz6T+dq+FeJzsD+yceU3LO591y4MX8VHGm+Dc0ObXs5+5Qwja9q+
pbNlwVDZsoZ/6mdPLNaupxMvVrYsNi+6ly1rYy22rPyG2nRyMVdhrV1Dhz8E
L1axWDAAmfPu8v7sZWdS9pPqm1SHLk62uI/IMd1RLdZidewXZ0ucOtlP7C/z
Wqy1deichW+qMVqcpN9fNtr7m5Te6NvKd1xcis4C18l1GAyu8/d4y6sVVbxc
tUji+Sx2Tl/MjXWPk4FepB/lAMK9sDR8BTMZK5sVm5d1ZzOkU+DHagfQT1N3
+E+O3oZbsoeQ02zdgxOmFmo2KGvh/jCkfmUz3L6/4tXNuf4WQzXxR585cwlP
WB/7S7+9n14b3qbXznnivMjGXpxVsevhrmTDmuTnvWKWD76iE+yHziv7MptT
MbeeGzdOHI7F2drPZID+tE7FPmnHKcE25Mx1Rg/v3e+cd4098Pvnmj00Y37L
wVf2lr1mfzgD7UHfHuZofNRvfT78Qd87z29u7fvi3zZHWXk32a+s9cUr+ZJ/
kH5wX3h7uGampnP8V8MJ+/2Dr9hB43boOdrxKJEva0uuPK/4JvjROtjLxhE+
oVvjGr3qNtw5g9W12bjL+oUxdg3l+Ari3YjnatdlDvOkO7qn2CSyUnyXZ4aF
4iyyvn5XLJb7te0RYynWKBwP1xXn5x7vzT8YB1fx8OUGhkPcb32dbcWeFYO0
a1hPTYTPvlRnxzy4n14ge86XsSf/04lnhIvJoO/qqa/2vfN33+TV3nTGeJ61
tu/i2SKL+tc6kv/xxf/xzU+iz32PuNea7jgr+tD6lt9nXPn7wrfVowo7haU3
1orjo3zDke/xLdI/+jZ15X/q9kEUZzVr9947Z8d5VW2vHWeVnWrySX/x3OO3
1946/XeN3VUfzFs8qBOPM/W9fe+SCeP2jTyco1+87Tn51DY+2dzpYaRsXOXi
hWHCVNm1HusJbr6sjaNqW0v4qXitvvGzI218lU3Me2tvvqyw065LuO1y5Rtm
s4rjPcwW7io2Pl/hrhPtt9b79bBW7XJ8itfavkJ2jLBW/ORxk4a16LSpGTP4
yv5x5pZXqE1/F4tFT/qNNhuVM8fZTbfThdris/MVwjflFdKbzn6YqnqFdO/G
V+UV1oaRqqEDv9fOljVct+++a+gMZ9XgK9gsLkznrbO7czzOovBVnGzGR9Zr
F6PqbLIn7MvO3+Kf6WO/MX/VrIBRii8a/9v4E60N/blrr8dZ1zd1HD75vdIn
+lhMjnVyPvq7bxnvhp1gTniTbjAn5hCWcd5ZLzJnbqwt3e9MtCb2tHj1OELZ
rOAr2ATWMud0J9xbPWn6ZOp/fPK2QdEJF5fq0VHXt+vR22TQmeKevgfjz6S7
zOnEY/zMwRW1zZtzOPvS1IGZOHO2EHrMntq+P2ttLfyNvOaXu3I2TtsZ0HXr
2G/Jg/W0B+Hq4kq2T3Dswa8d+YE163M2STo5Lmj3XbWM7jiKzsM4S42HzOiP
6xfPxRmv/lejI75QMuUbQ//YDKybPWjf2RP2lnmyN/zGPc5F+965NjmmYwMk
O9VHC18Zf3Ul6CV6YPr390dmnK9hqvIB47zKllWsuz0epvJ9VE6j654TPwMd
Q67sbWtiD7rXHPsWha+sSTxx2ZfsQ/vF3tkxSHF4Ghf52Ll19o530Onl5RXT
Hs4OO8XnGScD2a4e9K4nmJ2qWjnwgn7zK8XVUA2dzfFOTsiMOdd2PfmLvz0s
t/m4sjvFzRWeNPbNAbL9pJ7PF0nenBnVrS6n0j3x3xZXWu3C+Ub9g7On7RfY
i24lX2SD3rbm2bjoGHNMlu3leLnoUmcsfeAeMkiu4oCNDyG+hepCZrMKU+Uf
1I6fvxzAbFATIzf+93yO5QyGryYv8lPnur5mb7c3i/2wr8rHgZGKKYWvRid9
5rSN1z/fO9mByx/0G/NgTcOKxuu9Fzf5s/kOfNvNORNXg2fBVNZSO/tVPsEw
SfFXxlfcePHhG1fYZ9W+CVM91rvZ8VTbVxju2jarYtrLMdzt7tk8Wt2z6+kY
Tzyi2zaV/SrfYn0OR8Wvte95xFFTw+DLL8VradPX8WiRwdrhrmJQy0McW9R3
bl6sYmPivQxrTZ3jDx2d9oiv8g+WSzi+lpOvc3Spc2nbsuJ73xyksEn4anz0
v/lSXNbErb7zYK14G+jbqfv78wdfOb/9xplO72fL2vV0qlcIVzhjnCfsMHCV
e+A6z69/2T0unvGLJ/mn7zrjndflBqbn8z0VEzK1hT9/vq/Ttfmb4koqpoMO
6RslG4XfPHIOx+Wy4zzpweJGLixyvuNgnWLCzb9zjb6rtqDzX9scZp90ljkf
yA+c4Z3m07zqFxxlboej9nfPfFprfthqV4txGw7ALx4dSz/nw3K+0BUXr/yx
U01N2Be5zNlMsiXCNOSs6+TMeUSP8UGEkejx7AHwurmvnlnf9GEn82x+YOmw
iuvm0j3Vornqbl5xN6/c+YD0v+fFJe38tu/ITD4iffZbaw0rwIr0YXYh99EZ
xU5svmjPmXiKsaeVBxbW8kx7MV8Q3Ei+PC++UDJlb+Sfmbipf3Hbr+wtbd8u
w1P/ytkD+k0erEWyCjeWj1mcrb6Fr8yzvT94dPBVdXzhqMkl/ce7Vs7w877w
G9rL9hIMb8/qTzHwkx/zd+f5+jT15n7uYCp70HgvHHPW5eIJvfkZ3FO8enmb
8V85l/LfZeMKL9WOt6Ec0Xjai+fpOeGozU9FRrrec7KhZQdzZmR3ioPLPdW7
uWpQ31hr+wfjjMq2Xt2czY22OSji46q+oX7GixSnvXn0Lut78X3cfAuwn/1S
TJc9Un+uWLODza6Y/ROvZb3sL+MgV/YpGaNH7V/jnJoJU/fQPf4ZDxlwhtFj
8YNVZ/Cq/f4svrbiz8NX9EwY2PXyQLNNw1RssqOz33nyc1+vrg25J8fG7re+
y8JUEzP2nrNnd06fPVWclXa1vehL/Qhr+W9+Vs/3XvP7z2v1qr5VJ3q+r95y
+0H8Nn/i5MR/+fYJZrOih+O6gKmy5xQTnj1qx43vPLtiona95mxW/XbnA4a7
wmCPfKThqGxcXX/EVDs2PrtWeYjFZVWL/hF3bUy1+bLidQ83dg9Zj091c5w2
D/BV9reNqbxrYl5njHPuDTfp1CT89p0jH3fW9hs6e6pjGL5yferLvagT7ffa
5RvCVDBKHFl0pt8439lAyGO1oenZ6unQkTuvEOaBidxHD/secB99W1xW7Udb
VjHwO+69GoXFxsMDU+vuF04b1vJM54s5Nr/GUM6Ufm//YDUx8j2RZ2eCtntg
R7rHXrIvqstRPloxP/ao32Q/oUPoIt9Y3kfnFAtN7ugue3lzC9PV9EbfO3SC
e5x1+ZKs9cTxf/2uLWjt+EzZCcvvE7tTfLI1qT4O7PSDqw4OLEofeA5sPBy4
v37OPueDs9y3oLHpczHbU/9ibPjzjr8/utGz4k8IU5mjuIjdQ7a6p1paFxfU
mVvzT9bMpbmJK0N/rCMdSaf6bqgO1+SiDf8Bec9/d9WCOvfDh9WOI6/FFzsj
6GLzY02Lb4c7i3MJM5fvk02suDtjJGf5Rj3LGL3PPJgn44kzs9iwctmrM0uP
6Fs12ayhubMe5Lv6g/Q8fEVO7QN7S3tiP97+fGKX3nn2rvkwlslXnDj/Yt7S
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
XZ6Z76/Y9R1Xlm0qPJbPMRyVjSvMtvkc8g+S8eZkOLz/810n2m/idghfbV/h
rl3o/MgnSJfSmfTqxN3+0MFI9HIcpL4nw1e7bW/FkQVDvZ4tiyz6W7YsPsVq
F7qPr+ExLmvq+/3OsWWR3ziynC21p/bya3fc+65jWD1osYqe5fzzb+pkvetp
9sZP3L7C+KLjROq7tm/q4q+KWcjflC1Ce3KIXzm6ceIrXzmYLb9MsbHmKwxW
vH3c49ruj5eAbneOVv9FrBl5IwNsC84vawejmsvJLx2eKzLjnB3+iU8en1d2
njCJ98FIsEH6ufw416vx57dxUvlt+KoYdTo9O5Xnx51eHsEVV3G+ec2BPei8
rT5g+X3645sgHGI81it/JdxiLlwvtjz+2Pjz44EOU9EjsIC2PeKeiwvy4Lry
5p3pncmbhyG+MmcS3QDXuc+e0wdtfTNvU5/tG0e3518sHyrclX0vn6O9WL07
c+idxfPrF7mFoew5ckTuYW5jmhiqt5+zLi5347Pn4Da/8f90Kl1hXaqp7TnO
+exXj/iq+D39qHZz8Vf2YD5BON9cT22nFzmD2uMjGf6QuEn91ppNTN+7z3f6
5QM8c2tOvNvcFlucj6z4nPZD9pxwTvHS2aCq1zzxZl+77Tl0c/VriuPKZuo5
+djERMX5y26ZP7X+FPee3SxurvhF9d2Yi7Eqfr4cG++lf+hc7zSHUw/pLw/u
9s/Yxo/wneNr1h9zVO2/5sQz7d9sXxO38u4zvqtW1cGE8XrpJ304fOiTa1o8
Vba44Qz/6zMPnqc/+kZfOiuM2X/nG/CH71prxkQGGu/Gvfo3Y/7YHWsajio+
337JV1jOdXYtz4xHbvDbx59V8wBm0y5fzz2uZwcjA8VExdNuzPoMD8958JY7
Vor+9Hd6ig05rg7nVZzqvvXNoXWin+1jfeRr8F/XteMIHRvAl+86sK75TW36
MU6G2tuWFY9odq1yCcNa+Q03r1SYauOrYsWzcWX/CaeFwcIq2bKya4XZyOXm
Tt9+wNo7XmviBV+041H32zg/d0xXdrbd3natjSezWcUFMfV7//LGabXzFVYn
OluZftZmk41HK36RausU956v0Ls2V8PGV75xx+b1G8cu5TfZr6qtAwfMN+1w
ZNlnxWI5o8TA06XOzLjf6VP4io2KLt62rGoXhrXoWd+ycWRtWxabV/YoOEo7
Xiy6OvsVfV4MvHw68gdbkWf9H9vGD98xjVe+3G3P2XWE6a2pcfaTt9+wmFv7
NdvL1DN+y9lfxQ51feOr7CT2SM8h5+XH+T5h/7tiWE8sSt/WruuP+9jsru/t
Uz/O2s759L5L/3752Dr8thiw4p2qw07Xxr9Kh2RrCqvEn6AN5zh36ND4WmEq
Z1/5gHR+OYBxexbbZlzmKp5F8uEcqA4Znee3zpdity6u6NM33wNhkh1PvvMH
zWc+HO+aWNFTw+T4Qu0F53++Dn0oT1CfrQv9MHUsXzv9hyfK2fSb/KGeFScD
3eCM1jd72nlUDE/f49kE6Gjjd66ROc/xTHNr7NljJv9oavzCUuXQ2TPOWOtZ
rDu5g6niF7UHqpVjz5nfsYW89fkVM3fWxVlhjPbGlZ92/BHGYF3sazrBe6uP
s3MAnZv2oHfqe+2pa/7aOWNd973j3J0Yhd++n+P+4Sab2prFe1hrGKb6MvGf
h2fKDYg/s9o05Xk6K6uLsOvLhMfiK4hHvfrF1c6L5zM+q/l2H1+b9WLncKbk
n6ouc3VzysvT52LOPXtiFCcHYtud8ovZa+ZFf/3O3BsnWSCf3kk/5WvTd7+R
X1wOsvfaY2SkmGt7RP+s17WHnyXfxVx5Jp3grKHr9T0+IPvRfJg3+/Hi0Dr4
QR/DV84CspJ9qDrOExf6P+79oX/Fwl3cwM/i/G0di6Mrpq58anOVH3DqPk9d
G+sOa9FZFxY4OMqc+yaqZoT+Wy97H1Ycvry3P5/87OGeMjfeO7Xuf//IYfao
+Nj12/qXP2hM9PDE8H7mtLvu3DH/xa7rq/b2A9Y2pzCYeducV54lLmvOhD89
mMqcD279tYO14uF89CE+1qApVjxMtesA7rj0neu38wp3/NVjzFUYbNc0JFvF
h5PH+LLCV9tXGKbKlrXr2oTfaoe1Rna//hIOrAb07k9YMZ/gbm/7VTmGcYJl
Z4uDNP9gtqyNtcyD/VosVrasOLLyFRb3bh7sk11bJ1sWvZ5/kD6Pg5S8bg5S
utz1R1sWmwvbC/0OO/BBZMuih8k0rOV72fkRX1Y5gzBV+CqsFZf7rgdNpt2v
D3GfOrPi6jMHcbNX9yQuys3D0HmUnWps1W+9MZWzxTUyPHXgpu6bvRxfk+vl
ZBu/PXTFnJ694x7fSn5r3zkfL7/IqQHd95F5mfp+nzv36K/7YNs4u6Z29+/d
uY10SDY6OkZ7uB5fu2z1w6daLUXXq1Pj+8/8TI37ycHcfBHkwBx6jvfG1RmG
rJbcfP9NXFPxV8WrexfdXr1Ispi/svr12azc41n6n3/N/GePim/BHoOpzLf9
TGanttXf3hwI9rX+w67uI+v0tDmFr8rZLJ5Kf3bbvtLWt2reVcdF2z2d3WSL
LoDNjPGynZ3n25N0vnW59uH1zf3Gs9ZXLtf57qlWjrHBMfEzlEto32n71obv
yTJ5u3Ko7hwNz7f/ysmjq+kM8vyIrzwn7oXqOGuba+uWLWt4YV67MVX5g/q9
axT6nsp+RR+MjH/p5osr1jp+Tn+Ln7wcuvBV2GnXiLEHqolTvWb4Ju6p4r3h
t8nv/8rt1yMH1mvHXFkDutLaWotyBqs/WqxRfkbX6eN476667Ne32Nhthsfy
/z6YQZ/p7Oo85Cs0V+EZusoevHDk8/jPJw/31MM78+A3+lnN5oun+Kyt78rL
J3Zy3OCT4tM8z5pXP2fe/fHTH2e88fqbfeE9/ks32t+TMzR1DOP1qI4Bucnn
W3x+cXTx+111kF6qC5l/MJ4rc1f95eog0x1kRt9c1wdr57tr8y3YK66ZJ3Zg
18oT1A/rYE/RK9Vrnvyn4RG9+Miehtf33x+5q3bn5Ci8iFGvnb+vfEA4KuyU
v889u+1+98TP4LfVHAybvV5N5+K3zcv292WnqpYfLLFx166nXO5eOKfY9c2l
sDlCN47KrpU/Lt6DXTcn+9VuZ9fa/sH8hmGw6t10f1ioeoLl9HlX+Kp2eCxM
tesV7hxDMhTX6OZteIzFqj/2arasuN/1YcdiaRcDv+1a9ke+Qro5+9Xklv/w
7Te0F113jvqNNn3vPvfQscNL9xvPx57yltMWe0Uvx/2e39B5AGvlN4Qdtt+Q
Piff8b1XTwcG0+563KTxkRbHpV1MWNgmO0n1oItxMu58c3RHcVnOmbhJjcc1
+knbM52r2uVA55Oy1uaDjHsv25TfFRNFxv2/+SjukV/TWeL/YUO6xnXnUfjK
fBWfbx5f8N+89fib4lMt7quaVhuPeWYxxt0fX331Guid7F3xrsdXeXG+nz7k
mzOefK9TB+yNN6c6eYIlqrUdf/tuk1lna3FN+QE3X+iOrYLxLz/E0+TUfe1g
ifCVtrWbGtf/z1nT4urp5Gxu3kUevCvsRCau2rRHTuzD4tOK5TC26syWuxR/
oHUtB7Pavs6XctM8/4pxv+sY8jOSM3Pl754358Ibzl4jy+TDXqIT+h6hB4pp
pM/j/oXbza/fx69LLu2Zzoj8g3Sp75HhwvjOwUXFX9lHO449TKVNtjw/zqt4
P7TdU61n2MF+hSmtUxxx5Rjky8t+le/cnJfHF99mtWyqObi5reIxKKZ91wS0
9tma4uiPd33XZc72mC0LFrCvh5/knWcOw0v5Lp37xSWSTzrm4vy6ag8Or2bf
M/xWxjVxjx+7Y5xco2/n2/2XztyYe/MXXrYHnWsXz9LBeBPv/OoZnz14xZQ/
H3z2h2cc2d/GDnz4Ao6NSB+8y3zY++TO2WDMZPLiqTqync3NOjhT6AS/cy5Y
W8/zrnx/5N98mefygrYNcMfUkQHPNYbyB4e79XMHE44N+ROH82r2yA8/jT76
qaOj6CP7pdh1+6C6gfaH+Yp7gSyQAW3rYX2qfeM+1y//9NPw+v77m6vBeHY7
21TxVLCTMTxiqrBW2Gm3r3jNO3/QM/vtxDf8+m2zgq+q9RxP++Y0iP+wePjH
HMNq0JQ/uLmntKvpPN8uLzjYs2vlH9y8CjtOPr9b8ephp90m78VoacfnQGeH
Ybr+iMdgnuxj2bu6Z8fYh7uKve+Z8Vd4V37AbFbVKKxdLJa2cyL7VfhKO46s
YrHCV9tXWK0DOta3clirvELt8JX76Wt4JL53e9o9dIC26/CEs9d1cu83nu+M
2HxZcNjOMYSvtt9w82XF4cDepQ1TdX3Ha8FX8WJp22vzTfUP5zz1XWyPmwP7
0v4yB8WZw4jxZRlDHKTGQHeQz2xW4St/J3vmwHllHWGhi6f48B2T8dkb77q/
cSbP8uijc117zpN33fYrc2av2/POzTjn2cHCWvAS3amv2vkijL2YAXNRPov+
VFfWGWge6Bdr7huR/slvSOeYk3ivs1mlz8tTL0fS/cWom9MwDP3JrrHrxVQj
29ps7oX4FuIFpU/M7Xzz/eeDqexv55i2+bb3smXZC/lnrcHODfzBVfPR868a
a0cnewa9XWxxmOriTrjxUrGyU0v7GzffjjNIu7gR98cJUO56nNXZVcxdNq44
08zNfKO+69iWrUmYCo6yj+wLuNv+Yu91nR5wT7xY5sJ+hkXNycTL/sLBnP7R
1ebJOma/Mg77y353Zma/qragtvkLO9X2Dm1Ya+qET/zV5Kn+w4lR8V/6J98u
vVw9x+IX4xgPIxVDbl2yXW7+q2Ld4/y0jles/Flf61VtGnJgHatTk3/w8ivf
fO/WKw7ibGvkLHxdnHacWtWamb3zzYNTJo7jVy5O/k/fGKz4MWMxR8bqXnjI
eOAr80IezEE8+uyAfHPmgiy7t3o34bfswOF38509yu/ikDcv8bcn856xZQ/W
NqewTPUc9blvAevg/vIKYUu6pf7HBbX56s2jeYOL4sWKdz0uUOsVpspO5VnO
Id8m9NHFt3tscnTg2OY+dvSb8dJN8S3ESTI1KP7orhuoL3EmhKmmTtonX8Jd
fH90hv/feX/FVum7dlzu8S24DlMNt99nbgw2Ocwv4thrm2v7sRrHcY3G1dA9
MJjzRRumKhcE1tIeO/4HXuJwqE7fI1dntqzwVZxa5dw568s9rJ7gxlq1H/MT
dyzWrqFTHUPr6r7dpn/sg+KyNr6y9za+cj2fo/uLn89Wlg8xjJS9yz09Xzv7
1fYJ2j+7HnR9qHah6/bVjsvSdk+2LH1zhpW/HxdWse7FYk1tmB9+yVeY/Yre
z34Fa2nDWpvDwbeF69mynAvZk+J7z34FHz3iq51jqP2ItfwmrAWfZdfyXNyb
8TbYI84C/qXOfbqCTnAexktZ3LvxhK/oynwUdF1cyMZWDlS2LDIGVxa/YNzF
8cJI9oV/xmCv+aevw7P4+afxZ07uPF2RLcs5Gy4yF/rjHs+sHe7K9uV52nRL
8QA9f/Jb/uUd2z+xM1OXwxiri2uM9NXU/nrl+djX//z4CCaH5su3DTB/Rtis
efZ78gRHxe8MRxVXHydY3KHGYJ3CbGEq82luzaW9R6/aQxeX2B1zpZ9xoZev
p5+tdXEy8F42k2KoPNv5S1/bq86j8BV/innZNXHoDGfxxHD86J0XUHyv6/EG
+G1xPp5Z3np14rLJbPsVeXeWmA97uZpT4Shte03son3lHnsCvqLPrbEz3/eN
M9O/sR8ff8zR4ebMuzzH/qYr8g/SD+UP7lj37FqbX7T6zsVibXxFZzkjpnbE
d4891rzkFzNv+QT5iYr7h6PsyY21Ns/Vzh+Mh6o6Q9WIISPWrpo12tWOYdcy
F2QoHk59kluRbSIuUNfJj36bR8/xW/0Jj00doq8/TR7Qd++6e3FpVqccJiTn
9o6+mMPJw/2TpzgNyZ53kQfv18fqA5rfOOHtjfgtfSPFG0/m6TT9g5urB11d
BGMv/yT8aZ3s34sb/ikbrb0QpvLb+Bzs8WxZ9le1LPwLa8UN49quAeR9/3z/
q/o66/7OZ+xQU9/zY8dO5ZnmeeqwvnJiaO0jZwuc5TvFOWHcZIPOnJizTxyb
1cSrDR+7+Z46o++7sRa/x+TifPrYqa6Yv5favgvMk3UKX8W7Xi0btixjcF/x
7eGrrm/ctWs3F1uVnWq3i2/X9ts46za+IothqrAZPZC9K19hNZHdX7zW5nDY
8Vevx4sVP1U4atu78g+GrzYPQ5gqvBSm2jHwtbNxuSfM0/3bTuV++qq6Nq5n
1wqnhbXCSGGqbF/am8u9dlzu8Ytqe6b96d36Yw9WozDcVW1o/ehb1bPiwooX
azgF/um8a/ORFvdeLqHvm7BW7bCWmCtn4cZXfuO3zoRdx/Cxtk6+QvfF/Q5H
hK9gjTBV3O/5CvMnTq2XqQ3tfrgO/hq7zqkNc2S+/Hp70Bja98bgmn3kOz7/
IFxRvLozr5h254xrZBdeJLPaYmTshYlB/Plzj/v1r9xb52S5JHBluUr6Wxyy
uSnG0vViA/y26+YmO/bE+//FdT68785J8dvuNxfOKO2pb/G7L9W5jg+THsp3
QIe9iGH9yM3/WS2LXVOv+jLe557i7fMVOmvcHw9YHLD6CVNdcRvH5k/27QFt
+4wMkxt7Pd5Dv/M3/Vw1dW+u0erZleu3bUpxPntesbLVtiimxNnEXmFfFute
bqZnwkHF7WdLKQeqOrZkQdt1/dOHarvkI6Mzqknr28J3DbnzneXMcJ5o50+3
x8mNNv1pH2x8RU7NW/Vep97CZ8/65h8MXxV/VVx6/O3VH6xdLBZfYX5Dez/7
le+nzefgt/ZxvIXlfl5zc/OlxynaHMaHUL287ZMdH9CX7lqBV02j207lmfZt
dsLsVMVikRv4h2zQkXEpXTWijpxXH9n7i6/Lb8if6J7hXPr4wfb0qGeQ9wv7
P6uOs/ac3V8/z7HXyM9whn7/is3+w6f49PWzHD99c0bAbd5pnsMtnlHMUjmE
dJq5pH+v3IxzLrEJGVP1T6tbHf4c++Jv5Ts9fsNiILJ95aulH4sn9DxzWOzk
+Gfed+ab7BoPX4F+6PNwvXzl5qjX1+LV6RZzbj+SQXvWfiFH8JV95GwZXs+P
HXmeWoKDqchCdQqMiSw5H64cxdOuRrN4qmLU4Sh7wliyWRWvns0Kvsoe9Zgn
WLuYdnKVj2+3i7OK51U73JWdatcfDGt1TzHt9kcx7cVZVQM6XvfqJu92z9cO
a3VPtqxiujZ/+2PMlbV9PV9hHFb0CTkoTj4f36M9anM1eE5Yq3vCV9mptPVj
4yjXy/Vzfxyhmxdi1xmsvXHXxlfZpsJanhPW8vywlut9M7o+dT6+d/yAcbxn
v8onWC6h98Iixb07t8JaMMdVt+RgKL/XtgfyG8bboP2YV+g++ApuchZoj73m
HSfuPV9h3O+PcVn5DWGn6hhmv8quVV5hnPD2jO9mvqThwf3W0Sf0AAzhbCn+
NM7JauM6A4fj8E13jJaxwQ7FdZNZ+2HijP/stJ1rrg+u+oXzXv+qmzyY7L23
7dd3VvXWjLX97pytPfUbz3f+0QntF99Hwxv4hbPf24PelX5guxhurc+eOKXO
LvikGnm+E+kw7eoU29fxbXpO/jXjpw/pZPeTlxccgW+8+b6qD1j9042pNu9o
sVXZW+xVGJW8k1XX7Yl4DsNXdHi/9fzwc/yf9G3nXWc02wgsePFrH0y1r3d/
vPrlDIYJyczUYpv4vXihyzvqmZed5tgWqpGnD//xqnNXvby4mIzVuW9OyMz4
NX/0YCd42nxsfOW6tv3Cd+A34y/95bO3rIn/evfUhX3Xkcl4oY2NrNIJxpb9
qnri2a+sv3Y4KnylDV+Rp2KuXC8GPqyl7+lPa1Qu/uakypdXXCA7Rhy72tYi
X17xkeWjVePGWhtnmCF71ODJb935g8btOd6Tj1gbDodP4vhg5/Senum34RDP
Nk/G0Ldo75yY4OFSyEaU7Zts9H2R79Ezjdv7w5bFwNs75NH8sTvpG4xqLr03
O9LUGfjquaf6BfpSPmLzfPnHnk0+3dQ6NG/ZpuJKDWdOXvt7ine7xzW1Kz7x
7AWH3vjV3Q8X7To7fX/ZH8ZBP8SHYex9yzhbqiOv/zCe5/rm8t1BL/uGNSeu
x+3pWdmsJnflPefbkJ7hE4x/y5nwWE9QO/7Pza8ejtqYqpw+7WxN5QCme7Xd
M/6TP7/tVxt31a4OjncUW1WeYPgnW1aYqnj4sVd/+Tz/ES9trtGwk3b5hu7p
XcVrZe/Szjblt9tmlY0rm1V+w+0fDF8Vl75jsYqB3/Hw2bXiv8r3l28ue9fG
Y92T3Szs5HoYqevZrHYdZ/d4t/vnG+abL2Gq4qzCUfFfxclw1Vs4mEo/PCde
983bEBdWXKPOVH/TH1jLt5h2NXTc7zyLt2F8OT928znkN6TjnZ/a9oNzG75i
l4KvyiuMj7S43Pgc4nCAm/zmMS5r19mxf5wxcTv4DXzFlgW3adszzhb30vfj
AxyflzlxjsVnE8/h5gLNb7j52+mK4Zn66edXnftz5tbWVzJPpvWXjJBhe5CM
uMe+zm8+sfx/fvOrlKvrenZm31/ud599Wv5XsTTtd/f4bdhMn81pdTbgYuc8
HTQ59B85+sdZHp+Ds3PXNfb9SDcP1+nw85GR4lKra6MP5QzSCb5dq+UHl4fH
zH852TDA5Y85OZJjk/7OiROzz8gzm1v2q/me/crZR/oc1461hE+M094rnjy7
h/M6Lh04Sb+dNcaz7Vf2knPKc8yDv+c/7VxiH8oGSH6dUebn/wdjs8oE
    "], {{0, 200}, {
    200, 0}}, {0., 1.},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Real32", ColorSpace -> "RGB", Interleaving -> False, MetaInformation -> 
    Association[
     "Comments" -> 
      Association[
       "Software" -> "Wolfram Mathematica 8.0", "Creation Time" -> 
        DateObject[{2010, 2, 18, 12, 43, 31.}, "Instant", "Gregorian", -4.]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{200, 200},
  PlotRange->{{0, 200}, {0, 200}}]], "Output",
 CellChangeTimes->{{3.706971845384259*^9, 3.706971857713653*^9}, 
   3.707242524828609*^9}]
}, Open  ]],

Cell["I know this was trivial operation. ", "Text",
 CellChangeTimes->{{3.706971981645658*^9, 3.706972039639587*^9}, {
  3.70697214470903*^9, 3.7069721460763063`*^9}, {3.707054062858555*^9, 
  3.707054070768611*^9}},
 Background->RGBColor[
  0.9990997177080949, 0.937270160982681, 0.1552452887769894]],

Cell["\<\
Now, let\[CloseCurlyQuote]s take a look at more interesting example -  Edge \
detection. \
\>", "Text",
 CellChangeTimes->{3.7070540904815598`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Binarize", "[", 
  RowBox[{"ImageConvolve", "[", 
   RowBox[{"Lena", ",", " ", 
    RowBox[{"(", GridBox[{
       {"0", "1", "0"},
       {"1", 
        RowBox[{"-", "4"}], "1"},
       {"0", "1", "0"}
      }], ")"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.706972324915453*^9, 3.70697235270249*^9}, {
  3.7069723947744102`*^9, 3.706972404382918*^9}, {3.7069724828757763`*^9, 
  3.706972511235896*^9}, {3.7069727083731213`*^9, 3.7069727150447807`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 200}, {
    200, 0}}, {0, 1},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag[
   "Bit", ColorSpace -> Automatic, Interleaving -> None, MetaInformation -> 
    Association[
     "Comments" -> 
      Association[
       "Software" -> "Wolfram Mathematica 8.0", "Creation Time" -> 
        DateObject[{2010, 2, 18, 12, 43, 31.}, "Instant", "Gregorian", -4.]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{200, 200},
  PlotRange->{{0, 200}, {0, 200}}]], "Output",
 CellChangeTimes->{3.706972406423764*^9, 3.706972511758379*^9, 
  3.706972715785246*^9, 3.707242527663582*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.706972344710938*^9, 3.7069723464568787`*^9}}],

Cell["\<\
Pretty impressive hmm?! How about blurring? It is very usefully when you want \
to remove noise from the image. 
Take a look at the cell below. You can apply different kind of noises and \
then try to remove it via applying gaussian filter.  \
\>", "Text",
 CellChangeTimes->{{3.706972829682019*^9, 3.7069728605195217`*^9}, {
  3.706972921292412*^9, 3.7069729378105717`*^9}, {3.7069739469655733`*^9, 
  3.7069739661757603`*^9}, {3.7069755748694077`*^9, 3.7069756448923407`*^9}, {
  3.7069757718393087`*^9, 3.706975806603994*^9}, {3.7069761985016727`*^9, 
  3.706976202559964*^9}},
 Background->RGBColor[
  0.9990997177080949, 0.937270160982681, 0.1552452887769894]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ImageConvolve", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ImageEffect", "[", 
      RowBox[{"Lena", ",", 
       RowBox[{"{", 
        RowBox[{"noiseType", ",", "amoundOfNoise"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"GaussianMatrix", "[", "radius", "]"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"noiseType", " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Noise\>\"", ",", " ", "\"\<GaussianNoise\>\"", ",", 
       "\"\<PoissonNoise\>\"", ",", "\"\<SaltPepperNoise\>\""}], "}"}]}], 
    "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"amoundOfNoise", ",", " ", "0", ",", "0.99"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"radius", ",", "1", ",", "10", ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.706973094296784*^9, 3.70697311341103*^9}, {
   3.706973637150743*^9, 3.706973644574925*^9}, {3.7069736992493477`*^9, 
   3.706973774363826*^9}, {3.706974830698823*^9, 3.706974848923732*^9}, {
   3.706974886336362*^9, 3.706974923390511*^9}, 3.706974978988256*^9, {
   3.706975095406312*^9, 3.70697519668361*^9}, {3.70697527822183*^9, 
   3.706975317632987*^9}, {3.706975422358884*^9, 3.7069754481655903`*^9}, {
   3.706975478223439*^9, 3.7069755404964733`*^9}, {3.706976228571649*^9, 
   3.706976239139255*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`amoundOfNoise$$ = 
    0, $CellContext`noiseType$$ = "Noise", $CellContext`radius$$ = 1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`noiseType$$], {
      "Noise", "GaussianNoise", "PoissonNoise", "SaltPepperNoise"}}, {
      Hold[$CellContext`amoundOfNoise$$], 0, 0.99}, {
      Hold[$CellContext`radius$$], 1, 10, 1}}, Typeset`size$$ = {
    200., {98., 102.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`noiseType$7588$$ = 
    0, $CellContext`amoundOfNoise$7589$$ = 0, $CellContext`radius$7590$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`amoundOfNoise$$ = 
        0, $CellContext`noiseType$$ = "Noise", $CellContext`radius$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`noiseType$$, $CellContext`noiseType$7588$$, 0], 
        Hold[$CellContext`amoundOfNoise$$, $CellContext`amoundOfNoise$7589$$, 
         0], 
        Hold[$CellContext`radius$$, $CellContext`radius$7590$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ImageConvolve[
        ImageEffect[$CellContext`Lena, {$CellContext`noiseType$$, \
$CellContext`amoundOfNoise$$}], 
        GaussianMatrix[$CellContext`radius$$]], 
      "Specifications" :> {{$CellContext`noiseType$$, {
         "Noise", "GaussianNoise", "PoissonNoise", 
          "SaltPepperNoise"}}, {$CellContext`amoundOfNoise$$, 0, 
         0.99}, {$CellContext`radius$$, 1, 10, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{362., {169., 175.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.706975096302949*^9, 3.706975146494907*^9}, {
   3.706975181424794*^9, 3.706975197378982*^9}, {3.706975278944365*^9, 
   3.7069753182185307`*^9}, {3.706975506678451*^9, 3.7069755447906513`*^9}, 
   3.7069762403624897`*^9, 3.707242535008388*^9}],

Cell[BoxData[
 TemplateBox[{
  "ImageEffect","imginv",
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"Lena\\\"}]\\).\"",2,2,1,19877471393439776734,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.714835639918545*^9}],

Cell[BoxData[
 TemplateBox[{
  "ImageConvolve","imginv",
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"ImageEffect\\\", \\\"[\\\", RowBox[{\\\"Lena\\\", \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\\\\\\\"Noise\\\\\\\"\\\", \
\\\",\\\", \\\"0\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]\\).\"",2,2,2,
   19877471393439776734,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.714835639987269*^9}]
}, Open  ]]
}, Open  ]],

Cell["\<\
Wow Dude! That was awesome! \[LineSeparator]But, why are you talking about \
this. You suppose to present Neural Networks! \
\>", "Text",
 CellChangeTimes->{{3.7069758437448*^9, 3.7069759206675167`*^9}, {
  3.7069759524760113`*^9, 3.70697599694354*^9}},
 FontColor->RGBColor[1, 1, 0],
 Background->GrayLevel[0]],

Cell["\<\
As you see the convolution filters are very powerful tool. But we need to \
figure out the kernel size and parameters. \[LineSeparator]This is not a \
trivial task. It would be very nice if we found a way to somehow learn this \
weights. 
Here comes Deep CNN. Exemplary architecture of that kind of network is \
presented below. \[LineSeparator]On demand I can add a short introduction to \
pooling and nonlinearity layers. \
\>", "Text",
 CellChangeTimes->{{3.706976378540992*^9, 3.706976458379183*^9}, {
  3.706976587084358*^9, 3.706976731296047*^9}, {3.706976821881584*^9, 
  3.706976826748304*^9}, {3.706976883285634*^9, 3.706976921569062*^9}, {
  3.706976972347867*^9, 3.706976973547433*^9}, {3.706977026828046*^9, 
  3.70697704025463*^9}, {3.706977086172822*^9, 3.706977122179467*^9}},
 Background->RGBColor[
  0.9990997177080949, 0.937270160982681, 0.1552452887769894]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsXQd8FVX2XlmxrKuua113bdhW/btrwRVFRREEK7ou9gpYsGGlSkdFBHUp
doqEll4gtNB7ExFpyXtT33tJ6B2SvHL/352Td7iZJKwvhiLMYX6PybyZO+Xd
ud/5zj3lolbt/v1ind/97nfvnICPfz/f4Y63336+08N/wh8t33in7UtvvNDm
7jfefeGlF95u0Or32HjOMb/7XQ/sL9eFJ5544oknnnjiiSeeeOKJJ5544okn
nnjiiSeeeOKJJ5544oknnnjiiSeeeOKJJ5544oknnnjiiSeeeOKJJ5544okn
nnjiiSeeeOKJJ5544oknnnjiiSeeeOKJJ5544oknnnjiiSeeeOKJJ5544okn
nnjiiSeeeOKJJ5544oknnnjiiSeeeOKJJ5544oknnnjiiSeeeOKJJ54cGIlG
o7xC62VlZbwxEonQSjgcxmcsFsMWfPJXe/fu5UboE3vSbnTgnj17aIWOona4
TddG/FlSUsKN40r4MyGhw3E9tIJP9bx0nbwPXwCdGlJaWproGT3xxBNPPPHk
lwuAhqCHPnfs2MFfAQoZc0lonQBr165d+Ny2bRs1whBZGSupEUJhgrywI7wD
NUhN0Vm4HbTMWxIVUgz4UunUrD/gpHxT/Chct+ChsCeeeOKJJwdaADouqkvo
wygGbsiYKBSQIgibOXPm5s2bRRxMaSP2YXBnQs3Iy1/xeflcrgtTwfoXCp1u
9+7d6rE4EcEun11l+nzNruv0xBNPPPHEk1oXghuivUArfA4ZMqR+/fpXXnnl
ypUrwUk7derUrFmziRMn0v4qkjLtve666955550lS5ZUprfq/gxt2I0svXRG
dUUlpDt37vz1t0bCvJ7Bl+mwCrh82WyI9sQTTzzxxJMDIYw4ZKSdMmVKw4YN
i4uLaSNgaPr06evXrz/ppJPy8/P5KCAv7Q+ZOnXqP//5TwIs3qi2zPO/oiIm
EhRu376dAVrEyTUOoaboTybICQkdhaboRLhCWuFpbpeok9oe/nriiSeeeHJA
RfWzwvqDDz6YnJwsKpqRgaQ33njj4sWLCcLUmVz8+fTTT9erV693795stdZ1
PSsra9KkSZ988klRUdHYsWMHDBiwYcMGag1f9erVa+3atXTeESNGGIbRvXv3
H3/8kbYA6JOSksaNGycqYncN7otAHKBfeW6XWqbtNBFMHFxFXs8E7Yknnnji
yYET1XvqL3/5y969e3nyVDh4FAgEgLAEuJqmnXnmmcFgUMTBa+DAgddee+28
efMY46ZNm4b9e/bs+eSTT6LBb7755v777+/atatw4K9bt25paWlnn332zp07
caI77rijcePGqampV1555ebNm3H2Fi1afP7554S/JL+Gjc6ZM+ftt9++9dZb
wdNFHFKB+P369eOWcRm0Qt+C799000133nmn6o3miSeeeOKJJ7UohLzs5/y7
3/2O3IPZOWrYsGGnnnoqPvkQkFlmzWCRM2bMaNSokdrmggULwJeFY5oG8GFl
+vTpTZo0USN9brvtNhBqrGB7Xl4eVkC96Sy4BnLlUt3AEhU616ZNmy655JIl
S5Zs2bIFbbKH1QcffEB3KirOOFO80qBBg55//nmP/HriiSeeeHLghKc7aaVO
nToiHmTEAPTDDz+A84IFCwWt2EANtkv4y/sDT2+//XaszJ49G9wWAAp2jBUy
+eLbNm3aHH/88YBp4QAxKCpW3n///e7du6NZ0NV//OMfP//8s1DCnRIVuk4o
AM2aNSMdg9EWvBt8/IQTTuBr5hlhsG98+8wzzzz77LM//fQT3xFYP6AcrJkm
wQHolmXxuUzTXLVqFT+TlStXFhYWrlmzRo3JwjPcsGGD+gDVEGlPPPHEE0+O
Nok4QuuAGwCf3+/nb5l7du7cuWPHjrTO1mCCp9zc3KZNm3LoEEAWwApUBRiB
9t5xxx1of+HChTfddBO+xcr1118PwAIszpw5E021aNFiypQp2KdXr149evQQ
Dop98cUXJ510Ekgrt5nofRGk7tix45RTTgH20Ua6SJzom2++Af+lGwENb926
NcMioBbXfMstt4wYMYKUEKBn7969b7755rZt2/7lL3/BzeJRnHzyybqu4/ng
LkCWQd5ffvllauHCCy9s3rz5nXfe2aFDB9zX7t27b7jhhk6dOn344YecDASn
rs4NzBNPPPHEk6NEmPwCg1q1agUeKhTkJZgAJ+3Xrx8Hz+IQNg4vXboU2ETr
dFROTg4gDLAF/nvrrbcSRyZG3LNnT5BcrOAQbMQKsGn8+PG4gNdeey0jI0PE
44AAYRT0VLNJWOa8w4cPP+OMM9LS0tgiDR0DK3Xr1sUnIH716tVPP/206m/W
rVu3jz76SAV9PJPXX38d+7Rr1+6dd97Blvfeew+70bc4Ctz2zDPPFM6k+e9/
//uNGzdi/ZhjjgERxkMAmqtPW004VoNb88QTTzzx5AgQcrICEBBgWZYF+gao
BWoEg0EwU4ApIKxevXq2bWOHn376CfiybNkyEc8emZeX17hxY/zZv3//c845
B3AJ/nvvvfeCbIIbgucKxw5M+JuZmXnNNddkZ2efeOKJ2Ah8BFLXr18/PT0d
56Vp3y5dumCH888/n4n5r7HT4gqHDh0KtltQUIALHjRo0Keffkoz3cx50T5p
DgSI4K3kLcZKCP4EBcYKPt99913hkGjoJMLBU1DmIUOGoEHaH8+HtoMCQ8dA
43/4wx/I3YvDnEU1yUY88cQTTzw5ekQFAiDI1q1bBw8eDJYK7rZ9+/YPP/xw
4MCB5PBMBttvvvlGPQro891331GWqqSkJGwB0n399ddYQQtffPGFcGZIR40a
RZQZ2DpmzBggO0giTgf8xeE9evTw+/0EiN9++y3O6PP5eE62xrfGwAoAfeaZ
Z9D+RRdd9MILL3zwwQfHH388Nqq0l43D+BZ3rZ4Xl4ct5LgF5MWW7o7g8Kys
rOuvvx76A02dC8d/jFbA/adPn44G16xZA5rftm1bRvkaz2t74oknnnhyJAkB
EHNhhgYVg4DLIh4qK+LcEJ+uxJJohG3UhNdkyFUzb6gVFu67777JkyezpxNd
Azde4+TP6qWi8aVLl4JlC8f7a9GiRUD/4447DtSer5zPhc+OjtDt05X06dOn
c+fOWAH5Jft8+/btgcVYeeCBB2bMmCEc2KUWaAUCXA6FQtQmlA0gvqgYS+X5
X3niiSeeHLXCBYa4GBBDHnBTDQQWCna4MkOqmZMpozLjKe1Jf7rifejPm2++
edasWaJisgs1K2bNgn/pysHEi4uLt23b1qxZs0GDBpHLMX1FLBWNA4UfeeQR
vmV8AljBbXE9oL39+/ffsmULPjt16oQDQX4/+eQTrPTu3btLly7Y56GHHho8
ePDUqVNPOukkits65phjPv3001WrVp133nl4dPn5+ZZlLVu27MILL+S8l1z4
yRNPPPHEk6NWVBamFhMUSngOf8UJk11JnlVSzIdwMklRMd8UCZFE4BQATjXG
qkxZnZZNVNC4bdtPPPFEo0aNkpKS1DoLuOCmTZvSNS9fvvz111/noorCMbB/
9913WMFRtPLVV1+NHDlSONm6sI4VbB8+fLhwlITHH38cBPmpp56iOwKyd+vW
rUWLFhRCFQgEwJHbtGmDE6mKijf/64knntRMeLKsSieZaFx4C0+xcaFYHvHU
iEjXSm1dpyvroMry+JJqUGT2CBCmY+qfJHgglasB0p/EiCtnqFB/Qf6h1cfL
ZXb5W65DRAeqiM+nq0U7rTrVS7Uh6FLVQsOughF8bSqCq8ZtUVEb4flfbs2b
6vXEE08OhHAdVXWQcQ04+w+4YAQ8QE4pBPR8FhJ14pL2OTrxlzDI9dhBzVRE
JqVl+/bttD8RN4JgJnHcCD45QXTlaguiGts1iQp/BL61XgeBi/8KRcGoXKFJ
KKCPFbIbM3ZTC65GRPzhHHvssUIpOuzZmT3xxJPaFR6dVC4pKoY3ioqDmIrC
BNk8Iagyi9p1SlHPy/5FNKKSHVK1iB61KQcrw4TL95ifjOqpJSpZKioXL2Dw
UhvhqkbMIl1t0iSyOhNdO/epXBu3zxDMl8eKhKhkFaHOIypqkljnaW601qdP
H+7DXh0lTzzxpNaFcE0dJDlpMA2qBMTEDtRhVq23zsLDmqhV47OIj5OuYbBK
DaHWT/2bEIob4ocAZOR8F7SR6gOqLE8oxes5C4cKkcx8CXxpI5s4eIqZf4Vt
27aJ+MOPxesQCaVH1aK4GlRPxy7QXIHCpRbipip3JN6TcVxl0/xG1O5deOKJ
J0e5qKjKE8H7tyGr88U0Oh1oysmjYmXQp/FWHUIP6JUctkJkUDi4EwqFXnrp
pd/97ndE5ciIumzZsscee+ymm26KOcmT6ajKzA5P+Ntvvz377LP79u1LaAXs
bty48XXXXTd06FChOHcRvRVOuo9evXrVq1cvKytLOL/Ijz/+eM0111x11VUr
VqxQCx3WorABpMqv+F54xTVzIeIFDaPxchLMlNWSx2xXqVn9CE888cST/Uhl
8CVR5+/Y64bpD+3DVdGFYu7jRIi1KGxXVN1NXcMvQ8lRGI+pzgLg88UXX8zI
yCAPItpi2/Zll11GAEqC3zQ/P/+VV17p0aNHhw4dKA0jniewGzDdrl27Tp06
Ccee3McR9IRzzjmHoFxFbfwiSUlJvXv3vuGGG+bOnUsbb7/9dqwXFBRQBSUm
pLV1v5yRg9apZZWo0nWKSqTV9aDUleqct2ndI7+eeOJJ7YrqNMWwRajKHqGi
Io8QSqAorZCpU/V9PRBkgarG0/VQYl4eMCnhoWvO+mgT15wmntXvf/97elxg
u8899xzF4Ii4TmUYBlUWoI3Lly8HELNhGXhKyRuxA8jvTz/9hO1t2rQBw12w
YMHTTz+Nr5YuXdqqVSs6HHh3zz33UAoLyJ/+9CdaOeuss6h7HAgLCW6ErlbV
uMgMLir6Noj4PDXrAOSHxjZzl1cDbcSL4Or/nnjiiSe1LqrNbdWqVWBDubm5
0XjehjVr1mzYsIHde1SfFoyuH330UZcuXT788MNZs2apxKEWh1wV930+H87F
FAzA8fHHH6vuuEchCqt+VmQWhnBuCnyef/758+bNa9++PddFeuaZZ9avX4/f
umPHjg8//PCWLVseeOAB9g3GD9qzZ0967Fxjt1evXpTs8fLLL584cSLgmDCd
znvLLbfMnDkzppRpwKnvvvvu8ePHiwPgFY+Lf//99zt37kxISp1z0qRJL7/8
8qJFi0RFDsuhSXSD6KgtWrS4+eaboTMQBHOEMuHvsmXLoHU0bdr01ltv9fiv
J554ciCEBhyOrsXKyJEjr7vuuuzsbJrLmz9//v3333/SSScxtVG5AE0v1q1b
d+rUqXPmzCkoKBDxCWWVi6mJCrH+wgsvqOSahj4V2VUrt8uhC58YPIEIGOpp
+2uvvXb88cezs1AsnlnClfbQFUFc5ZbfrpAdw+WfzBGsUFFOP/30Tz/9dODA
gRdddJFwZmzfeOMN0zTBZLE/NuI53HnnnazndHOE26E2AXaEv2gHvaJevXpq
ZwDm0o+CrsKlgu66664pU6bU+v3iam+44QaoELhm7i1Dhw698MILhw0btmnT
Jt5txYoV3bt3B1LjdqCkUWdLTk7u06cPdw8mxdRR0WBaWholqDxA/oSeeOKJ
J6JiVC/GnwsuuKC4uFjEoyCXLl06efJkEIHp06ez2VlU5LY8z8hYpvp0qUKz
crQ/jWxsLawcQKqOihC2aeNK/vnPf4K10TX83//936WXXsrQQ8fy9B+DOwcr
CWXa+gizK3L+SYLjY445hjYCFqm2IJ4A+UR9+eWX0K/eeuutNWvW5Ofng6Xi
q2effVbEnyFVGCQH+OOOO044ZpB+/fphO9Y3bNjwhz/8AZqPiP9M+EQj1Emg
IDVq1Eg4PQorUOGIVNbu0wbI4nQNGzakXzwUCl1xxRWU3VrEA8NHjRrVv39/
6uG4ZrpB3FHfvn1ZuxBOpUU0hRtfuHBhSkoKtnz44YfAX7YqHGH9xBNPPDkc
RGWaWMdAfe+996pbMFhhfGvWrBmVecVANH78eKphR4Idjj32WB5dQTFAQO64
447GjRsDBDGmffXVV82bNwenJqvgm2++CfzFDiBlEydOfOCBB3AWDICAeOFQ
p/bt24PUTJo0CX++/vrrf//737lkPF1tbm7uK6+8QuVfi4qKMMI3aNCAdgAD
wnmByGvXrhVOlv4WLVpgh/r16y9YsEA4M8UPPvhgkyZNQHBYhTgCojtdrk1R
JTcyZMmSJcQT8TPhp8RD/uCDD+bNmwdQxhYgTqdOnbZs2fLcc89xC+C5jFB4
1IWFhVgBZQZzxAqOPeOMM/CoVasyTkFGEjR10003UX+4/PLLuYJDLQphLror
GbqhUKFXtG7dGncKUk/7YIU4LLpuly5dMjMzR44cSdcPIIYusX37dnIpnD17
9mWXXYZniK6CW8CW559/vlevXjSpwX2blTpPPPHEk1oRdTIXoy6GnXBceJ8b
b7xxzpw5wiFHGFoHDx4s4rwAoxPwlwZYkA4MemCjGA/79OmDprADBjF8Ahkx
6FEoCnCB9p86deptt92GFjCeY/TGRqAkvsWAiY0YLV966SXshn1ATESc3w0a
NAh4cfrpp2/cuBEI/vLLL4N54UAcQo5YYD1PPfUUtY/xH7tlZ2c/8sgjOPbz
zz8HiNBNHZFBnapPOOMv5KSTTqIQ4LPOOguP8bvvviPlBE8G2giQCz/9qlWr
OIoWOg+VCkKD+OFonhdADIUHT4yobr169RYvXizixZLQSaigMNbPPfdcy7IA
xBdeeKHqYF+7Nwv8ZUP3o48+CtUCnB2KAW4NW9q2bev3+9EZoBCOHj26R48e
6FfolsLR0957770//vGPSUlJ1POhs6FXQ9mj1kaMGPHuu++iKarSqAYleeKJ
J57UlrBTMXndYJjir7CdgBIsg6rbCMViTAIUrlOnDoa+f/3rXytXrsRYR5XN
MdZR0XaKshw+fDixVKyfcMIJdLrJkyeDQ2EH4mLYCDzFChmNX3zxxTFjxmAF
RIxcc+mMPXv2BLKj8QkTJuCr1NRUADRFvtA+AFlsAdYsXbqUaDLoW926dbEC
TL/mmmuAC6qp/EA92YMoLusufrgdO3YAc+lPPAqQXEDVk08++dprr+HbgoKC
Dh06AJ4+++wz/LlmzRpd1/lw/KZ4wn379iV9adGiReeddx5+1ldffRV/Ymc8
Q6hV+FHwG7HFu3nz5gBlYuLffvst9LT7778/IyNDHAATLimN6GP33HOPcBQA
dFH0B5wFPbBNmzbYoWXLluhIZAnHlWPn+fPnDxgwgCd50eugntHjGjt2LNQV
dA8y+Aino2IH3Dh3lSPDVcATTzw5TIQTHAnHDPvll1+2b99exIN9eAeQU3Jt
5clfqmpHf7J/rHCwEtwHQzHY0DvvvIM9yaHriSeeQCO0D/Yn5yhwauAvtgA9
CZ1nz56NgZROfcMNN2AMRzsgaGAxfHYoCYAGAEe7du2AKbt27WrYsCE5+YDX
XH311SC/NOoCDnAsn5Tu9JVXXjn77LMBzSJutj2SZvdUmpaVlUVPjFgt0Jb4
qXDQ57+O0P40uSCUeLR169apiAyla8mSJcIB+mAwuHz5cuyGJ0+PnX6vBQsW
cCAYPteuXbt69Wr12mq9/gJ+X2h9tIW9v3Av6BW4BvQBdLCPP/4YF1+/fn1c
bf/+/Wligi+GTQTo+aeeeipor1CCzdHJqdqvmknbE0888aRWhCfvaMycMWMG
BjRXnAiwEtAJiKzseUVHkZ8PycCBA7t27creUFipV6/e1q1b8/Ly7rrrLtqf
MttjCF28eDHlZ5g6dep9992H9idNmoTd6PAWLVoQ6QZ8qJ69nTt3Hj16dH5+
Pq4KyI6jmjZtCuDGdeJc4H0YlgHrWFm4cOGtt94qnMEWmMvlfgYNGgRq5noC
v2lRKwbiwVZZcogNHZzxCTBK87xksK0yoSg3VdljjSOyK5cWUlsQByZ5FFr+
8ccfaf4C69DKPv/8c+GYjt9++22s4CcGFmMdNPZPf/oTUPjpp5/mCWusaJp2
xRVXoFfgRsDo0SvIOZwFGshll13GF++VGvTEE09qXTCwxOKFXy+++OLk5GSO
JKUdAGfsfzVgwIAffviBv8VoVqdOHRH3eQZLuuSSS7Zs2cIDHSgGeAQ5ZVFr
2IIdsAL8/etf/4oVfEsTeRgqiRGjcUD5gw8+yK47tILRvk2bNsBrrF944YXk
gvvMM89QOVe0DNhFa+SWA1g55ZRTgP4ZGRnAdxFP3JGSktKyZUvGqSOD2rji
rTiTswuCXRUHeJ2tsq7YMaGUdeD21brzjMtqPBenvOD2a93+zIHGdC7btv/x
j3/gh7755psnTpyILc8//zyeSevWrYHLq1at6tu3L/lToe916NABmh72T01N
xRbQZNLT0KPQZ7Zv3969e/f09HSAMj6Fl3zSE088OQCiJt9jK2Lz5s2bNGlC
JIIS/WELOSTjzwYNGtC0rMvPh4ZBDPvgETfccAPYK4VyfPvttxjHXn/9dcJf
IPu77757/fXXkyUQsNiwYUOQFzIUg7refffdjPutWrW69tprH3jggWAwSOwV
n/fccw94Mc4O2M3KysLKxx9/DB6HlkeOHIn927VrB0YMQAEp/stf/gJAx0gL
riQcA3X9+vVxLgA93/jBedSHlTg/dyQm8Jzl4qw4zyFWS4vTbDgCLS4cE1Es
ZZFw7U604xbATwGgrDngz549e+JHp9906dKlbdu25YjmXbt2Ub/asGEDusGH
H35IzmPoNsDr+fPnk/tfZmYmABqdtl+/fosWLVKzRh8ZeponnnhymAj5Obt8
kIChxIgZB7kKqlAmi4VCmoTCkrCC/VVqSbtxbGasYoklyl/EoxztBqrC88t8
UuJ0bI4WcWJCLQiFhRF/nzlzZrNmzdTCBNQyj8lHQORRzQTg6wBuWOJjLOLA
saCYs9pZCIWj5awZ/4WjkVrEX+6xHKsuFLu6iHcMoGr//v07der0/vvvk9GG
8VTVu7Azt8BdiwtIqZlhPPHEE09qV9RIWJftMRqvwy6cYYrT9PGxqgeXS2JK
4TlOfKGa8jhPkau8HVFd1QGMG1GjpdhJjATXoOIpzgUq1KhRI04QoV6nOmt5
FIpDeMPlnFfs461REamVJYa2I0KCfAyPWoJ7OAKYr81bUNmoWgdEVKwk4tLu
2EpP/ZBrFNI6h9Fx+9yUR3498cST2pXqMAhjjloKFnxWtcLRMOXKMaUmrmdC
IRRyoc5IqqMZXQNfiWuujdmHym74RCTRinUJ2cFmxYoVHTp04AaZ46g+Rbiq
oxKICX9FJFy+lOyNRCO1Z35mKgxMjxCzFrVufybTjToTrZpo0D9Vjyn86Kye
xSqWJN5PJhbu9kdGnJonnnhyWAmjVZkjLrscr9NYpxZVFxXtdS5XWBEfIdku
TdkzXKXr1CshpGYOwqMi7aaGuJKJW70wvpKYUuoOG8nRy+UerF5wDZ/ab17K
HBO0RF7CxUiEJoJrCX8jpSJchtZj0bCIVp2M9NeI6g+mKmP8Jyt7qjma/kQf
5hkTtt64LDAiXm2TJ2g8/PXEE09qXSpjEAarymWMXJFK6g4uz1tCQxWaK8/k
uign4FLFesZl16AXU8odiniOXz4FrfDAq0It5QBx3aarqOJRJTHhKFoxB3+l
lO0t3RgV64XYXUvLRiE2C7EtFtmGLlPB1l0bonpZk2LG3dJlbFFjo1y9zmU2
KX8yio93LV6wJ5544olLmGaSwVllEOSpok74RpSi56ISf1Rz9KkTtUwxeHKZ
hEGWoZNRUuXFasgMsWla53lqlblwtCn5VhFtIc7OXjeVVYVf8fx+uyLnZIG/
JTIxlQRfvzVXC+YZRu0sPv8Ew5iiazMsa3Esslkicqyslg3QCla69DRSzNhg
gg7gyjWqTumqLgGuLioUWu2JJ554UuviMq9V6U/lytaouj27nKAYBFlcHiyq
/Zm/Ug9R3WNUfUAF5coWaULSykOlq2VWLarMUHFUCeFv1LFGgPkCfH2BLMMc
UyuLZiZbgWxNn6AbM4XYIMSuqIxFqjVVR/WwUic4qHep3UZVEStbPFT7ibru
MteIqjq2J554UrvCE6D83vE8Y0zJk8xb1EOY8bmwzBWew8fyKPEbfa/Zzizi
qLpy5covv/xSKJZhukfKe0BPr7i4+Pvvvx84cKCu67F4Boy5c+cOGTJk27Zt
XBeYB0BAbSAQ+PTTT5OSktavX08bsUNubu7QoUPV0dVLkpCA0Oy9iJRP14rd
kreaY4pC0yxzgt+fEgik68boYCgVGy17nGlmJLQE/LNMLcuykzVjMn5D/Ep4
Z0rFVsU9KxwrX2qTFscijpEkujsaK3ECoETMeTWrm6eOip0x5wUNR7BeGhN7
YqIsEtvnY09y0GzR9L7QmOOi3mrJbDU1iohbddQdREVTT+VjWQ12eSeK+Nsq
FD9wjuDjsiysx7LD2/8cxPhYnlWvyQPy5CgQ6rpcc1a1SlE4Q2X2VFnZJqkM
Ctz3uNP+hihY5WBhEb/rJ5544q9//euoUaPUGbfly5d36NDhm2++oWwbuNOx
Y8d+9913/fr1u+CCC2jLyJEjH3nkkeTkZGxRbdr86Hr16pWTk/PMM8+8+OKL
tPGFF17o0qXL+++/jxW6ANVOflT6Myco1eAvwNcyc0wjs7BwgmWlB4NZpplm
21m2nZbQEgqmmdZQK/S1EUwD/3Vwdk9EbIwCiMuiTiRS1IHFaCRWq3k54k4K
0sHbubdYVHCakaqWkvKjnAdSFt5dHryshJYTVKnhAAdUcCK8ILfeeiteHOF0
6eHDh/fp0wcdntKxqlZ0GjratWtH+cxZWPPn2XAVi9VoLG5KOJnB6E9XpUXX
W09tqjaxKp06XC3w+tHt9+hJYuLKfygUtw1WAundpE9ojzElc4VQwmZFpbf4
yEAKPJARI0Y89thjpFGwOtGzZ8/Ro0djy44dOzp37kw1BNmMfN1112VkZOBZ
UXFerFD11VAotHr1ajSye/fuCRMmiPhTCgaDlGgLLXDafKyomOtR4F8q1eAv
mC/A19AzDD3L0HM0X46/YLzuz3W2JLDY+mS/L1XTUnVthnSBjshw4LKwiDp+
WDElVoyyY9XWbTnm9Ch5fMWiTK33xBwiXHkh/A2X0Z5hB5FFWcm+VDNs4xIH
iwW/+eabjz/+OEYbTdPoGm677bbc3Fy8PuvWrRMKODKM3nLLLQTNrpArdXih
ORd19ofbUfV/3kh2PObCwnm5+LGoSrJq6apO+ED1DVUb98QTEleKCSrhjZ4D
Fkal99CHu3btKpwuim4PZBk4cGB+fr5wPD0++OADOvCnn34Cs8OBwKZPPvkE
OmqPHj1SUlLQCPdDNcrmNyT8xvHFX3vttfQEWAC+8+fPxw2C+WL02Lp16/PP
P0+uy0RX77zzTqop3Lp1a1L1L7zwQrz+q1atOvvsszdv3gwW8Oqrr6reU0Bb
SpiA002dOlXX9QYNGqBlnl9m/6uD+TR+k1IN/gYC6WC+AF/AbsieaWrTbGNW
0JpjWZmJLXqeoU0wrdyAPTcW3rEvKaUDe+HSMsrL4VwK8LfWXoFIWKb2isb2
SDCNn3Rv2XrK9FV52bXHAuY4KLyrLFLk+GzvKSspVT399j2zA++I5fP5rrrq
KnRjwiY64+9//3v6lvO0i4oG5GbNmlHtJ7pmcHYotMXFxXQXU6ZMwZiDA6HZ
FhYW0tuxZMkSSnOH9R9//BHvHcG9q3ESF3vljS6z8/7fu8oM2hNPKos6BYkO
dtJJJ5HiV6dOnX79+tE+xx57LM1+QvP84osvBg8efMUVV5CJtW7dujQrumzZ
Miiu6Mlr1qyZNGnSiSeeOG3atEWLFlELVbrjHv6izjSR4M+NGzcCOgGvF110
EXQMPC6816+88gp2A7CCAl9yySXYk1Lc041v2bLlT3/6k3CyTeI5X3zxxf/6
17+gxlCbDz/88KBBg66++mrbtomDQECWH3roIdph3rx5p5xyCkYq4tSqP9hv
63keMqkGf3VjtGWlg/kCfIUIiLApRFAuDoFNYJEJsACCO0XZLslHKdul3Lgd
SBcu2RkHRxFPg1mLEnbwt9yMHI7uCBQt9xs5VS66Odmv5a1aPbHAN8UOTbUC
eYsXp3/7dX/SDNl+yyHDB1qysrIee+wxjjvAeQGd11xzjVDS1Hz//fefffaZ
OuGFUWj69Okibov78ssvO3bsiLcjJycHG6ksBVYaNmxI9SaeeeYZ0IErr7zS
siy8O02aNHnuuedeeuklAn3O5squLBGlAAdH1qv6CVmr9n9rrDywvdp7VT1x
CXVy7nVCqRCKFSACrUMjpW8bN25MtdveeustKn/GxXBB0EDTRNzMgkNUHwlS
HX9zkFHZYI73HWgI/N2wYUNRUdGf//xn6NJz584F5QeBHT58OPbBc8PbBy2d
39levXo9++yzNMhALcFQ8OGHH+KTvsXoB3TGqKJaqG666aZRo0YJx0TWt2/f
Vq1aAY7x2NUQJJLf0Hz6IZNq8DcYSg0GszRfDpgvwDdozrX06VrBJMuYmNCi
G7mGOcEOjtfNDNPO1vU0wLodSFm3DuR6ji9/CSAYLDgmc1RGazc0WJqTw7vj
9wj83VpgzDTs9CoXK5hpWFmmPd4MZOj2WMNO3bRpQSxSiP6JrhUIBEQ83vyX
uBj9enn//ff79OlD6/R2QI2/8847zznnnDfffFM4L+CIESOAsCoCQncF/1W9
m/AVMLdly5Z473r27Pnee+9h4xlnnIG3denSpQB07ADW0KlTJ2y5/fbb27dv
T4dzuk7XO6UOjFzHU/1K7JfVVpdR1hNPVFEjF4jrEf5i5Q9/+APG/ClTpmA7
gzJURyp2hhena9euUCa5zvv8+fOplB6xMz4Ef7o66m+orqj6fEjw/i5YsABM
n/4EaEIhwSsPCH700UeByLNnz37xxRfx1VNPPUX7AKnPP//8wsJCsiFAS4Ee
jpUXXnhh5MiRGHbAjo855hgMDiLuEwKMhhovnKcHoaqF2BOM2+/3i4oBKZ78
b6me/5pmmr9gvG3MAu0F+Jr6JNPItuzkhBbNzNbNbOAaPg09Q9fSTT3dMjIA
cMHQFECwtPrGojLfdFm0Fh2gKYuXir9CbPVZuIvcqhczxedLtq3sQCA9EByn
aWMtHeq0TEu+fv36rVu38lBwcEp1YAwB9NO5IkolEbxll1566bBhw0TF+V+a
c7nrrruWLFmiJq9euHBhmzZtbrjhBuEU9W7evLnP58MbhH2++OKLRx55BKPT
kCFDqOgn8Bf7qDniqgzaosahEqO1ho7geghMAa+AdRDz6u4Lh+BA1UDtva2e
VClqfif0w2OPPZaIKhAhLS2tdevWwgFTMoqiE6Kr41WtV6/eihUrhOIRNH36
dKASv0R169Z1YQTZt39D5JeEbVAibvLduHEjcJDW8UbjOXz00UdQS8jgDFR9
9913gdHQ2+n2H3744R49ejD9p4eJlW7dunXu3Fk4o1C7du1OOumkzZs3C6dM
A9rHEEFnB76TYiMc+wOesyv58280nuugSnX+z/Y4287S/blBCxAZBPMF+IZC
2YnO/2qB0X5rrGYmS45ppQesrKCdE9An+K2hgGCwYGmIhvJFHlm19wY4STXL
YsJx4ZB5p3GDmwqsyZaVWuUCxUDXsouL8gwj1bTGyYvXZkmzeRzI8DlhwgSy
7h4EvwJAGJW0ZmcGHiKAy71796ZXT43IwG433XQTVcQmQQsPPfTQZ599Blwm
JD3xxBMnT578xhtvCIcpgFB36NABDQ4dOhRbMEzRy+WCWlph52d+rVQqIZzB
7eWXX77gggu+++676u6LD6nsOuKJJyw0N6GahVX7Mz4BBFDkGDIaNWoE+gag
+eCDD6jH8v4AIIYJdfsRKXfccce4ceNWrVp17rnnCqfwPV5GKNhQrVNSUoC/
WCcb1DfffFO/fn0Rt3QBYe+5555PPvkEf1599dWmaeJ1xkO2bfu+++6j8eGZ
Z56hYsTUwrZt20455ZTly5f/9NNPGHmIDnBY4uGgz6jMRVQc1lSNi/zk1Qum
DGCqmY7viEc/V6Qb7cC2R1Y/+JMHUnWWvDr8Nc0M204DYwUSiYiQxmTwWeCp
PhorMihYHweoAnKBOQaCqQnjsj3MCKaty5/kYFwUaBmNxCOC448B/0eiyvxw
YlIWi8WdmWM0sbzTb2TpBZN0fyoIb+H6kT5zhGUsMKwcv5mu21ka7jeU7LfH
6IF0vz7RshZK3UAWcRLh8pQhZUO+7P/oYw+vWeunc7iCcPm3qJxEOlFBr77s
ssu4S6tdhWa4XOXAaAVK77x58/ikp512Go6FztCkSRMKuGjZsiVAFvQBhyQl
JbVt25YbQYfEMEXuW0KBXbUT8nhIvZeHMtrnq6+++s9//qOOmewzyVdIh/Ac
Md56ID6Z0HGz5LyNP3/44QeMAzhqy5Yty5YtE/EU7iDvO3bs4PAoT45U4Q6D
rkLrp556KnkOkM9Vly5dABbHHXccja7Al7lz5wplUgM8l/x7Fy1aBHQQ8X57
wgkn/E8Xhd+u4K1p3bo1EBOYSFueffZZel/I3s6eyVDC8dBuvvlmvLP//e9/
hUNvn3766X//+99ZWVnYGUPQ66+/Tn6bbdq0wQ5Q14HvOKRFixYrV65EIwsX
LnzSEfK/IqkcOHxIxDXJxVfFvz59xZFobE+obJHjTNdV6hjReGlIHuiq4xQc
ELcvVitB/MWnYSQ78UTphp5lmTlYAnZOonZp3R4bLMzVDeKYsjRDpEyGJMns
WLEynggOR2LhaCQcrYGJsmr83Vg0pyiUI28nOHxN/oiA+YNpTdLM8Zqeo5uZ
oOR+Ywyoul8br2sz9+42JP6WSrexaHloUnTTxu3FIXfmc3r+NI1SOZFFzUKG
ocx37NgRx9Kvjx6OFeAjRQdgS+fOnbt168b7o9vcfffdNAtG0UAnn3wyXkOQ
ZWAuXVv//v2POeYY2h9f3XjjjfPnz8d2si9hmJo9e7YrsYaqQriyHNSpU0et
jXLNNdcUFRXxt7hIMGu6Hn5cRFg4WwhoC95xco/ZuHEjvsVYQTbG4uLi1atX
Ywe87CDpULYBxPfff//ll1+OkaEGz9OT35aoufoBB+z8z8Gnf/3rX2kjOiFw
gUw3PGXDyiE4YLNmzWhdDVk9IoWemBqECybbrl277t27Q1356KOPaDDhVAb0
JqoBiWoLPN1GkYYMT5xNWijBg7yDK2nAIRH1GiIVazgSM1VBFveoTv0zP8WA
k5+fz46mQsmx5qrVqJJiWierAh3LBEota1X+3BLEXzBfgG/+urRQYLqpTTW1
ab51uZovN1G/LJ8/x7Zn6f750fBWITNSUsjtHicIaLcM2nWUC7k42TET/wWq
xl9LH28aybp/fCA0KlSU65zOEMIfd8yGQrJbxErkIymlozZGw1ucuKQ9ZeHN
kZh8qjEHcxYsWJCZmbl161aX86RLfapxvg4A0AcffACds0ePHmhz6NChoLFQ
UCkoHr/p2LFjhw8frhpAwGexDzDroYceQgdYtWrVgw8++MUXXwC/KI4Dquy9
994r4h0Gii50V6A2uXm/++67a9ascVlpuHG1GgvdLFASgx5IazAYRKetV68e
lO2//e1v0ApIyXz77bfJK5V73fHHH08PRG35qquuWrx4MdahWmdkZEAxuO66
6/An1Phx48Zh5ayzzsLZp06dijMCpmv2PD35DYlKnVhzY0do+vapp5467bTT
aJ+GDRsS/yXBns2bN582bZpw5ln69u0rFDv2ke34xwOOi+Zzgd2IUtBBKOZZ
1/4EQ+F4VUHa6DKicv7nWMXqDGK/TpgHTZg+vPXWW3fdddf//d//FRQU4E8M
g9DkMVip2YpUvQJHvfzyy4888gjoAzXiGsY5cxrbnPnJELCqbkKc+IUuhgLP
y79LEH91fRyYL8BXxiLFQkAJJy4pkHhc0h6AXXj3Xrkepi10BRucMg1AwBhY
b7iMrrH28NfINI2xuh/UOwmcN7J3Z1HhEt2Y6dccJzErzWeMMgLjDDvZp4/V
zYx1vjGGlVPgn4DFCE3R7ZmlZRvY7AB0AH0DXrB6wxqO2pl/zfte2VYWiVdL
ZAMI+5OwDkAJCljv4ncBDBfDFM0aq1e11xGh1OusPH2jvl/kWY2hrGvXrlAS
NmzYkJOTA2a6adMmtHDmmWdCLRFK4kpR0fs0Gk+sjd1GjRoF4AaIo8GPP/64
ffv2I0aMAHDjqFNPPXXevHkTJkwAQcYOwF+8RJ5Tx1El3HWPO+444bxKf/zj
H9E50XPmz59/4oknUiKI2267beHChZSpkrgPOkyDBg1uueUWjKL0OhAPwiFH
vMsfDwjsWqbOgarQQMYoNR8Onh69YqqezEepwwKPLaqrFe9waI3PnFwUlz1y
5EhQDL42EJO0tLSioiIwmhtvvDFaMQ0vW5IxUmFYU2GXXW7UPfkrdXaYv1Kf
NhXIoM65b7BNEH8NI9nQs8B8Ab5F9jLTP1cryLP0vETnf4Oh1FAhqPRYM5Dh
N8YZwRQjlGwWjgMUWtZikGKZLGvf1G8NVKmq8TdgZQXs5KA9LRBMtQNToAPY
1tx830TcUcDKM/VcXcuUXtB2jmVmyQxgwZGG9OJO1ew0v5WqBycLsTkWKYcP
/JSbN2+2LEudzVcnf9Vwm4SEjDlqmin2JWBPY/6kLa6aTa4c9biYNm3aPPHE
E64TqS8jv0T7dwdl4AYbxW7U2TD6oTNTg2TWVjNo0WVgC3o1G6zw3M4777zB
gwf/85//JKqyaNGipk2bvvHGG9nZ2cIBa+A76H+vXr1AzPHtHXfcoarunhyp
wjkkRVwb5D6paqSqmZGtqbxPldkmj2zyq+rb6l1X+TqrqiyHK4qKzkIirsxH
44nfaSMhCLNFHp0Ijg+58xVdD115796933vvPU75xfvgak844QShDJK0PzrP
6NGj69Spg8HHMAzhjGl4mCkpKSAv/fv31zRt5syZGJRCoRBxHJ/P9/XXX3/z
zTfCeRoAhdzcXOA+e6Jit+XLl/fr1w/Hqtb7hOd/rVSZF1rDaFlM4GtoE4LB
nETzUmr5Mpulv2A8IE9OthrjfXq2T8+UlZK0GXgS0h+LElRGY+VhRIlJ1fhr
aCmaP8nUJxvmWMOciE6q61Od7RNsK1fzZwF/KfGmbWcZRjo+NSNLN3LtwCTD
zl21Ohe/m1DUZxoB8Mxt2/72229pI8+buFzmEhU1jaTqJ8DKrajoTacyTY4Q
xIH0LfhjJF6HUTjckxokw7Iaa8mvD79KxJdVRRfn4qk0XCS69wUXXEDfNmvW
jNw/mIAzTHMUJz4/+ugjcGc0SxnwqP0zzjijfv36W7ZswV1cdNFFUEH5vmbP
nk1xUp4cPcJoq1p4XEqjOt3Jrwn7RvLoejSUuotVrOJEo5PrmYiKSog6KakW
MaQ6wirdY98tNQ0v/0DqoHEgbi1R4Yns1atXY1RhKyUpCcLR7siogu3XXHMN
+XjT/S5ZsgQj1fTp0+mu6UCA9csvv9y+ffuTTz4ZgN6lSxcMRzRaTpo0KSkp
6T//+Q/lfsFIe+qpp3722Wcvvvgi9hTO2PWPf/xjxowZK1asYGYkz5Ug/ppm
CvDXty7XCUqS4Ivtduj7ROsyGP7xhj/bNLJBNk07S6bmMDN1K8cKZBvGFJn+
MVxWni/Lsewm/virxt9QAKx2LKiujE3Wc0Bh831peiDZMlMCVoappwftbHBk
3Z8atDOxxVeQUVw4HUi9as3YUNHkYGiutI07l8PIyECGhwyCmZWVJRTkrdnL
rtqHmT9G40nnuHF6X3gHetFcXgHqV9iiuvBh3eWzrRZlEJVeZxZq58QTTxSK
AgAYBW+FmnfxxRfTtT399NPJycnqKQh/idcMHDiwefPmaOfPf/4zBXYJZyKv
RYsWdMHo6ujAbBtHJ8cpavAwPfktippmnGMAY0rOtMpMluc3qbdzCAmDyMFJ
nnPIRdXG6dGxRVo1REeV2ugq4VWrkqlzu7yzmgfP9ckjXrRS6p5DInQxYKan
n3768OHDVS8dbHz11VfJdJyRkcF5d+kRcf4WdrWqW7cuPQr2O6V9qJtBMIg1
atQIe4IdN2nSBMcCbam8FMC6U6dO/FvwZw38rwJ2juYD/gYsPQ/MF+CrWYMT
rUsYCoy3jAzbib01rXG6laJbaXYwRzOTff4JQmwUkVLJf8O1jL/AVkMfE7Rm
BIKphgX83bzON8YqHm2aowJ2smkkFwYl/vryx9lmOhbTTPP5koPBLCuUYgTG
rMlPkdcWN66oMWKshEP5YXdo2q0Gr7xrVkIoL05MqYutNu7yEFC9wvY/ClWe
2VHfnSovnnYGVqpkedOmTW3atAF6/vjjjyLuDwblkxm0cEKMb7/99qZNm772
2ms04fv444/36NGDgoxwJeioffv2pUNAfrt16wYl85133sH9/vzzz1g5HKxb
nhwcIbMMo2qkYtkO1RAdi1ew5axWrg582LCzsvLzx8rK68PIEd2qvi7b0bZs
FqI4UrqhnHzJgbukxm87a2joKmPGjAFvtW2bu9B5553H2RIi8VIyXNON40S4
55AHIEVnROMZS+grULABAwZcf/31d911F9oHEQNTUD1eLMsCI/7oo4/YdFDe
PxO2P8sQJPwpN1pkp03DzkXFGbqRZOtzpSHXlokrA8EUU5tqmVkJLb5gpj8w
JSrdukr2kT75u+yKRcPRMipsFI7h2/3WK8SuMqWWLMNQXmsJuJlvAPSn4GoN
I93QJulauoiVyCLF5vRQYKrfPw5ou2bt0ELdr/snWsZk/7qZMn8XbgdE2EjX
zNyi4kV7dhsyLhgXRZ5jwoEqx6ksGtv3duM5JyUlMQN1vfUqiDA8qZaf6u5L
jekWouppHRc0R+JFSap/WgdEqhsAK4cH8lebN2++6KKL0JlrfLUuJ0zVqM7G
NNqncrJBLnWhsn5WMFx3oZoa1NAMoRj0VPczUc2P5cl+xPUi8ANUSZzrx1KP
VY05/Osf6uiYskjEuciYE/tZKtMDFa9fomlTvAWL4Zsla/2YS8J7ysIl5RVj
a/DaVB76tm3b1qpVq/79+1Mngc7/yCOPCMW6yJ7M9CdAFn+y2RCdhxCZ+K9w
NL1TTjkFh2Pl0Ucf/fTTT0F7Kf9nXl4eW+o4D5vP5wNAd+/evULWslrCX4Bv
vu+7ouB8Q5c1gk0jOxAaAwgzpb9xIktgnmEtCYdlXQaZ9aI8LEhQmg75L46/
dM3VCUUtRZyivzIVpdx1sxF0DOZWqm1n2OYUnE7E9hhGKtAW232+sYWFOcXr
MyVgx9YJUeD4eIedeOQ9MigJlDzMxQk34heIRqGBb95bUlx+ShHmsR2/5rRp
0/AT5+bm0iVRjTMeB5g7qxKOF7Dej9DwrnIBNnHTmCMqDkTsx0UnPTjjD3VL
WleRi6+ZqA3fBXYG+F577bU0CyNqmkKHRmMOi6hs/K9c61DFSjV1J7uyuEL4
Xeb96viUemqaclJn5z355YInxs+cC1iD0VRZg0BU/F3CSv0yF8c5RFLOf51E
B3J8i5XtLfDlWcFUb8Gi+3M1f4ZlzpYJF5z3L8YWg8SFfnp65fGjt2/ffuDA
gdj4888/X3XVVevWreP4XFe4kKjIbWnl2GOPFRX9XlwrGPDJQWXu3LmXXnop
VlavXg3MFfEuN2XKFNphX0qlWsJfMF+Ar0MDtwixwSlvZIrwdkGZJX/xEhOF
JWUhJyw3HA073ldRPJndJaVFEvbK8VcyYqdecLVC+BsTKv5u1axpmpFhhVKs
YLphTjasLLyyhp2q6RMC9kRdT5Eln8yx0d07Q4FpsvCxP2/tuowCX6ZuZpp2
FvbX9BxNn6hpk8CLTWumbsw0C6eawdmlMkYYj1FCG4MgRUMAf3kmS1SKJ+Jo
bh4ZfuHgwO4lkydPbtmyJcXPQj7++OMmTZrQtCnttmrVqhYtWlAQ8cGHAKYn
qnN1lfcCwb2wwbxmbFEdqHfs2AF1FJgOvZdSAOXk5Nx7771kyfzggw+6dOmC
Uzdr1uzvf//7aaedduutt5IHHTg41NcrrrgiOTkZz2rhwoX4ih5aL0ew8s47
79x8883HH3889nz11VeF4nO7YcOGPn36vP3223wXWVlZt99+O94+lz+MJ9UJ
275U5wdOWOSaf+TZXjpW1fFoBe+CKzzz0EmYxtlIeA/hL15HzZiqW2negiUY
zDKMZMue6lAe4YzzZTWzG7EyNmHCBLzIw4YNu+CCC3Rdx8b69es/8cQToKvL
li2jlEGnn346CKwaK0SpXdBt/va3vw0YMACDCUCW3nGOQCfYxRjSoEEDMGuM
w82bN8exaBlfDRo0qHXr1hgu0A8nTpw4ZsyYtm3bYsyhU9Qu/soiv0Y2wNc2
ZsnsFuZMwJnhm2GaKYktgQn5/mzTztP0aevyJ2nGZPKLDoR+iEZ3OpyWrjos
7crVezY5iSudgsKx8szSkejWdb5y/DXsdJ8PjWeJyM5AYboVkM7PMvOziftN
xfMoCs0AOw5YU4HOhp1sBrGMNUOjefGbSbqZLWsXlgcl7SgvMeygngq45dcT
iQBcmIqqVYQqy36gR01KD/nuu+/uuecewMe8efPo1KNHj8Ygj97VvXt3Gqbw
LdC5Y8eOVDWVPTEOglTpvsV+1DyiqgxdVPQ9q5nQU8JDoPQdTz75JJ4GVvBe
3HHHHbQPXgRCUuH4K9511120jlesbt26win4cvLJJ6Mp4CbQk7597733oMkI
xUnDlYgAn3gZH3/8cWhBpFfk5+eff/75ePGB11C5f819HVWimhDxkDGEfvHF
F6Zpcizb0KFDP//8c8qoIBRHI+EMiRhXv//+eyhUnK0Ue2JIxAtSXFx8SO5I
CCcv/T78jTjzYnuswLRE5+mO1CUQTPVrSSBEIrbDGcFLaoa/qjepZVmgvegq
69evp2/x7vfu3ZtiG0FPsAUYTaEWrKd17tyZemBaWhqlLunZs6dw3nSMGzSy
QYenfYLB4FdffeX3+6kyzvz588FzsZ6UlET63po1a3DGSZMmkUFmX5Kx2uK/
tjQ7g/kCfAsKxlhmjmGNAKjZ1viEFiCdTx8NyJNLYFxwfXKgeExgfRKgEwDK
YEr4G6neLhGOxPFXlGeWBnwDxAv8k3TLqfbrn2dYU8MlO81QqoabwgUbybIK
g56CW7PNSbo+DhuD9hSsQ7vQtWxdy5RZN41UmYHTGgP8BR3O18f59YmRyA4c
Vba33L+df0cKOiM0Wb58+UsvvUSFd1UyqM4Ou4J2qxRKOCCcQWm7I+B0lHyP
yTVIN+XcA+I0bNhQOOULCXoODvlihFX/jFVVbcE1Q6eGmdSMArP1uE6dOuRI
NmvWLCoBM3v27KZNm5LXN94mvH30Hs2dOxcIywkPgar0IzZu3Bha09KlS8lq
hB1AbHEU2ytIAXZpCxjw8/LyKFUInjYOofxLn3zyCd7BIzv+tBZF7SoAU4Dv
4MGD//jHP+KR4mcC+Kanp+PZXnTRRaJilRDhvEFUhwtqJ9QeeuZ4+OAgzz33
XKtWrQ7FDdHlldI4K816wF9p4dvuNyYkzFOO0CUUyjbMsQ7/3UWMJhIt+TUe
czyWkunJRXzYt1kdkF1ZoNVkGqJizn+1agOZlOlbDBoYfnmelxtkZZLbqS38
lZWCwX/FdjBfmREazNEco/snYmNCC3DccZBOc5YUmW7aKYaoWdOE2MrGZLIt
/wL7c5mTU5r8r8ocI/ZWJ2fXZhHdE4nY2MkuyvQZabaVLT2xDVmhGLcm6bwl
C0zIfF96CjbSo5DBU4FkOzgaG/3aeMOcqJmppuwtJeSCpc6uqmZesv3iB4L6
zUk5+KcETLMf9f67U5XWaaADO/LRDmRoRZufffZZt27dGFY4kfjBFFcQFvuK
q6Z4ViqYxZRVrEjyy89FLa9YsaJRo0a8nYAST4n9Itq3b48BmUwE7Dihhh5g
+9/+9jfw1mnTpkF1oV8TPPr999+nFiJOBjCeJo4qqW8A9FyJtUWLFhkZGdgZ
agDpQofaBfc3IFElHQQJ8Qj8pni2Ih5/hN3wSKF8bt26dfr06fRgMzMzhePL
RwfSr0moLRyV+BCmgJb9jereyGk16bcZi2z2Gzm2leotWDR/RkHBOE2bEguX
4y8o8H54VnXC2Mf+8DwKRZRc1i4nWF7nAGFXs+yKT39itKfWXOEkGGfuvvtu
ckRxJdZ2Ua3awt9AMCUQGiOEKc3O1gi0EFz/NTYmmhfL0sfLFM2aTBQpc1VZ
WbYp141gngTNOP6iE/9P/HVuSnbyOP5GpROXzHW5V1JiZ2Yen8H12XogXXpE
G8kg4Lgjib96TqgwRRYiNDJsvB365IAxzdbzLG0Srs10HgtUDlk7yZAJKkV0
m4R6hbZW9tUUFV13QJEwaPAkhSvqtvo7E0IxzVFPaNCgAc//Uq948cUXwReE
o/N36NCBdj7xxBNdacMPqPBN8a1h6OO5PBGHKnZvEPH8M7+G/LJ+Mm/ePOK8
JIy/2Ej7gP+SUVo4/opqZg/sjCH9hRdeaNKkiXC8Jgi18Sp9/PHHVBqVflZy
yVD9tYTz/AG1wF+6TQAEuBj2nzNnDrRij//+EnF5MtMWdBVyj1d3w+Ol4PGL
L74Yv28gEKhXrx7T4eXLl19//fXsAUiuXIe2BIP0CcUIFtnl1J3Bhu1WMJfG
PW8JBaY6RGxWtGx3PPK0bH8DffUSUXI/VklbVPLLOzDb5XxZqhFPKK4pLisl
WdLoEyMAFYRi5dwVN82H1Bb+ylAjY7IIbzd8M2wrF8wX4Cv5bzmT/aUL0BaY
axlpMiGGnSZXjExAXr4xXrocR8vtz2WRMK5ZxiNVI9K1QQYoleOvdKaTR+6i
SkbyONlOaXiv8AfS880U4C/4byg40ZnFFpo/q7A4WdNHmeZIyxxnm5mOVjDB
0rOxjgsLBDJ1LTsQAHZ/bwYynIBlOeVMXs1qOimhxL+oncE0zWeffXbMmDFq
ntX/yYxUBI/G08SRmZRNIpqmnXbaaZQ7C+S3V69eau6pgz/+06NAf8ZFjhgx
gno7Q/BXX31FThEqHaZ9agbBdNR0p+qiiD9Sih1YsGABgTL26dGjR5cuXUh9
BdpCX+VXDw8K344dO5Z0ZhCu22+/nX4ggC+eJ/vWqiO5mucE+EtTxjgRsBvt
47Hj7ITyXiDSLxF+X+jB0kzKgAEDhFLkaNOmTX/+859pWMPvddddd7Vv3/77
77+nA9HZgMUrVqzgoRJtjh8//oEHHnANquqJDrBUk5cgMFYOdGaKTIFrpfh8
uXI+K7L2UEfjHj5LYnHBbCt2UQBOksbpR2g7+9UwYtL2/ZglXQEdjMuV4yv3
06+cruvwwxhF+pRq+kzwwYCZbJvpAWOKrmWKWJlM0RwarVWPv5QtGeiILiSn
cY1sJ1lWWr7ev9CebwekJdmfP9kyJ+j+8cFQmmZmJ7SY9trde7Y4P4RjRnD6
cKQmYQRyyjtGEcERPJ+NPv8EzUwO+GeFgmnguZaeh691I1eeNzAaNyWdov3T
RamIlpqO+Ro0fFfMQUvnevY4UfTxB1heS6JEONFrcW+xav2NMRoALiuHAKs/
qEtYW2MFD/gLjOD04I8++ii5WmHPkSNHduzYkQ4877zzVBvvARW1aBfdxZNP
PkmTp23atKHyiBBAEiBMJe8ksbgkel4+pKCg4MILL6RGoOpcffXVwpkEp1Kw
eKHef/998qTCDsBH9svCV8RqY/GkJQBT+hYPHKyZ7AmxeDEdUQlPaUIZPwq9
d9CyiKABQfAQEr2jo1nUB4vX5JtvvkEfVivoffjhh61atSLSsXnz5jPPPPOS
Sy7Bz02H/PDDD0899dTDDz9Mf1KfvO222zjGjc9yEDWiaurCWKNNPcMwkoG/
ZiBN5iCKisLi2Yc8IPcwWRKNC64S8thzr/yXcFCV/8QKDzuuYH/hoCqZo7mk
BTdYuXYh9qmulHBVEi2HD4kgu/xant9KNvTRhj6O6hEAfzUz1QqNk/khE8Rf
gK8EqLIdwCzZ2cA8cYVlm5zw8wSW0r0bnKAkB+yAm7E43iUsZeVu/xIrpVpl
GFOsQLa0KltD/b5UQ5uAs5ig8Ga23xprWuPswFjoDDhtKDAtYM62jWmWNsew
cgwrU7fGadYYvzkaCK4Z6TgEh2v+DKzYgXnh8HZ6qvvpJ1xAARwwGAzSRirH
qc7s00p1AwU4HdUvwBCUlZVVv3591vd+/PHHf/3rX1Q4+LHHHnNNVRxQUYMx
0RuJgeICOHsM5P777wcgTpw40XVh7K+V6ElVSz7wl4bi7777rm3btngXVq5c
2aBBA3rj3nnnHYzDpIrMmTMH3Iq1XC51Rxe8fft2NEUv1Kuvvpqamop1+uG4
KC27jdE1A9AJ6HH4559//vbbb+OkXbt2HThw4OGQlO/wlyrD0PDM33zzTXJm
g6xfv/7ss882DIPdEaFlXXnllULxosHhV1xxBef+nTp16lVXXUUarBqkQH8e
lJ+mGvw1Jf+V1W20CTIM1sgVpeF1BTmHPCD3MFlqEBdMKBlTkgBE42UE1RQB
9JU6WNE4oNY15jbJl54dNbGi5uHh1lSas/9BTCaIcq4xXmxop2lP1wPJgWCK
9DUyJ8nJTQd/zaBMmJwo/oL5AnyLC6fLokIAL+nknGsHkoFQCS2gzIFAOhrX
tFRdS6d2DJnAOTGRpRyi5YzfYafbdG2Gpsss1lboazQO5MVDsIPjTXs8UNWv
fW8FRuIGRaQMRBindm4wW/dPBCjLYg0yZEmWacBGXFWwcHSg8HvNHmnYaEf+
WNAU9u8/QCrTqlWrMLb/97//deWWZzRxTf2LuLUE/aRp06bgaPi5CwsLzznn
HJDf6Y5QNPE111wzYMCAhx56iFhYZL+1jWpd+BYuu+wyoJLf7+eAdPwJqn77
7bcvXLiwMtpWGbv0C4XsSx9//PHdd9+dlJR0+eWXz5s3j77CED1kyJDk5GRA
Ks8kkrsyFwVjVCXZtGkTnvAnn3ySnZ2NpjiKAbjMSer4ZunngzqEBml9zZo1
GPMzMjJuvPFGHHKo409/G+Ka/+VuDx2mV69e9Az//e9/U0gI7bB48eIHHngA
3Yx8EfkQEF4qp7Vx48Zzzz130aJF3LLL7+KgSNX4a1vJQUumBtL8WWYgxQ5M
wsX59PGHPCD3MFlqEBdMs65hJVs+W7R4H5cNmR2heYIjFk/2wht5mozsMGq8
BokaYEJThPthwbG4NxYBUjS8RTOmrvElWYUZZjDbtmfIIn3RqG7KsFndGJ8o
/spw2tguYFN+wQh0rQLf97oxRjO/ljV2E1mcSeEMQ0szdekQFTDJTSth/C0v
ZUi0NBqOhrda1mLdmKkZk41gmuafHrDnirJdktuCzNqyQqJly3Aq3BruRdfx
aowNBFOD+tSgMSVo5IasCSErJ2Bkmv40vSAFiIwb92mpeIyyipPziseqr59I
88KReFmiOY6o3r+xeHmFWLzyQrRiSRf8OXz48EAgIJxQU6o23rt3bxqaIMXF
xaBdAF/uVAdhnosukgc3gBoQ8KyzzoIywGQECBUKhYC/0+PFF2IVM1bVYGx0
hVdjTO7Ro8fatWtF/PUBI/76668HDRoE3sSnw9OjSmF0Ro7wZay0bRs09ssv
v/T5fEIZ2/Gcmbmr2m8wGPz++++ZUEO56t69OzZWTnrpyX6E+As6OXgHfiP8
ChdffDGV1sKPCK1GKIXgn3rqqbS0NChdzz33HLasXLkSzz8nJ4cS4EMef/xx
SiQejQeek6gJsg78PVWNv6YxNmTnBoMZMs7RHgvlH6zHsMcf8oDcw2T59XHB
nBgQbyJ0byj/5I+nZsUXcSzGJ97Ztm3bQsFWuwf057p165I7h6gE3OTGiQGN
Z5mxEcyI8lVWLeQMLxyHJBmPtrO4eFmgcMpa//h1Wm6BNgt0OFYS8Wky7sZM
HH/9+ZPRMJgvwDdkz6WIWqnJmBMSWmw909IyAkZW0ByPxdazsQD7Eur6zp06
njOUR1r61ZXEIpudhF0YGDcAkWPhHdjFtLMd3zMQ7VzpXabLu3DuETpJmq6n
Wf6c8kXLcpYMS0u39NRE8bfCtVWsZLR58+bqElW5MvxwFU72i2ZjGn8llAnN
RB9azYSHODovtIKnn34aDOW9996jomAtWrSAytG8eXPuz6Ii7a0ZT1djrACg
qjWJG2Qc5POqR7nyBqs+GDx0U4Nq5iXX1dJXnFA0Fi8QwBzZk/2I6qKAdRBY
oOp99903e/Zses4YG+++++6GDRs2adJk6NCheKSNGzdGd9q2bVvTpk2B1yNG
jGjUqNFrr71GQIxD0NPw1c0334w9CwoKMJZS+7+yvyUoVeOv3zc6aE0MhTIx
xur2aM3IEOHdBXraIQ/IPUyWROOCq/Myfeutt1q2bElaNL+hn376abdu3bp2
7frqq68uX76c9sQwlZKSQg4eTHmgmZ977rkUAUeCPsODyb///W9o6RQrwSbo
J598cn/+9s4thCN7KbuyZIWRrbGYHZP5jTdGxfayqI1OAki17HEGICZR/mtO
ENEybAHzBfiC/Mq6uuYoQFtCi22No8Uyx+raKFnD1xgTDKT8wk6/73E5oCv9
vmP0uuEF2I3flNKllJc7jAggLBYnAMpJYa1Nk1qENRnKQ1HhRKkSSG9wmS/L
0KlksPSFLiqqif2Zg9FIqOeAtEJX79evH43VLqMlG0YYKZgvqwMXb3SVIz+Y
LtA01QJ0Q78VTnetV6+eZVnPPvssuiv44znnnNOmTZv169erimiNmYhqpXc5
nDMfdz0HzvAcU5IZioqTQSRqbLK6Dx/rigtTpxddpSE9+SWihk8SXJKSWWUa
VX7sFMXGkQhCSaLF74jrjavsb3PApGr81bWxtjHBtjGe5BiBMX49TYR35Ovj
DnlA7mGyJBoXzC+vautYs2bNeeedpxbvQJeg4mtMfl944QWaYCIvEZpgop62
YcOGm2666Z577pk2bRrafOqpp6ZMmYLtb7zxBlbojDNnziTHD2of2998803y
56xaYvQhs7LIqJxyVrgnIie4w1GgR2wLNkIrs+0xlpGRKP46nkslMiIJcGlP
kfOk5hQcZWo5CS1Be1ooMB2fsqaDPgkXQGiYaO8PRyNy2Ve6AbdYFo3sdYB3
TyxaHjkMxHdqAecAVU1L+qFJUNYyweIlvS3I8NlDjNDwQFGKHZJ5of16umak
G3Z6ov5X/Mqr7h8MB/ihoYPR0O3KPMmiIq8rxFu1qNCgRD5+B2HOK1ox5wa7
EENuvPFGKJBLlixZvHgx+ue11147YMCATZs2qe76v3IkJHWFLI1V7hCJl4il
wVxNy8+/ggtbOWsNv9qqbcEVz6K6fHCbLmT3ZD+iOh/uJzRPhVH151O1UPUt
cLUTiWdEV/c8wFLN/K+ZbunjdT1Fzv8GxxpWJl5WI5hxyANyD5OlZnHB6huK
oW/IkCG9evUC2x02bFgsHqWIP7Hy2WeftWvXDuuZmZnDhw/nWV3mv8IhvyNH
jmzUqBFAFn9+9dVX991339q1ay+77DJ+6ylWUcT7EgY9v9+/H/4bpguMSZfu
WBmHz5Qnk3BIovRbhlZm26MCZsL8N1SYLso22YFkv/GV9O4zR+EQTR+dqP5T
oI3yG2Ow+IxRmjVKdtHgqAJjeKK9n/p+JKpgokNcSsXWiNhY5phsRSwsA6aM
jIA+wQqMMuxhQGHcmkyHpaWHQpm42QJtRmHxT7t3rxfkulbu0JVw/JGoJjbc
BUCFhYWmaapaOvvyuaiWOuCr06/ioIQdua6fzeObN28+44wzljpy3XXXReNZ
qoTTRYHO6njrciNMVFyPwkVtXFmVXEMuD/VMmdUJZRZGUjXdWWW+rAI3X8Bv
y/jsaKOlMZk7LuZokrtl1poYW5C8peqFRtGYkxPPGXN2haXJVFTvf5UKliFt
feYEIzAOCrzj9ZrtxQX/r6XquGCXzkZvZYsWLRo3bpyXlweKSumJWrVqVVxc
/Pbbb//8888fffRR//7958+f37VrVz4E1JUGAfAXEAcMpE2bNqVkvxgiTj31
1NatWwO7uTIIGBPnige5eOmll3DI8ccfLxQHMJb9DMhkiI3KekMYLrYb/jyA
bzCQFAqMCdgpFvhgbBdAUNNzzGCOHkiuDn81pyNJX6bAOGm2Ba/UZLI1p1pu
qVMmKeykwnBiaaNxgPzlS9Tx4SbjuXSK21ZWVhKrQRhBrLwEk3Ml29etm2DY
qX5rqGYP0+2xPn+OiO0JhlK1/PGGH8rY+Oru1zSSC0OZhXIeJxm3GQyk00qB
NsYMpBnmLJmZOkxPtSQSLo3bwEvi0VXl7mGMCzTUh0IhkMTOnTuDJ+LPkr1S
gZC6EyOVE5HlZNZRnw24/Q5n/Awr38r56Mozwq7wHzXAjaWy14rLxqt+qv0N
O8+dO/eRRx5Bd122bBmfa8eOHR06dFi0aFF1UMteZ7+Em8jTxURpCQWthB0n
jVKnV5TtpwvJXGhh+XSwEncM+J+nOlpEpuaRA1pZ3FC21anNvctb/teyQ+BZ
xbbFoNqLnVERpPS5ieKvFxdcs7hgNRtzvCdHAb4YhbCelJTUsmVLrDz88MPb
t29/8MEHMby88sorgGZwgREjRjDHYeoK5vvee+9hN+AvBXtCOnbsiB0oKIlG
UbTfoEED+hZjHXmWuvgve4Dsx8oXdsZqB39xRzsN/3SZdNEYYxrQxxx/pNge
IzBG4q+drQGRE8RfgG9o/SItMN5nTPP5Zupmnqzr55+uB9ITWnxamk8frQdS
/WYGPrXCpMCGSeFo4vVNZGZLmgGPSsuPPicYmiKLHwXTgoW5tj0LdwEur/tz
DX+2tMNXN9+tjw+YMpuc7suSd2pMwBK0JpqBDDuUZVqzy/U0h5mVazmOvSEa
2+MspRJDnPHfpR0VFRXl5+f/d1Df0jInkXhpjFC4tDQcVfSWWFXrVIGiSjs4
uwUKsS/QQ50wdeGsqOhyT8jIU6KVc7Kp3Yys3/wtkUcOAnK5TFeWqJI4S1SX
Izp+m84FS5OEzHjvHF3N4paDGZx1+EtMOiw6tj5oKdGSYNEyzZpm2PNl+U5v
qX6xzUmypIs2wdBnWdZ0v8zQO6dk95aE8deLC/7VccFswnrooYeAsMJJz96s
WTMo/82bNwdLpYoq5513Ht79N9980+/3UwF34cz/Ela++uqrgO/77ruvTp06
9evX/+GHH7ARVLdevXqgDzSUYcRGazzRBpYNLMaJ0Aj2JAcGSktOcaP7ee/K
uVKsPG2jbS60zSmOK3iOnHi15ojoXpmRwxgP/NWthPEXHBPgu84aYQRTNDvN
sSePlJX+jMyEFpmv0k6xbem3b1hZPn0servYr723ujuORbCIcCn0qJ2+/CWA
YLDgdfmTdFlRcX54915NG+svkLeG66823tkuLx5BK07thhS/f5zfGu4zh/n0
zFhkqyCrvlSSo5J0RwRpW/EosHJhI6eaxTQmdpRF8DuWUSW7vXuJQfNMpUNY
IjGZ5Z3SzIb3ATE+S0v2zWlyuKuoCIKc9MDlrUSeVGzfZhXOhZgqceZ2XHE3
rnlqzhVTGU/VPflTtSGTAsB0nq8FqgRhMVkJHCe4qpYomiqTP4MoX4gy/8JO
c8SLY1EgQx+e/G6/mbfOn+zTgQsp3rKfxTbGmfr3kq3IZ5Xl10YF7WkiuitR
/PXign99XDDTisGDB4PkYmXYsGFvvPEGNj733HMrV65s0aJFz549r7766uzs
bIo9JMEQp6biIVcu4CnFLmEEvvTSS8GLH3jgARH3WpkzZ06jRo3UvFgYxrkR
HhX/5yQU3QGaLCvdGw5vt8zlpjFX16dp+gzDnBWwFoX37PSbSX4H9cATE8ff
MJgvwDe0YYJuZpjBZLBpYJZtZia26BkBa5yhpei+nMLAZMNA+zNETfLYxLGP
Bu2SnQ4+bpezXWJnNLxVOqEFQPxzZaUku1p7u3x99BwoA8HApIAtPaULQ1Ow
YgfHa2aqYc6Qehrl+4zEz1mRmVJuHtUHiSAmboOVk/R79+7+5JOPN20uLi3b
4Vxh+XVWtbBBbM/KlUt69eza/t0OH/QuzyBEaht3MOKwanks5r8uny7lat2A
rk5Aq3yWcrJVqL1VKeezestEdVV3JldCYDTIHq1KIoVoeZsViX915ue4pd6x
ypdrQVXz4qNUCCnKq8bvsQJ5Rig5UJx1yB1iD/MlYKZaxsignUwJ7TXp3jzD
md9KDH+9uOCaxQUrA6ZgN3jbtu+888633nrrggsu0DQNW9q0abNp0yZgKPgs
OMhPP/1EgxiPS5xglqfeAK80/wvsxoHY/8wzz1y1ahWdC/yXK4njKGoHjVSO
Z9y/c4uiQsiZ2UhkmxPNupkSIEdjm8CmQuszTCtXIpHEnQTxNyx8vplgvgDf
NeuSpYHFCQo+VPgbi+NvOOxMrZaWlU+oEi2N7MWH3xjn18D3s2RdpGruF7cJ
XSJfG+k3R/uMUVjBn3hxoKoVaKPMwEQR2+pg6C4KZItFlcUJiUKvcbpQ1VZQ
7BY3O5cCfEvCxUZg0Tp9WoF/Eha/PgWLZkzFQuugKqHivFVr01atyQyFFpeW
FOLsWzduonDUQCDQvn379x0hChwMBqlnUjxsZT9STuLh+ra6KVpm09yIK0JK
iCqcul2JiVTvKVrhF4S4sGL9LqMSq6UlYuuWPbpmO/cVrXb61zF6RMMy8lvE
vd89+N0nzryEdM2U8yZ7fdpE9Gr07UM+8B7uiw7oTA4G0g09K2DnSDuYNlMk
7n/lxQXXOC5YDbRXzWXTp0/n2kbbt29v2bLlmjVrMIBgMCwsLOSxiKInwGcp
PoKawoHA6J07d1I7WMFu8+fP37BhAzWOBmmKWR2+CK9d84n/IxSR3HfKrYvR
cGQvebNEJcHfG4ltx6hlhVLQK2SeCiNx/I1FdTPPDI6VzNdILirOwIEBc9Kh
sj9TQeF9hlyHokbDtBKjSmFg6zruF9qsWS3/XVeQWlg8xQpMCBZOwoph5WBd
M6CiTMOxgeCcSNmWaOke/JLR6HbnbCUOHEdjcWdpR8qtqawpMQktr5URdeyr
8sDtofXLzcJ5TsKuDCxYsQLZMqO1neVkLRuHxWeOCBan00R22d4g+ir/+hxH
Q+vAteHDh3fu3Llnz540YaHr+meffTZ79uzVq1fz9RFx5surMmangtm8IgSL
iv3TBbUuR0HiudF4Hml1f6xwFgXLskaNGtWp87t9+vTaukX66C5auGzaNMcw
Je0Du6tZdsY93xyNi7qAZ35mIciIOqHx0QheLiuYatgJ54892hZTn2QYqWYg
rcAvP/XgOCjDzmxQYvjrxQXvf9l/XLA6C8YZm+krRsONGzeOHj26T58+X3zx
RUFBQeU3gDPzcMpo1aynzHztG8RoHs1VRNjl3+JiIm6JlZtGy11o4kvcnleG
N9IqSpWQKkEwPWH8FWWaPlHO+QbGSO8+M2XNqlEBfcah8r+KldcrLDc/ghbR
rKB0O5FRSXJy3wgl+40c3cwEma3ufotsHfcbK90tyvZI1hApkbFNWEdPkEbs
3YJgU7pbx/B9WBQ56FBS7pIVpR+0wsSriwvv3Uv5lOTuZWEJH+s3+YqKxgcC
mTJCSk9x8lHL5F340+/Hn6mB4LhAaIxhjkF3DdkzNxX/oPYo7h4cQcP5IuhP
0zTz8vLGjBlDWS79fn+HDh26dOkybNgwVyIp6mxETqucF+ZPjnF2kWjVw4oj
mvlS2c9h7dq1ffv2femllwYPHkwbcdLly5eXhXcT/yVlZuv2QjO47Od1k2VV
zaqWAi1Hph41Z4VCS7dt1aJl22VxrFiFKz+aBZq3DOgox9+YZc62gpk+PVmz
Mr1lP4thTsYoAY19jS9JKxxrFI/22xMdfS/B+V8vLvjXxQWreedoS+W0PKqN
zpXAh+dtqRE1VIR4gahorKsc20hsQk364TIJVvPiOdTPwV+aGXMcyyQBdjaD
kJfjr5OQOXH+GxWafzoUaYkU5gQw34A+q9xFP6GlluKP4u2FY+V+ONF9p5BN
y8l9s3CcTwf45tjBnOruF9+WRn4o2pCHPc3ABHwa9nismIEMzR7ht0dawdy1
Ban+4LgCe4zfzikwZhZu+Gn33vUcecS/jAu/yntCTIL1nj0ODIEUUnxxLLZl
8/SiwokyttovqzbLSWozCysBc6ZMV4Jrk7WcRtu2nKEOWHlbt251qXCi0hyu
mkicHfbUqdgVK1bQVwsXLnzvvfc6duw4ZMgQakHTNHLL586pxiK5clZUmfMZ
Hb64uJj+BOK/9dZbr732Wr9+/Vif5ESdooJtx0lmFZP+4RI9YpvDwjQKp0H3
qHLRQyO1wGgQCgBxqHDB7l1Qn7Y7dNgTKTGe/HUetl/PtAPJMn+O6S37WwAN
ElKlL1aWVNeDqeBohA4J+l95ccG1GRdcnUTEHsd3KxqJKsgSFeyWedCXXbI8
AYVDSlQqceihhGDn6jDcbdb1aXKmQ+aBTPIFxml2ioxUCo0u8KfISVJTOqdV
b38WuoyNLZ/GxQr+xEbLHkcJPRxQG49DQsHJBfnpidolHKUoWzPS7VCaFhir
mbnSzBgVuKVyIh+Vkbj7MLZaAcbtdUyUG2SZBpmRI1szk31BwOu8mCgEnppB
aBFZ8o0zq71f6LFYfPmykERhUM4NBWyw/lGaleH3zyqfX4vR+cBqy12JHLt0
hCJoYtH9XmhM7NgWNK3ZmpEh56CtsdL8ZcgEKbTIQsbOzBRt9OvpO3b9SApP
LO4Gpjo//0oxrDW9+3Tv2LHzkMHf7Nq1x0G0jRFhRcu9ix0Lc5QmOZzp9QiZ
fXegX61eNadH13d7dev+eb/B5d5T5dPi0Vh8Jjfh6zEnUkENp3el6H45rAVN
qTzrepphjpUZV6zMoD1t19Z8aZFw4sEdI3/U0cpKomJ37OjDZQ9/D0/89eKC
axYXXH0/L3Ne8/IIx0hZOFxWIigj8SFZ5LyYJJWMvyC+xIIdd1Fc2zbTmGub
U0xJstJ91ngJPZFSszDFjwHNypRBN/4xieKvJGjScJpO07sBOwe0Dp+J5qs0
dLA/mRbSCqb7zHEFfuBvSbRUOHcRVRcnXqd6wixfFvx2u2ORzbJSkjbDMKag
t/sDUwxrSUlZKN+f7dNH0xsnHR2rud+AlRG0MzHsY5+gnW3q6dhimSn+wFC/
mRGTOQ32xD2ut0vlJ8YzCxEnOkb8D1QEoIV37NhREAhOk9UfTJmeGhBMRJin
y3ldNzNDhTOwv6w3wcpeLQAvS8mu3TLjpcNDxa7dm4s2rNbseQXGRL81xW/m
yTLTWp5uTDdNPNI8X8EM25rj84Gq523ZvHzzhrUyhxjgr4J/eDQSk0sNLnPv
Xq2oaL7Pjx8oFVDrQHCaHNnMHHQ2x4VjHEYzzZ9VFJzvQHAZmUHi8y9RCm2o
xQf0mxAPfw9T/PXign91XHDFfk7+PyLu/7HT8TTecKj4e0lpkVwpx18afPY5
kYYjeyORbZa5zDYXGv7phj/PDCyw7DmxUomqGNulhdbpfoniL7quBF/Zh9No
EhM4LosAJlivwbS/l6kjg6MCxdLGaASypUUCtyFzPxPyhp0F91Wy//yQ8cjc
ktg+J/CNUVEcduZe/5+9NwFz5CrPhdXd0zPjPUBCgITl5+YGCCEkf0jykD8k
EOIECPfmEhJIgBCwjVkCMZjNmMUGDAmOCYsNFwNjz0xv2tfuVu+zet89M92S
ajl16lSVpO7pfVNLKtX/fedI6rY91Vhyt2cGdz3HbbVaI5Wqzjnvt73vp+nD
SFvWYDOPUuIab4cvhY0nuB8qdKSxf7HSC/6vhmTqgkBAocKEkidYQr+eMEW3
GOXC3O0EvDk4bebnJwDCUI9a84EXDKYLjKeiMNwjWYnp+uH5+TSW7ju10qMt
OrDPskgJcPwt28tzi3pKPq6wLlXvIqwbgwbgcupVlTCVepkVoqYfVUZV2FhG
CyuakDrcGKHAjEylvlIaO6OVJdNgx/mb+yjeMvSCsb8Vj+Mh/mrdktQDtwa8
4PlFuWxPi0I+QWLiZ/Gcywvv4O+5ib87vOBnzgt+4jyvZsoqnOxD6H0ZOalo
fbLaf1YGMx+y7cV6HUvVNy87NeFkNBKwvwC6bMg/LZVmV5YZTCcFPF9MeoYw
NkK9Dfu/NMFXdxD+uY7zyg8PuORyg/0KMdEJKBNTSDitBDISFsihFNyTI852
Ld6+6S7Eg6W8CqWEgg7lNdyZ+SJS1BGOv36KuOZqbwjUE1CI/ZLUPkaHNWUo
LXeAQ409ECu1yP+G06tJczhcTXFls7zk+qJemJ/LAASDF4yB6FrY+Un4i04f
jRK8UCOzs6cEe64Z3U7XA53HUqkOWLDzLM0vMTBCwKCSpC4egQ9qagCbJmfw
VFPynQrtNHIhZqFtYBiHl5fGNyb6a1VRTeEvx9DCqmlZRyWlOrt47r6PzzeY
afBMDyaFYdnSiEIGZuceq6ANXBKrAE2jrYwPnB/HDv6em/i7wwvefDTRL7hO
N8EsqnYko4Rlil0GzspISSNle1Zkwbj9UBK5aZEfFDW6xbVVzBGXi1zNmBcp
FR1Zw9wiTDmce2CeNer/kgQ+qYeFc6SqsFf7pAzyahsa4M5gNZQWRnOIhXRz
SPi/4FqKATvqxuG+/4hbU1NyqMkzYOeUVbRIUukkwpzm580Kw27fF85EUnsA
qeF5iXTi9dETgDJU77fM+8qFWXsNAL1UKq4gHbXo1IKf66DD8XfJ9USdar0c
B6qFublxZoyA7aEqIRhPRWHhj2N4QYUHI+gFlxe3MP5cLD5BxGMV9UzgWxWW
F07krWMoY6JFTRY3WYKROFN7we4CswQ2dlUNKgqaK3DTwbZfmGM8Ql6qXvzq
7fjFWtBPOqoz1CmurmgAwYAjIhAt8JeQAHriDAxmnDnwfEr2Ezo4M/N4qTwj
tsqKvdk8+WU9dvD33MTfHV5w07xgl8PmtTbi1izJyqimR/VsDza/OxtDoSOi
OEfEQuulL/V6GMepBkg5ZYY/WVri+AuOFfq/jMGINFx/RTDbiwwa5gfwJWo0
Zx2m6qHG+Xd9qjSgKmMw7SkbNsxjdum0cODXXaoantruaT1epoVfV+hyVBua
CD+RR+bBUTLyGM8E/N0k/owLbY1fLGw1tVwTNIB3MFCRwxbS0yUMRPOz4hXR
iBlV6ciqDKBrnJyXtddrtODDFhcWMho9Iqqt6hAM3rd4Bs5WaGNith29YB6I
dma3sATL2dBxtV5LBlbQ4nyKsVHAfREHBi8Y7BZV7md0yDKGTQPuWgQD5jRi
Wb2EjC4tpHkgulS/a82cnl3jzjlF8IINdlySo1iORWMC9LFcja9cWLZYjmVG
wU2W1f7pmUdQbUaEO3b83x38PTfwd4cXvPlotF9w9XZU9+QVRT6sG3HAX5QP
PRuDGMN1hxF/Vmqlp+UnCAStR3O52YAiUdRH9AD4epyzton+xpnx1zKxwb2i
oCgHXEAAX8fJOWt5BKyGBpZuc1ArroI/WCrM1q7tlFDxAu8eA+yiFtd2Dbzi
ErHRzqju+XYtEcjfvGIXJDXBcshk0bEU3NXeWF0mqnJIVhKw58ukGy6RqkUU
Na6SLlmCtZlMpcFsiKTVbsLgwYA1+RgvxCoKSK15Xu7nWeXV1r3gIpZjzRmi
ek1AsAiAC14S+J6aGoJ7hFlpGgVPHMuxlh4R5N8zUncbOqpdIaq+ap1SVOJ5
7YWZ+XHdHJI0v6R1q9SrUr8OZpsSzKS8ltFr6HG4mPArTAyYSKY1AhBcrRN7
GgXrLkcBL025Wma2smRms3fBbeI1BhFhk9QjAwDHzIqBg5xRvBrrnZl7oFA0
qybTc+zYwd9zE393eMHPkBf8pANJLpVyDSMKmdQhVHMiBzGreDZGmiQQquxq
/LlYBvevzPlIdR/EqbFHRDQQfS44edhRie5TNKTkML23UfzNpEOAEYrSY5oY
gQTPF8DXVFPwPg0NSrFXb7U3RK5L0vexXFiiCfheYFqAd5+SRpj5EC8zW9wk
r4pVTeVSrTquVEIukihlF2V1y5IaYfkOlXQgHU9x51s585TeA/4UfE1Z7yam
D7U39SiG2TWAm0HAYiMblvWDxPBn1ECGHOLSHAUhgVnNArjjoLAQqkTailMX
NJ6dGQMI5kVfIVFPLjw+HvuNgxcMewUGYCmvyFJD4LECBD9z/OUmCv6fB6Jt
wcmtBhAw0rNyev4EMQczWlTGyHxEo/usbKeiHMBaLDnAo9MJBOJsF0Cwpo0t
zLH1kEXjp1PGUkYscsNANFePXl1VsE+NjmV+cE102icG3A5YuZg91wOa4eMW
Qjx/+pG1tfkd//fZw181oMq+GlMglpnw6ySeNZKcPgCTucdgARjiNTpK4J59
zH1W8XeHF9zkODMv2G2e69ZP08qtFn1QpfvAUAdE4xWbiUbxqGH8Uh/AHgRr
Tt1lwNaom9Tn4IxaqVR0Zg2OSx0qA3zxI9bIR51KVtV7FBJldBg8YqYeJqrX
vf7KJd7C04IUaU1+eMDASVT9PGYYbGhQMohVxyQMIyMnMcZeqm7IWFGG8FpF
Ww67mxwA2YsA3wDiAOXYlM0YTmM3qIm11UnDDMJGocNNpLA/jGSUTngxOJga
7TFpjCpYm4dRAhpzW78ZfbTizNvoLVYd7kpz5T8VZ3qKSPIIYCugiUiLc7iJ
PakoSwSo3XjB6+9XO5o4F3E+dRMOIBWAFeAVQJZHwnlhmBoFMwa2XAMeyz7T
jGksiOackZhfeFQwcyvFqo3BnWusYy9X1uxfxNA64wFvi4JmGka80TghOJiW
wEA0apIHeOggRkn/6clja6uPocW5xltVVsTVcLYsWH9OHmcLfwFViRIE8JUz
PstI8OKKqJT2qhL8KQ4WmiJh+TpgjWX0KpnQWQfccwR/d3jBzfGC3ea5mjli
kPtQt6xkYepQNIlHYeIG47ENDrus8FAttgmALbxsTxUKc5st1LLI783mcg8q
ZEjTR2VlWFEP5bInUKmDejn+DimKj5ERqjWMv4C5hIQAdmGAZ20YcY0zlXDT
bmTg0qABrorsB78Gg9vlVbtYTweLKG6lHnZ23ZdsAU7gKi5ioRpvSwFXbHll
Bq4YYyHsEayAY+U12ahMuuFlGh2U5INMC2HFEYtoDLzdXu5/nWFIqFYn2GcO
OpFleP+lsr3sfkbuG2hhdmZmXGfDsopAxrOcwaeC7y/kBW9NXnhDDBk+Ymkh
bVojAMGcsIx3E/d2MDu1KOAvI3jLMMmF4fowM8fmZtMo1vGEQLTt1HjcteL8
Bo7VQiqXO66ovSr6DmgOwbYP947z0AN8HqJJoMrgjA8DBJcK8yJnIVIztRj7
Ly0Cny38lSQfmNymmRCycpLUgyWOsKx4dAJGLjtomcm62ttZB9xzBX93eMFN
8YLd5jkAFrgAztrK1OkE0/uJGod/LkuBbdcP1xNUH8pk4CYOEhZTGFhTd1cq
C64LtVSrbykv2qUZDOryZpeF5dMAHAoJIf7q/Srp1tUBXe9sFH/R92cxkaTD
r6+EdJowjX6xGJ/+4HW/YWqEiB5StQEETbuMt4Kff6WqrYmFx+BTbZKvt4sb
sGljNRcusRX0npQgw6+M/q+sdTlOQYcHSgfgr6ElkIajBiVtoK5P9aSR0UbK
zulawhfOaIEXXzUlrIk87rnZ2VOclIQQjFzXWrpzoy6WwF83XvBT8bcJ3KlU
NvYCxJwFQDAho3BW3Dbg0WA9igiIjduwWowbTiGZ+CU5qtFD83MZrFhbr8US
p4EQvJmOiuuxsrpi5LL3oUAWVmGJPlz+KvhSoVgSU2SEYPCCc7mHC6tsY+/m
X+7jbOFvPp8UwS4AYoxC4EA2BIKy0YspKr4Nwj0yzQinkp19zD0X8HeHF9wc
L9jV/1W9MMGc4gIzu2UZpp+XGX7T8jfKx2l4EGxtMJHG/kSokat7FTrG1Sdc
1mmxBknVDj316mL0c1AOgkQN1ke0TpyZ+sFG8RdWIronJJK1+rkNjOqUYOMB
Cjc0iJLUtUGiDUhSUpaPO/YKXvDSOrFIFDsJYNkEXZ5EX6rTmvhbFJBBo4ZN
WAhojg5IpBPWHeCvSgB/A+D/4t6ixIzcPW5+OjMeLxVX6mdll4s1fG94A62a
eeU5cB65NEcQe049UZRyIy9pE17wVuBvDbGqpkuJ14kxZvaCkQYgC/gLBidA
MFxADETrvfyscKdFK06N68bo5NR9leIab9mI043bSwKCG8dfbnEVC/ls9q6M
HID1VSO++XmCAwObAoLRC1Zigpi8uCCL9ctT87+0zq9z9vD31EQXgVUA/i+L
Y+pET8CA3cDK96LhqoQp68U5o/lS8p0yvfOsA+45gr87vODmeMGu+CsNMO0Q
3DdwHjVlCLCDd3WPN6pH0dzA3oKmV9H3K7pfUQ9hdxj3hVoLBj6xeQGHD1gv
CgkbDBZRB9an0QNNxJ/RZwSLV4tjjRYd0NSkpg40ygsTZUjYQ5BECR0ql3XO
bVlDSQ0U1sBGsDyx+As31Vqbho1fn/d9hrdC95zEwc9VlU44T4V22uUCNtzR
OpnmY7jcYjobLpQ0N/3PUtGo7vAVW+Sa0f/dtIDe9agGkG2AYIBUHogOufVz
3JwX/CQXuBn8rbnTlSdGD+bmHzGsQ4BuCg9QcGIFjCgY8zyfhVw2TmcLYBSd
hOdmSLk44/AquErVXrKbiA+gJAuPWqwsk2z2GAq2aAEu3RmqD+EFi7pxlfph
5ljW8ZVlyu8LThjeJOiX8zhb+Itlk0ZEUgKwdYC1DLdmYqLv+LHOW7575TXX
vP0zn37Xz3765Qcf9DNjSGNhbIR6tgH3HMHfHV5wc7xgt3nOF34cPCuk5WIE
NQJmuSR1NarH2OjQ1QFw3EQFL7hv2E9Wu3sT/qnoDlwqr/KMdqlS5ynh17K5
/8s3dr2bKknwChvFX3B+DSPO0TMB4Os4GaciOQ5dT4g/zYH0Wy4kVV7EAjN+
wUvYsUfwkua4yGThCdh65n2pwEexpmOJusTFsuCo2uhrk7iuxhS5g5J+zeiB
XRrwF74+4K+uwvfFGK/jzMJfzziwgpoMKvKYLA+BtQZ7vqIkM+nhhvfPuicv
lrw9NzMzLskjZxSlRPvQhRe88Q2fSQmWuFD1FmAbYtGz83MZnR0BCAYvGDPU
AvXg3LDBdFhYBdhgkfqJDhA5OjvzOOqGOcUNsejGcdCuli7AlCiusVz2XpEL
5nnnKOaj6xDMPx2hGbvL9RrG0cVFidtFxcbTzufNcdbqnw1fRulGQ2v+nvHx
3h987wt/9P++fFeLB8buVs/eNs8uj+eiPZ6/fdsfHdj/jXz+2FkH3HMEf3d4
wZsPN16w2zw3DfB2e+FJuKfg/AImAvoYLNloP4JGh6n36aRf1zALk1E6MS0o
jTqb5H+fiFbVeKBgXJZKmo669/gVGKDPMGynjeIvIALOahF5VpMAvpPZuw16
1M2Pcx1YtYXUEmaFNDOgZ0NGPiazkCT3At6pyhil9/FdnUtkuO+r5UrpjK0c
BBAgjQUWoAr2UjfcL2JgvlvTxhB/qRf8X7ROlTHHWaC674xDZyh5jW4yOING
FzM7mREwWF+j++d6a7+qF1wsFWanp4hl9hksUZfjqKtzuPGC19bWNnYJfAb4
64geCrWk8oaK6PLqwrwEXjDGmWvlWFQJMZwkGI5Gc5SXY2Fbc6Wb6v0AwegF
V+r5jiZOCXs910nThVVzMv8ApcM4M/HiRzkd2M9PhqcgFYxIg4UAJqVpHlpZ
UXmY4peWGHy28FfWO4nh14z40eP73v3uP2lr9Tz/V3ZdfeUHrvjgv77sxa9o
81x0Qevz2z0XtXk8L3he+3vf8+azDrjnCP7u8IKb4wW7+r96t6IiewU3YRbj
1niAsci2mwpaSM74NQUrjcFhVzUwG3i1kstRKq5Hmys2b8krNn8u6yTUDJBA
BMiiHALfsAn8he+OGWSlV1PhTCiAb2Z8sOH4vzaqyv28jWCvQiMSQXXKNOo2
+7CxIPg+5BAvPF7ibQdd99W631YqV+tuecl0UfQiBuMTbRjaazC/oQ9myJ3w
JPdkD1LSbdI4PEmw3/GKa502xRQ80s30sKodkNV9stwNb9vo/lks2aLj8xNO
uuLkskmAYGwsVetRWMffM/KCFxcXN/TYbf6ofT63WCrl9XKsctULnpt/ROT1
YMBN5+Vq6AUTGSyEuGnABYlKUo9M9yEE09G5GcJzwXUfv7GjUKx60FWyFTxR
1E3zmCwFROlXDX8DoiKaG07YL4noPrgyGj06N0Or0/2X8dhu/DUMnGlSJijK
OWCGyxLe6IxxB8v2nTgx/PrffRW4un/4B79x8kQXLIRU6mBuctDrvem3XnlR
Wwu4wOAQt7Z6dv/e7778sceSkhpj2WBK2aczfyYdsNjh5xz+7vCCmxxTsO0X
S5KQNyQsikQbGqAufd7hZZzqMo25SyFd6BQ3JtS2cVTdoNmVkilIqaUqTeaM
x+LyqmZN3ifr/ZIekVlUMWKy3jD+ioAkhm0pcjPxgnCXLWuOwCt5dVZIJV2G
GSBaN2e5NrZemHwYGxjpPoUAuK+WeOPHNadWZ8tzi7VQc1PhRkyCB8GP09Ww
zvk18CtS88AeU6ICcFEXWu9RqVczXXlVFaSD2QK1SpXVor1QcYpN8G7gPU5P
SgpJwidS6yDROnmydczNbpGUwMzcfThLKxs7JT056LHlvOC6PhXOfDWG4jDg
gSp+7C+JXRKwrm/y9D1O5XT9HewSWBzFGimpIhTLGj0s6zjVBzALyTpxkCBV
kgY5Itguwm4RtQRZC9zwsfXc/Xom+hf21ToPju3GX7DJkWTEs2ym0Q8jnxtQ
1aCWTRy7647ff/2LwcN91f940fGjPlz4tCef75sY7zbM4VMn+973z28FCAZ0
3tXaDi97/eteFk/8gLJ4Ruk0slxqVe3bwd8dXvDTGZo0qpPDhA6VVlExUaGY
8MJgggv+lu1lwsYAzsalhKyMScoA0QZkaQTb/23n4O2NBlVtmJhJzTiyVlyq
NiZwO2xeoVpcLpVmK1z4kcsqLmwV/vI6MdwMLQtT1dycDuKlc+HVug3TCGp0
HzVvJ0YQDCGOsytlZwpbHhVtzkSy6ySXZjCmXJLULqb7Mf4MQ/fDr/CkkolI
aR9nV4V4ZhO7N0pqxC0uXXFWN4hM2nUuasMHfKfizMzsI5oeA9xHqgKWt0Xc
8BeLUY2RmZmTmB+vB42fIeZuPDYYeBt5wShNyRlJ2EhCDgL+Mj5QNIzG4KzQ
CdWHpqYeK67OrL9JLRAtHjZRtgZe8GT+fhW8XeoFxEFCGTjgSlIECoSMJzrC
ali0qF6YnawUV4W2V60cy+ZyLuf3se34KwfFBcxkvJxw5BVso4nMoT9/06va
Wj3tuzydB/9L1w+jfWhEOSUzkM32MbMfts2bb772sktaAHwBh+HFL3lxezjy
XY32jae6qRFBGsIO/u7wgp/GIHIMM+Z6Qtjwqo5RQdRwcPN/nWlwJyfoz9Kk
gxhhVe+iVjdsVg3nQxsdxk/BClU0n6x1ET2JKg3lTcK0NafAfoL7XOZ9ALcE
f8HzrUVQo0iOluJyJqHKfW68WrehqwNchzmgKmO8zyCeZ5FXbAkTonbYGzo1
N3TYKgtgXQT4bgpiCvwKT1pGL14BwBc1OJH2pjNRxkZVMupWl1UtgasvYVzO
zZwOxwh4q6nJqQd4xRG2zFAUnxv+anoUK1HJMJKS7Lm6XHm1aea28YJl4gVz
Ha8bCcAlgmvFKHrBSAfg8WEsLSBRsAknJx+1y5PrIF5ZJ5E1ZaAUCivZfO5+
jSa5cpqf76V+kSuvl64JCMZ1QY8sLKTQsESqV9UiLW+m4HJ+HNuNv2BHSRl/
Pp+UpC4wg5H/pYcNI37lFR8EVN3d7vnYx94pSUm4C6oS4Ug9AP9KkjtkpVPD
VTPwX//12V2tngt2X9biad2zu+V5v+Lp7fsxvp4GtbPHCz7X8HeHF7z5MI0w
smNYQOwe4P8K8oU7/hZlOkhMn56NGVavQrup6ecuc2RbByVBLI0GR4CEdG3I
sTn+Fl3jz7ZdgsEzfThwsy5Xe/ltCf6C24hdctQowK6pH0JtMXLYoEcb1cWi
6jBmlmkf04+tS/1jZhBDmKU1TBHWutk2xTO1sTMjkvKkOA4lBr/CkyaLY2xT
tADQenO5445j2bbpxksCu6tSWahUVmx73nYmS3auWJxrJvxcFmztQrk4Dcgl
y/2SEoAp5Or/YqQ3JKNQM3blQwiurNtdz9wFduMFc33IsKiIFo4whtHkCO9X
iJlZVBJDMZMIoYP5qbvLheVqOZZd1VFxeEy64RNCwW0bL07+IXAW8NOZj7LO
jbXidQiGARYpMwZmZ09U4wPr7ZbO7+NZwF8ho4GC7aoXkDefG9n3s8+1eva2
t3he/KJdd9/boemJbD7JTZ14ZiKIgs/Mp9EuRe00rL4TJyI/uu06j8dz2SWX
tng8e/e0/sqlnscejxMaV7SeHfzd4QU/nWEwv0q6JNolrHWZBgBT4Iq54q/t
SPKoBAY5huBi6XQXxm2U/nMNfzlBY4m7WsUn6FxsEf7CRUNiiBoH8HUc5pQ0
7OgHww2/3Ab6XJxmW1yqcVLEk/Nw/lWmUnU7bYZnCl8fjCtCoxYbgIF1Tej/
FjUV7hqCC3wdSY7L8tDaqsr0h93sBFUbAO+YGXdp9JDGBjR9yDDuLRdd6+Lc
Dx5U50Hs0tp0LvegSrA3k6v/y+EPyWhKECAYvGBupWxZ3e8mvGDdGE1nwrKK
J4A9nTHrGhO8JKHLISAY+0mR6GT+VGGl2rrRWZeEbvg8RYgGzmZtdRIgmPtT
XkwEP4WxJZ4hRif2icArM4FXpk6BP8+P7cZfuJtgP6dSB00rJEk+RgceuNf3
2ldduqvlQvB/P/vZ98uk9/TswMmJ/TzOkMgayfRE92Q+YVpBRe3KZrkuB0m+
/4Nvb2sHEPaAF7y7veU1r37hyXEAmrPWl+Fcw98dXvDmwzI5wcHw17EJ9xnV
Pf5cKWXkJDZIMtEFIFoPtiTI9J1r8ecaQ3Y9EyfGVuGvYQYMI6pIcfB8AXwN
7RhVR5VM0i1+68q3JX1Id+XeFnZNUoOiB3EqBc71USl9P0AweMEo9VC2m9jP
AUkUqwO2aMEnRcVjqwOe1LUQo6j4BLuQzpKaNuI4OiH3uMXJUYZRCepGHypR
aNgbiNJhXrDd6IFfoVwt+gVHb2py6sGM3OtqH+qRuiQyOptkeGbmJC8a3PAd
n0Eu2JUX7MzNTE+AySF4wbwxZQiFXNQAXDc4Kx6X5mFGhOCwrPRN5u9fKxjr
HXvB0ChvYh+6nlDNDEAvOJ8TuWD/k/BX1GJhOlj3wqKAWwO3g2fJZznb+rwH
4Gel/ioGSArQYLA+JTN8/eeu2u3xtHrafv1XL3r4kahCIxm1A/CL16Mm1Exg
Oj+UGu8CRwD2vUyme3KyPyV1jyuxN/75K/Zc4NnVuqfF0753r+ev/up3Upn4
Dv7u8IKfzlDlgJTxZ4ivUovNovad6lp/BfdRkntlegBbCyk+WfabepJKR861
+itOkq0m4zak+LbS/4U/yZmETg6D2wvgi7pYcJVc6pfchlJTvUbhC9GwXsUe
CkQPGOYgQDDXS0GXqtxUuXGxWGCTSUpHNWVMQ5bxKPwKT8KngP8rejmBUYp1
EQ4h2mG3OjHGJ4Zp9KLZRrsUpUdThhxUim70ELjLXXz8OoXCqpnPP+KGvwB2
YCqIbn0KapOGsRxr7r5CobCRF/zUXPDTPCruvGC7uDw7kwIvGIUHsRch1tdR
tcfUQ4C/YKMqclB0NyYwObUOMJ8AgtELrvGCm9KnKm6E4MJKFt6T6gN15H0S
CuNVokKeK0T1oenpx8Bxduyd+udfhFM0BHPYyoYBSQ198Nih7l+7dPceT1uL
x3PVFe9OZwZYthe2OJYNptNdKPlO40qa8yJpL9531W+YQfQIcsEHT/hf89qX
ejztLZ4L4J/vavN84Yvv3cHfHV7w0+IF60md9gG6iYIfYvD7qLrzj2xHhW3c
QKKKIvVa+qhT1JzK0sY60u0ajfCPhP9b60br8P+v2FtY/6x7sXhJ7jMoQKQB
ni+8BizqRvO/CuuSuV+PMVga4m1G40wFC2cfQDB4wbzznS00tJrAX4C5kp1D
pwxcPPTyCvArPGmyBCfboruN7psK60JOZRJu6xq2elmKwFRBGriBmpy6eoQH
+Rs7SjZv8rvuZsLjZXA23fBXkbzC34RTRctQFxVZgfn5eYDg+ts+E/ytTY8n
8oLF1bZnpk7fj0F7Ln6FXbSoF5XEwCTA04tzWm4ES3TydwIEcy/4FM8F179g
Y0e5Mi8gGAPRuEkiL9iyjm8Uza5Tp7F+TxsCzwJuosb8YCdk5OTpqYlN+kqf
L8d246+ujBIlaFhdGfWAboy8/wPvbMEo8q7drZ577+rMZQdRfIB0gIXMFdtc
+USUxU+le4bHbr3sUvCdW9oAguFo83QcvIkZQyr1GkYYoUdO4n5Lgs85/HXd
V8+OfXKujY0YtBGbXPG37KiGl+ORD3OyWtIp2zKr2uSCmYhhOt7JC99/m/33
jNKtsSA4bihIgX1hCljbU1qreseVJ6QKn9TefeNBlSQsSbwaSpSxLgrfvVSE
J93wF7+aHhTKSHBNMJisI51HUbtwzYLPrnqFbCD8KwCshnFZv4MYwVQ6yTEO
hZJq/v66F4ybU7PpPiHsT9lBjO7qXk3tA38Pa1EySVUOwK9W/qCk7afkbkLj
shZS9agC39f0yXo3tldW+ym9R3TFFS2oiqsVVHTBnHupmfBnxclnU2kpAYuU
5TqJ1gmgZtAxt3n7bPCCxfwprs3NEEpHYaahUUS4nBo2MgbzNUbA/0XN7SD6
RBR7PAEI5iaPlsuGUxOotJFItiZ43LZTbqZboTsv2M1uwQYfldK6K40HrJDz
Bpe3XX9DGwKjTtUOgN1y970dL3rxRS2Yw21/x1+/ZuJkDHYwlXRzRr9P5H9d
30qPMTNxcsK7b9/XW1pEFBpwGCu4HnwQLSKUvEPWWK9O4rziYnv38x38Pb/G
VuFvXbSWZzBFu9uIaSa2W69SY2HdjGr0yHrxEsZqNybyHHfUXT/Q5VdhVsC2
30P1O+BXxy7wfuiN4S8uWOLjfKIQAhx2rBB5usbi0qreY1h9Kga3F0VGr1zE
CAWqY1WKdaApoR5ludR4O7oa/naKGidVGoD3hnOeyh7NmnH8Osad4+n9TMMS
IEVLKGqcc4UCMuxLekhWwO87tLpM0AJYe6IExHqkopGj4qytIikJZa8wxY8X
U1Vc1+m284LtetIC8HNmduZxqvcDBCMCoiBztUzC0OMok8XZQDhPmKAV9OYn
HyisZGvB5IpTkyWvCFbZ1vGC3fA3lxX1YNU+EbWFcN7oZW27/qQSlaWObC4I
EHntte/h0NnW1tZ+4I6vGvowLl7i02gPUpO49rvb+6Qln0y8RjZO6ODVH3kX
gPie9r0AwW0ez1+99fVW9lBK6k6nu0TfcNhVtns/38Hf82tsFf4aRlS0jxEp
RaRM8iLA7e7XINM7Je0OSY1g5QmmepdEj9SNaxn1kcu/ABJEoIkZXO2ZAQqH
nGKBKP2N4i94vgC+6VTQZKOaMqQpI1KqT5H6Gq3LkuS4rh9W5bvs0ix2fueU
Wx5XXEKNaOw0UdmQ2m54Q+eknhAxOnnb5bCqjMF7YPNlFe61T5UTzOw0s338
44jjyLXC7CKGiysFvKbVAGme03IL5fKC4yysYQvmpvAXoalQLmVz+fsA3PHc
9JBwNs88tp0XXN5gwhUr5WmEYIr9gpHtrgVF8ZXJ4gDBhHeF5rzgEIr8wASQ
Ern8/aUSW8fx+jtvKS/YDX/TUn82d19hlfLZYotA0HnUNXi78dc0wkTtyuWj
Dz7U9RsvAcT0tLW0Pv8Fl46fDJnGgJTxC9ltxnhTTr3X7X2wMl/tMrLhx04c
0Oih17/uZZgCxiJqlMb66lc/zIwBcBD4u2EN4Xbv5zv4e36NLYs/a37sEYxx
V9yXEH8xYxjY7k6FupFQtADRxrANcLmmWVHCfXhdf5hD8OZ7MNioWMwMjpXS
j9V68iDgC1ZVNYi/2KpbCQH4IhepYjpOjvOSWOO8pBWYqKXl1Wqb4LpH70zy
Ng0F1Dsqc/nrpvBXN2FthvQsMgIwcAqLtLiKzh3mEXpUGVzvDvB5y6uLWQvc
LuzQh0ViNCiRTmzTrPtQJAqmEANXNK7pQ7LarxoDmnFktZBbLyd++vutqD9w
CsXCVC73sCT1AYrpliv+bjcvWHDWNkh+FcELnpsh4J6juUIFKZifDMwBNcb0
fu40BbBQTQ9kZL+iJbL5I4XlOZ7KtXk5tDirpnjcLrxgN/xFVRMSNawjq6tE
NJSE9XH+uL/bn/+lPtSCywRv/eEXuIwVjis+8g8GQyoHbF9YHa34BPUbJSXd
3odXJ6KIq9ozNT0Wjnz/sovb9rQCoO+59OJLAIPvf8B3aqLbyEYFB2G79/Md
/D2/xlbhr6Cxw3SVZb/BEkSNGyyJwuawV2/ngDmWUTo11u9UZvk0W6o1WCyh
QLFd2tgbbhPaKLwVZXGAJKL1i59OpcSJOY3hLyqtqVGsDa6YWf1BTT6mZIap
Otxo/tcwA6aFJZoAcDLxEsNPTJ9meQEKKb0PnGIErHXHquGNVWE9kuZVzYNp
JQA3nbJhp7JAc12MRpnuM/QRLLJig7BYdHoMnCn4RowOo4i6EhHkFzFDVHZA
Jt1gAqVVrwxrzeJF0U3UiVXKWC3MI9jFwuls9gGMeNNN6lW2mxcs8LeCYhpV
48euFNemZx6kbESSkXMkoj0qd351Eq/xgrFjAhZraQEwIbLW48uLBq8xs2u0
oGZ43Jvwgs/M28rBCfTAxbFyx1aWSaWystE+OfePbY8/oyJxSJH63vAHrwT8
bW/b1dLqGTvWgeWIKK6CvDzYykQLyE1wk2peoV1pWdGM0m1aQzfc8FFU0Np1
QYunFTD9H979F2kpIRrBEJ6Y29axg7/n19gq/MX+wjwpNjHuz5ojqow7NviP
PLy5jUPTRlSSYMZRcE/stRXHWbDtedHZXChvcAiuiCW9CS7oWUQ62LLSUlCm
gClepzKt6l0N53+xdQUnBTs5Ab5ghGAvpwZ1KZU0qlnKmQRAHiZbSUJSY5Ia
Qc1GZcxx5jCYKJx9G/3kRvc3RevLyH2ExTLSsG4OGeaxUmFW0vcRxa/IHZo6
gK12wAhxVlR1CNYpfAuskwfcUSKi/lb0yMPeWDQOrwS4lEkczAPbXm5GJqTG
SxL/L61N5icf2IRHud28YK62bQsIrmwswnfmpk+Py8owQjCaB1iVzSX3sXYd
Fs56F2OEYF9GiuVyd2McuLJcE8co83KsBo96JdVTeMFn1i2hXdTEmm04T1gd
qyt6VRvkPDm2G39Rf5X0Dyd/vsvjafO0792954/+5OUZPQGrGHc8rkUp+GVC
o9XtfVC/XcV+YYDCLBs8ObFfkvr+4i9eBe50C8L63pYWTzL5s4lMACtVjG3n
Be/g7/k1tsz/RVl4VMfNmmOYMbRVp0Idx+IZw+0c5bKDGdJlLofFQ7GAt0Vn
pTAtxK/AC64mfzfFX6INEPUwYA1RjoMRy4wRp1KA/bNR/OUzPy6l+jgpCcEX
Wx+aBxrty0DkBJFj/HNjnHQTw8gnjVPsBTmI/adKxQ1ig43rPFTFwaaxHzT8
LE/Du7Fc2GRw33vA1UVuMrYdnAeDRGU+qvkZDcNWY+gxABpVDgACwjOqEkPt
a4Xzl2lco4fwbZvJM1bpt7ZoKMl5wbncw27zdrt5waKbZU0dawNhCoChsAgQ
DF4wD0T7RVKPqgGGpKQIUUKwb+MigrvGwhI5CC8DCEYvuLwmyrHsJnQ5XHjB
bvjLg1FBjQWxZbASs7J3LS3JPHNxfhzbjb9yOkik/o9e8b/2IFtoD2DlD3/0
hXHSzQxkK1QLDzinA4tI3d9HyhwAKIfVinRsWCaml9Do0aP7L3teWyvWQe9p
a2l94a95qDGo0HBa2ql/3sHfJ4wtq3+mokNukqrDTlmx9Hsypw6p6WNwqbd1
oNOq75f1g9ToAyNTNrwZvVvWAadSNQguVWlHlU3rT+yVqhokvnZ+ZSkLU1RR
x5qov2J6XJEAfxlcCrCiAXwVeluj98VkCUqQvYUMJuqFfR5zjmCTaz7s4QWO
Xhn7P9ZULBrfz8F75iFNJGwJpYiyI1EkBRO126BjuAtRwN/plNRNc12a1snA
NSA+y0D8ldJezoENiQIV5NfTblnrgDuC59Y4AalkVzPZWCZU4ulgLPSadbs+
zwIvGKMLlTUBBJjF4JVU4nKhFzzzICpP8nIs2K514sfuhEqIqjhVkJ2kYdMc
Y+oOgGDwgrPW45gLfko51tM83HjBrrolelyW/YrSw6wIoZGJDODXsZUVuYlL
cVaORvEX9p+TJ7BTOdcFxVuQScE+NkjkUViG8FduJnHHFlaW1ovdNvWhCy/y
7N17oceza1eL59GHwlkjyXS/IDbynhdewpWaDFQFxBQ/Z3wjO0k4xdQ9nnzN
v39gzx6Px9Pa0nIB/O+LX7hKkXoNGhTZpUzaB54176uOq7uJvqVu47mGv1T1
nXFYEwOT8uCUnJhSopYcIDIKLBB21nRBXeftltVfudQjZZJT2aOcex7BvV3x
g4cllB+2dcicuVNcq4i0m5h6xZJr/M12FhCfefDTFp2SYH7qccOIynI3NiAj
PmZ2OpUlrtYedvu+goKEDYPgSSritBi8yubCKunQ1WMYyNVRuBJrrZUht/3T
bUhGRGaDNpZ1VR09hBie+AbMwhobfK5Ugb9u2q8QdTCccrFc4uArvM+pNIHb
NKjx6iaioPK8UynAr0wbNdmQLMMuERyf2Gepsir3UzIgpw6hfhd8HQqOXkjR
+rK5e1eWCfKCUfRTLHOu7siLyprgBZeKOcu6P4NEsyDLBgFQZCmEmWiX+ZyR
/VPTd5dL2aopJShRT7FPUIDLbgYH617w0+QFy3AxDTAR/Rk1YFhjhYIm+mUj
m6xSszdwfuJNLNoLjZ7O9PQJTR9NyX7CuvVsD9bZqnG4X27XZ2GOOva82IRr
5mipVDnn+hU27P+SWD43AL6qMAiljD+XHR7o/95fv/UNL/q11rf8xW93dHw9
lYrrbFCjfelMWDf6fnL7lzytCJHw33v+4XJNHVCVHq4LF1Rhx8au2RHsuaBF
kBEvVO/UIFg18FOMTfBXkQ//zqtfDO/c1nZRa8vuX7m05fFHwmC1CsUbvntE
a/9cVLPv4G8zw00vkVqdlB1EfjfpZjon45AYCqGcbcB90thu/IVpnDXjWO1A
esCBwtwi6QEPq9F6pEaHrA1jz18eO8TNlpdjbVJ3WnFWKo5Tx1++6ucVI4bd
aWU/urRyEL4R7Js8uhhz+75u+Avgm5Z+njXuIir2CIZ3YGY3QFjDOtjsOKH3
l0rYl6G0uqHHIpfpcOx1/BUKnO7f1xHSx+hSVUO+08TgAXOsIIKJMYgToLKC
bDK5H56XpB7LiufyEe6gphwnw2u8S5yPvIKkJLBaSjWmFKZiC5gLdqZXC7nq
RzbTv2llZZnl8vcoJMypxwhzAMFu85ng9ce2vKW16Wrc2D5D4RHYHWh6NNPO
sTFeMG8THAXjQdECKknksvcVlq0qg9uuVDXNKkIDc63SeByjXJyamTmJ9ecE
QxAE05eoteu63vW752bT5XKNsXWuHk3gL2xZmYxXdOIGFxU22199vmd3e5uo
bW5p8bzw1/f8y7/+jT/83ezU3amJwbf/7R/v2dsKHuquds+Pf3KjpIQNwytl
4N/25bJJseThbhpGPJvtU9QulcCuharvjMsdYBto9/OBWXGw46YLwbf2tO/d
cwl8+pUffhtR+gWtifKO4YoS4EZ1HCs2d/C3qSHrvWccaWN/ih1IsZ4UC0h6
hHdcijNy1nS5XdfjNuOvpiL1VZWxmsjQR8DIBOcFdY1IbFuHyoYwScq33lIR
zhHwaLXsuOriCkHLKv5WEW1WZlHYNsGlApsZCblGHN4NxXiRg9kY/oLnC+DL
3cAZ3rYAfBDNKc07QlnyaY+KYxWKpiNkpkq8+grFfpcLa1nhWHH8tbmxsZm7
Wal+5Y34O6vQEYA57AaIFeDYLAm2PqwjUnuRXyPKirQee3nRZCPY+FgenkiF
M5JoRh+F1ytqXFH7FSWJS4weUskhzRpCvW7kBdtcHavhjRi+1+qKblhHJHBM
qjqQ7v3d9GhGDsGec/r046W1SaeyVo/3bizHqnDvrwk+bKO8YOxGh2reIbik
qCMt9wIEr62iF1yx16ol3xVOUa8019+5BGAKEEzoINeC6ObSJa68rZQElwhr
1Uo4D3EXbjIOsM1Ho/jLhW6ivG4qDIYib84Ye9ELPS3o3Qond1dr6y6AWnj4
whfvvuJD/9C+C0AZy6Qu+ZX2x04m81NDE+mf1rNLvOMGsslgOWekg4bpozoG
irGVreID5xebkkju/HTSnc5E//pv/gg+YlfbBbwWyzM6sh9gl78DKnvAeWJ1
B0lwnYEd/G1m5JXQGQfTuOQCG5bpgET7YBliWbu27fonjY7txl8rf5AadzKz
ExxATClqPah0YQREjmz7RiqdtEunRYWSoD1WkH/pur9VxJ4siEtij3VmwHBS
9R6Z4LSB1QTz2SmVYCsQdRQN4S8mx0kMwFcnh1HdQjuEQiXSWMMtq1hvWo7B
FqqoI/AdFTIg6qKZ+ZBtL9aDitzf30z+n6sgciJqpaosXbZnU1IVfwEvJAne
POqUF5kVoqxXKD/jAqcBQIusCRZUhNEhQEP0uQwYPZrZVR+y1gEXTSZxmQZU
Y8DhytvN5akxSFsBL5hYuWMAwQAxLOtajwobo+AFqyQ5OfVgsZAXjel5D+jS
JgKkT/tojBeMlhueM5o0AoLBCzatsaUFE5W7hD6VvW4PNXzwfysgWNUGAILB
C8ZifpfrA3+VVB/hpGkOwXa1iv4cOxrF33TKy1dfKJPpzOUw9316avSeu35+
039e89rf+42WNs/u3bvbWvcACgMA79nT3t7SikKRnta2Pbtf/dpXDIwcSKVj
4OrCfdSNBFjaQk0UJjZMNt3ycTpAT20ZButxNvd9tcOyeu++23/xpW0A8Xv3
7t6zx/MXb/r9TDrAmU1eQdhkaKT17uBv0yNF+s44JpWokQ5kAbaUMCURZKCQ
QHVhnktju/FX0vaPp/ebGMDB5IsgqmCh7Db3VTTNBwA7cN7V2hT+gn5JNS0p
PlF5wLo0q7CkrHfKFLsUSWqCWuAPFvVsiJg9bt/X1f/VMewMni+AbybTjUEn
uh9ArVG7AjYESUV5RhzMa+R9LNfN8h0AnQCgdTAV+LuJziF3vKpCEOLKAHwD
iGfkpAq2ojYgy8cJHSoVFjUzoMCXghMmPtF6Hr4a3HfYPeBJQx+Ex7CHYH9t
7ESAGhSowEm7Ya3BvUZesNqP6lhVjegGj/UaM4Rg8ILBQtDYZvjLecHIvVVJ
39TUI7V+QNVK5mcozdEwL5gm4AF4TCgDzkK8jRRsibAV3LswL6FZUpOJdirN
xMPXOznWvGDAesK6XfdnqxMhWAnAzYXX80B0U3Jc23w0ir+W2SfYf7LSmc8n
AH/TKf/06cM0O3gqExseu/OrN3zita99eRvGmzEc3epp37P7IoTjXW0chz2/
+gLP5W/57W9968qenm8++qg/mxuzssOyGsKogsoTRnpcSNzztcyj3IZr3Dir
ewk2hRz95Kf/ySMEPviP7o4bGR3AXpZmkGFzwwgGn1XX/g6Njuca/jLWdcah
G126fnBm0pdjB5lygGk+RQ7q5sBZB9wnje3GX0ruZtpDjrNUXl2sJgox9Drd
aNy14ThtmfEqoBUYCEzOYrm09vTwt8CLXZ1ScdmavA/BiPYTbUyjR5iVtNdW
FN0rs/2u39cFf1FcC/xfZx48X8xEgOeodSNLusG4ul5t7S3KzPwoNw3vQ7oU
OoL57lowudrQZ7P9rVrzU813c8Y0D2LPcs2uabxuZR1epGcjEkE1M4xqEuxQ
DF8N3Xnq5UKjXs54rV4KJAQxH0x+eFJWEmhuaQFNH6qSkprzs+rwVFlZXdFz
+XuwHMt9PsNiFxwudDyVPvSCi7pTzUzbPL/QPAo3ygvm14S3CMSgpV+cG9w4
Se5l7MjCQkZAsF0qY26huZOq/qsqBMPVTsnu9Ty0C7ZB0TJY01G9s2wLmsC5
dTQcf+ZF+JifNYOS1IVGIDaIRE0MK9+LIRElBkh07Gj3DV/5+O+86kUtnl0X
7L3E0wL+715wgbFQyuNp5+4xjBdc1vaGP3jFBz/w17fc/JmhwX2Z9LAqDVns
MDiqsiT6ywTT6Q5YAq7nk/YaPGh21wM9z3uhZ/cF6IB7sL/D6x5+wI9F1Ii/
Xo32YFiJbGE98HMLf932ybuyD9+ljqXYoCJ5dakzqwfAjpLoZlSyszK2vf4K
OaFJxyFZ636dHlPVobQUTEndDdcdNTgIGTSMo7I8pBDMRRJjWDceWSu45h+5
w+jwrXUJZeqx372zjHm6KS52sQSjWFThec2IK6xh/xd5hWY39nlQ/eD5Amga
+dvhyYZLy3jXSE2JinpyrvmAj+ELiny3wF+RTNwcf3mBFudn1ftWOItc63IV
XWLc9xbhp5GPia7Q4NXCTIBvhPirxk3Lj9QJEtZJXFcHGBnR1WHsGKVENX5Z
wOTA3kmkG3lM9lw1FtHwsSJ2jDrTamWZWdb9m8xn7A3ERah47j6g0b7J6aOr
hUVubPAeFnVJlsaPRnnBuobNgg0dK6JVOQhXht+1MHipyFkGCJ6XKuW5ir1W
rexq+CjUta/rgWhNd61/5kkEzKHDGYJzB2B9evrhtTXS3NXYvqNR/AULMJ/v
Gx/fD7jGG5BFeHPkXgzaYCejzmwuCLaiZSYzqfi3v3lVK+JtK6aHkaYLkNu+
23Nxu+fiC9oua/PsaYNfW9rhf20cly/Y43nTG19xxQff8q1vfDjo/2ZqAnUp
wdE2TNd8oqX0MlgXRp+WHf3Gdz6G7+Jp3b3rebtbPMnET2BpoDWrdyjqQc6K
2qm/anK0XN19xvEb//D1F19+xZ//4/s+87l/TYRvYhqmyWRz2/s/Njq2G39l
LaRoCceRVXIoLfXDHVfBP8p3N8q7aXSAxUtZDEO11gGJ/VQyujTjkF2ZcV/v
Rb6vwkRdFPjLIWmxurOJOmp7Hv4ua8OS7u7vu+AvUo3IgFOaJ9KYTvvA8wXw
Rf+3QV6Vji3powgxmp/pQXxAsGdimiQ48bYafy6WsdVdlVR75u8rXLkq/sIL
eTHuksMf2wKpKmulVUdmobQmhPgCptHPs9gOeBZWzqeonZp2kGpenDBoFfQi
+1WLwInBBoiUSQbYfUBjYU5YbibOWXJOV7vZ1sVG7JXS2qTrPiwHkJVMq31A
eEMif1rump7JAwTXsrfN5zsb5gXTgGgWzLQEDCFTCQPp0gS9YF2/d2nBdEQg
YpOEvev1mRHeay0QXSoXp5CU5HJ9mN6LwQrig50ZzhA8ZVntz+aPN31BtunY
Kv2NbLaPqNiqQzfDCutSdL+sjP7u776itQ0romH87I5vHjr6o//+wRVXf/Rv
XvPbvy4wGUeLqNoCn/iCFs/FQiEa4XqXZ9duz6+/+OLL/+aNn772qp/fft09
d92ZSSPrH64qRr8nYxQVXIcVEuV5/wg1ks9/vueiC9tRjsNz0R/+wSs11g8T
QFF68tZg5lTA0rfML3sO4i+mBlhXivTllZAM05uFqOrTSdDzyc6sHJGwwq0n
q8VPPnrghz+7+iNXvumLn/+7gO+bmjogpRPJvu8NDfwQ9mHY2cTmxhMNvTBn
VCUC1hp2QWV9XBU8JvrZideIbDJD4AuK0Fa1vwa4RXrcNHonxrtVJYRKsCyR
mugRu/f6yzA+BrcpaKJWcxhQsoq/OkIGo7Gs1S9LAfCmTCskNMmxKwHxNRx/
dsHx7bYr3OdhYwdv4lCuMVkQkhT1ENxi0YSdkUG4QTCjUKLZ7FLc8dftOqTV
Wyz9Lp1hJFlOD6AygJwAG75hHRJ9YnllRmzjyAsWrJZmdCCLVWfTFqLDU4AR
gCZMPmwaQfBzUV+lUlJJH34u6xJNf4g86oADt6bx8DW44Usc4uxaz6bC+gWs
9pIogLu4oVqs4fjnWsHKZh/IKFFF66GmV/RpRT6Xy3xISd35qWPlklnlBYuS
gKfoQD4jXrD4h6XC7ExGUfsz6gGa3Sc6YlcVOQQvGJWyeE9Yivresuw32cjK
vOQUV3FrLK33MuYxmVJzZVmN8oJN8xiP0hc2iqoVy7Nb1s+xwWOr8Hd8vBMZ
f0ZfSuo0JsMTkvfwkYPt7dVs7Ctf+cKTEwPW5ABWKShgFR8bHx8KhW699tr3
venPXv2bL7no4gs9u1p4aLoVULidj127Wve08gfwE+PVLZ5LL/L84e+/9CNX
vvPb3/q4z/sdVR1RpF7Yq3kRV0A3B773vc+2YQU2/KuLLrnIc+eB6+F5nABS
IAc+srxl++EO/gr8JbLP8/EDZiaURrHc7rzeO50fevDUfkMfzKQicibGRZIT
g8n//t53r/rSF/+3z3u9LIWkTPDnP/vUjTe8q+Pg5x64/+cT415UFpVCSHhE
gltc/IS1LGWQlCp6DMECn5ocAsRMpwAZI+JPALu5bBIeo4Sa0YueiBpExhlP
SAlFcdNMpCe64a+56SSsu2KhpIDnAjsDCfP2tWHAC6ylkRE+TDMmy97nGv7y
Y0Ok0V6SlWGZwlbQRVSv6EfAZ1QAUAD1IRvEXwBfBKjiAmAWd86KTqHgFE83
qsOJVUbI7uFghzqHNbxr+ChWNz3EyiKSgskgZTGMKtN9MNmI0gufooELr8Vk
2qNhO9oemMnwsYAjTDuikxGqHEVRaBpRqZfrYnUBgiskhBqVSi9MJ3igs+Ol
0nw1sdvMTVlZWsRyLJXX9KoiGa241qNiTpYmJycfLhZOV/vxncnXbJoXjKLO
tXKsYmEKe/ViI+MOooc49z+iyEFsU6hFDIpilfV0udiasuzulTkdIbjKC66e
HPe1m+ElNcoL1rShyfwDhVVzYz3YWdSL3ir8RbdURVY44K9mhlJS+Ktf/Qj4
toIXfNXV71LIQErp0q2ArIZUdYBfJWQzmQwDVg/c29Xd8Y2b/+Njb3/bW3/v
da+59JILBJu4rWUXh+D2Vnjo2dXeelGL5wKO0Z49ezz/9M9/i7xLLQ6eEfi/
4Ahr9MgrXnbZBbvhky+G17z5zb+lsyRfTUFNDUipAzv4u7X4C0sM/N+cEpVx
AnRr6UCW9arZeE2bDtuyg18JHi78yuE1IkATEPPI4e+HQ189euQHAKDguv7s
p5/4xMff+Nlr/7K76/Pw13xuAJ4EZxnAGv4hPID3yaQD8GvWGgAUhjeBkUnj
dOVFmDFY+6KXB6AwQLCQcBFlIZiKkr0wA4sFLE+iFmaI0hOdvNKvihewYcIw
DBSDeq7hL+7GeNRYn84iuBUq8zHDj0U+WhKTmxx/NQMFkxvFX/B8AXxz1ig2
FQLwwunRB1tNo30osJyDocIe3N9a5W0fQQHnxg5s5WBXau3i4X9zqjKmqKhi
Tc3b4c0BeeEi6EZC0xOAqrJygLKD8AVhx8feMQpX+aMxVeakbw6IvOgoKrSh
DKuLWQcU/SDR4X0wHYD51Ca2ebwXq8tLqpk9LCkBSQWI79mkHkZj4YwMcyDJ
pTlqvGChS7oVvGDMWaxrSxYKqyyfu08lSSQFs6DoqgMD8JdrRAeRPY1zI8xb
dgblTAIhGCuiF9GCErUI5WqTjWeBF8yL1Xtz2XuLa0z0K6xHCc7KsWXxZ2sA
VwQNmrmYREJEG/udV7+4rbWqyHH8uJdZSYl0WpMhjeEOCXa1InfIUgdY14xG
UQZWjSkZbBCmaoOPnQgnB35y223Xffzj7/qz/+9/vvQ394rC5j27L271XAT/
xzquds/7/uVtnNoQk6Qe2DNh4qnq0M03XwtQ3dZyaYunFcC7x/ufKunDDVnu
tLYuL7mDvwJ/VckL/q8lhSVs1uanmSCRgmk9xBVKsaGVkDKTJJ+AQhErFp1l
hOsKtw/8WXBOAUnhATxvmX2T+cEH7v/pT/7vR6/40J988fPvDPq/Drvc+MlA
LPJtcKUBDuDFYFbxDoCohif8X16PFMpkcHcSrbV4OU0IPl0o6JqTcbHeJuRO
+HUy1ycC4LCtwP7Ad/Jq2e1zDX9rrlCtdLY0o5ChcakDDBUN1bHGsEmfbYMX
Rk2/ShKN4i/SaStLeK8z+7FcUzqgYju/2xvtw8iTwmFuTmNBFNNEmVbD+FuV
qKrSYUp2aZZSwJFD4CYQI6jIo0w/5hSX0LcFZ1bHCCrVkU4FX41TGv3gDjMj
YKhDBhk0SJ9Je00aZzAJ5aCa8cOkQlaaEoDLiIVtohq5cV2sOilpcVGibAT7
7dJu3fK5T4kgTAP0cUgyP/kAQrCgvm4ZL9je8H9439XV5dzpqQn0+in2QRDd
mjABVNWI7kPzGPNBPqwRUoOwQZlsZHr6hF2e5B2snWJhnc3dzOk0wgtGUQgt
APc0mz3GFUS5lkvjbZq26tgq/AUPBcN94P6z4EQmMjzcIchA8PNP/vi3NH0Y
5rCq4xyGdZfPJ5gWMACs9QgMmLRUCcO+rWZCKflOzegxsmjIwT0VZaUAoA8/
Hunxf/drN/7b/3nXW1/5P17wvBd43v3eNxy7bx+RsegOm3PJ3XAC6QyYW4de
/tJdgNG72vbCCfzpG/+nLA/gto/60lumC7GDvwJ/NcUv8r8pNQz4awFgqRHF
ionEK9i9lhWHwTXrMA+LEmfcMwV8hAEPYAikhl/z+SQ8OHnyIDxz+vQQXmfS
n54Iizh2JhWJhG761jff9+l/v/yeu38M4Hvi8YP/+R/vvf5Lb/f7vgRwDANw
HO4IwLrAZfEY/GLsZaMGiREurKyK+is0ySTECPCsYXdEHRg1znR0q+Ecnmv4
W2vLwwuSwC0sL+ZyDzJrcEJOpJS+jHIY3OFKoSwpyLvRGsdfOT0AbwyeL4Cv
qR8TjFosj9F6Gxowu2CvYCRqaAkYOuzwagywr/F9jxfxCB1pTDwWeNMcQIRV
+AmIjG12bUfTY/xeo22GF1zFb8G/I9gkXBpXjleHEuUjTHnqc6vwt6pZjaSk
hYWFDDPHeNXxJjr2GB/gpKQAQDB4wRiIrmZbt4QXXMXfar0AD0SXC8u5yaMq
7UW+rR7gV8aPPETax3NJSJmB/RmlxWHTwL3aD07W9MwjdqmqjFHnFjV6Pg3z
gnWfzsBD94Kzls3etbaaq+3SZ+fYKvxVFXA34grtxAoNOnL1Vf+IJc0tu+Hn
D3943XjKpwhFIBZKp7tU2adr0ergRiz8RBEVJc65uiGesg9wXwkDmKgnbAbG
Mz3jab+ZGzWyI6fSPRnSk5uJwzuAMWwZsJN3w94O68LKHrrllquFGBcmgls8
Bw9+mxkDsBzgo3fwd+vx91Nd03pfGt3PHhP8RzmE4vmyl4ukRQF24TEn5ovK
KNRUMQwMYMqcvgc4yEENRU3rWCwqbCcmukSZFkAk/KxXbRmsT3SPBYR99JE7
jx75QV/vTeAvizTxjTf83Xvf89tfuu5tRw5/HxxqpsfBWc6ZAxj9NuKCt/L4
eCeGmmkvYC7MLqdow6Uz2RA8Blf6OYu/pfJqfT+sYFGKXkFe0pTtzBdtHSYz
5hSQcR9q2P/Veh27iO1apANYsEHQWiZaJ87YRoZOvWJQrUdVOrnOdrfB/I3v
e7aQAuNDLNRlx1kqlfjKFcgCc4Drz3MqDZewVkbQiqADYDxkrX40CWrRThFI
4WsEfKutiz/XTpJvKcuLCzIzD6dl1/wv4+4nQAzcDvCCFQVzwViOtUW84JJd
VdtePytRAlc2cvn701ICIFgEokU5loh68TY6PC6NqlnYXYJrePaDjcchWKiT
NVut3QgvGNv91DxxcOuy1r0ryxiIFtfk2S/B2ir8FXrmKuswc7HxieRLX/K8
NiyYav/Nl1xy4vEEOLNmHjNuWFRDerE6nUcgwUbCfL0aFnKU6LDAA5jnsJy1
qGX05qx+kyU0lKDsgKllsBA2zpa8oncShpT1uCp5sUs1RZENQG3YPwF9fuvV
L+EQ3A4u8F++5bXpdAJcm03z8jv42wz+yuluz0f2TZJ4BjdexF9wAWSz2vNC
bF+w+iyrVyAs2EgiIq1xLjlsVgZv1ixaP8Nfc7l+Ac3wc3JyAFO6UgCbAvDp
ofKuo/DTMvuwsxUvzQKfNzWBUqg8rQwzKgx4ffJEVy47OH167KEH7/j6jX//
/n96/fXXvevwsR+Lusdw7KaRoVulFJJHDAbY6mAXMwmxGN5zanLoOYe/FfED
04V2VU0Lnlop89pUZINWZpAUTBK63k1JuFH85ZVLBWQkAVzqg7gna4O48JV4
Q8PQR0w2Cj+xBlhNwgkINGz06wKO4Fhv3QBfsWiXVznwrlRrg20HcQR7AcfR
SqRYh4YTQ4nAPEH3NhOW9B8R806W9esm6kIj5JEQtgDbsvqrpeqWUvWCV+bn
ZMbucZsPoqOcjsQoDAhzXnAyP3Vsq3jB5VqBXvVYL2EqFlayAMHgBdcC0TzN
xGkIWIPB2xSKhYNXlfkxVqz2oxeMgeiC05wsdIO8YJGV1rjZj5V1SiKbPba8
Ml4sFkulJ8fnnwU43ir8xYXAQoq+Py13dXZ9m/N5kQf07//2PsYOIQmLdCBX
PZ0wtGGq9mGUAMW6Ixhn1gKSivKziuZDnjvm7sF88qlKDyAsGLqmERCxHZOC
j+zXSRAeECls0SSRAvCrpgbw9dzEgg0c/JebvvP51l2ettYL29t2t7V6vN6b
iDawSd3+Dv42h7+T2V7PR+/MKVGBvyL+rGbjQsSMl9jxNtm8zBjhUkfFb3Q2
zfUYtfjJA1NeFOvWAYhhnw9nMt1gUwnykQhf865bIaF6B+8v6rhEnJm3Agmi
h5UOTOaHReRkYtwLWAyeb844NHEqomoYP7TXnB7f1//rO1de/4V33XP3T2EX
1dPyV77yjuuv+7tY5NuiSOy5hr9YAgw7cwVLYirFOn2mKibBnR2sWwYLVtc7
mdaw/2taIad4GvYWmfwEHRCtE81vtUsY0k9/ZJROmXTDkEinQjs1o4cYnRly
Z+P7Ht/z7CdCCU6N2bIzVcRlW3QqJSRMkTBTeynrJPodsGnzUnkMzZkm3vSM
MmblHltezjuidK1cC/RuFf+okuMQzAPRQiO6tLAwT9zmgyJ3oyeiV2nUsMHC
rEhJ3VvIC+aUahtZ1ZVynRcshMXQC548ynPBuL3zrjphcbkEnUGUY2HTXq0L
C4FoFAPR0ycEA73SeBy4UV6wQdH7w6Crjo0MuL0U1vRYoVAACD5/8XdSG2Wa
L6XcrlqJt1z+x7xECoumHnlkH3g9ogZVkEE213PeqqGoIy9/5R7e83BPW8tl
f/C63zk9eUyRb8fomdaDPQIYbtrgW3FFr4b3yecg/p5xvPQ9N7zwL9//j5+6
5rNf+PAPbrlKV8Npyf/dH1117aff8eUvvbu782typlfXhkaGbuvq+GrQf9Pd
d/1fLHrnVc2wGOGB6EuFMUklwnRkk4neWPncEHoQCpZw8JbQQnoX+2jwxxHB
I4bXWGZSgGz9HcTg6JkQddeqzDtT0z7sClqt/CzxYFppcRH2pUVJSx469v1g
6FvjJ2FrTRBFv+6rl//rB970tS//fXqiB33kCvZtx4pr6eDMzBD8dIqrmD62
gqlUN4ARKgZjcU6IxyoTaCSQ7lofTKHWGxImBEqqnjz2sDGqapEZdmDi8dG5
XI+PnbT0Pk3twCpB6lVZIAUbV65/XI+fYnFD8WW1oEUCMKST+3M0NAmWiexV
WAfLJIZXT9kPdiyodxp61yl5aNGZEz1znWqXI6feq108z79y9TFsMvVtZ+OG
A3+17aqYtI39huAd5ok8DOBrsA6TdWO5HfiDlSUAQUWNa0ZcZT43/FX4hMRa
JubFsC1cCgU25ADvlrvGtTpLXArDFiUx647V0xx2bQvmQFBx5orFQhP7OQ+E
CnEPeKP5VKqX6AGZ7lP0O1S9R5LjTmXFMAPgRxA5gVWjbnYX8VlmBIaGalrY
2Vw8yCjd4BsS7TAqU5fEVS2US2u1GHihxq6qlYe5HEuL1DDuzShxlXqp1S14
wWAluu5XLDZ5+q7iWpUXXC7C/eWblWhbWfsg265nihu+btVAdGF5Mn9KVvpk
rYPl73TjBfM8VIAiXQi20PhU9n57dcqxa5F/cS68k+Yz4QWnlSovGEVEwXQk
I654QcILS49waVMb6eDV1bN1/ZRdjq3C37w2KKUOsKy/f/TWiy5tQ9Rra3/3
P74tncZSNJHv44IkCMHi57YOlSRvuPFDuy/wcJ3Liy7c3X7wzq+ZJop08foE
fI2IhzT3/s81/HXTn7wn//A9dEybOqxIXvnUnTM58Af7T2Ww20VqHFAvkTVH
0hPhZN8tPV1fCfhuPHb0NvhXp052//xnn/r0NW/5/Of+2ue9Xmxct//kE1de
8YbPffbyRPwmgNGHHrzjtls/Ar9+5cv/q7vri+DVwjodHfnvzo7P93Rfd/99
PwO0rXGaYgLEBUFJkJXgT+OneuA1gOP4V6Uf/G5ZgcuysKF7LDxc5TdpFvx3
gA9JCU5NDhmmD/5AjODp/P0TJwNT+UFYvJnxiWs+/zcfufJNX77+nY881Hl6
anRtdrW748aB5H9kzTHeNLYX9gywNjOpGEDwZH6Q5yurzGUAbhEtF4F0MxMc
n+6CndOQf07JfXLKd8nbrn75yy72vPkGzzv+86L3//TXP+bb/f47Lvxw90VX
+vd+yOv5xEEcV9/h+VSX52P7648ve/+XX/PRGz1v//rHPvHxW378meP39qha
mMNZ9VhbqxZ3CpAFI1/8urp6hl7kSEDCwpr1/aXE92aOvyiZReRRFF0Eu4L0
gGOI9UiVFdjiEH/1mKL7G8VfAF8zf6/CEhIZkaRDqjaMff3kUbd+024Dbpyk
doHRImOv6oBidbDJZMnONbEhlosiA44SnUQ9apiD2PzICBpWn64fhm8BvjyY
c0SOYRzeLd+tJrA1mJpQpSh+U0y69Rq0X2Nh3USaZFX/QVQR10AH1ckqK3ys
VTbvU1BZmJ/LUDbGnU0v+JK46bnzguFlOhvO5x9ZXsw6NZbZ2tqqU8/kVidJ
ieNyw/hb7zAIJ11YyU/m74f5sAkvWOiZ6Ay1PeFx1jiyOJNGCN4qXnApX+cF
g+EkeMFovbvhhRaxrMOLixJKsNZEVJ5aLt58P2WXY6vw18DaA19+auhDV72d
c4Xad7V7Yr23i2KbJ+HvszAoiz/wUNeFF4uuiBe0eFr/+A0vRZEH2SvaCgtq
DC8MaCZI+FzDX7f+C5p+wDAP5owOSzuYZyjHkZoITE3fvdEPBWTkniw6pyJL
Cz/TKa9I3cJjQCjLRB6ZaAY9fqpLZHg5VCVSEz6A1Kw1ANg6OHAz4HU4dMPx
Y7fC61MTPXfs+9SnPvlnn/n0m33e6+DdpIz/tluvvOrKP/zC5y+Px76eyyZP
nuj4wfc/9Kl/+6trr/3zHu9XYFNdXih1dnhvve17/QNJjTLcciuLofh3ege/
ec+9P8fuNqQLnjyRusOgR5VMRFND8NGw6lJYXXZk4mRsKncPQM9Sfi3Qc8t/
fefKz17z9zzDFc88Nv6tm97zjRs+EPB9E78vQy2viXGwvaPwFdIpP08dhsFO
mFSijxvfxx52ih8lK+XYy67af0q5NzJww9g932fTAw9luj5x3eVXfe6tnf3f
vk8KGFI8R/rJeMiUE5N0YNoYpqkIPJbZiQmt7/kf+rZ5IhQIfL7jwM3UipZK
jt/vf/TRRwFMAXCFnyt+wpYCvjD8FEBcR+E6Lj8pC2aLKptKVbZR1+7RtUHR
TRsTr/SoY6+iIgdJwH6LasCN+r/OPIBviu4nhl/RgzyefBB3ywZ1sFH5UMfy
HthjCY1Kag+lo03p7dtCYqK0ViwVFqX0/QDB4AWn0kkVOyreVVpeRTWnTIJH
VwKufGe08IP1ByI1BpuPTO+UtDskNVIpzzoiqo8OL6fVVv1Qu1YotfkBt2l+
bm4cW3+qmOrFeK/7ViarQdjbYY9i7L7lRUOoT4Db7TyZF1zhNKWGAweI2ht4
wWsFAyAYpZZceMEYjuatsrgLjGkjgGD0gu15LEHntscz5AWXSrPVimhV9FPG
siu36yN6OoN9NT+fdirz4vrUGnpuAW/a7diy/K/qA5C9+96OX33h3pbW3R5P
65/+2atk0lsXVK++jKsSbaEOs9tQlR4z2//Rf3vHrt2etta9WInd4jl6pIOL
QkS5PlKI9x2OiELrHfzdfLj1HzRTASMdIBM+qoQt1s/VQUNCfkowjAQDV+NB
DxTH4PReGPBKGAJ84RoCkmbSPoBUbLqBASv4RjFO8g0JBQ8B6EKdkitlBcQr
AXBRtMroFTa2KPMweGAQe2VqUfgseI2U5hdH7xf+71rB1qg8MjZKtZlSAdfq
yKH9dxz4wle+8k8dB76czSaWF1duv+Oqz3767z561Rv93i8C+sOqu+WHV1x7
zf/5909e7uv+Jqocrzg//uHnr/nUX117zf8Gl1wjCbjdvYn/+Or1//y1L//T
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
Ki66vujSmwou+dUbFy7buvD21y+/vuKi25696NaNC5eVW/6n7LI7vPOue+Uj
t7186Y1PW26vslxbPO/O8qXXvfK/f/+Y5St33HjzNXev/u9q3xMcaw+Hqul1
YeEb1g5XKnJEDmHtAufD4l8yzIomZIFLxAm1TjpIA//2dsA8l32K6meEIlmp
xhun7jQmEoCSgL9wKFxSxGqQ82W1CvVffGDz+DuT/czwl97HNP72gXajahiJ
oUh+aqlA1xVBh1zxFxRe5LfEygVl3d0+vtthueb1w32HWcWVU2/Tjrzbtdfy
66clrUUN1YIOyEkOaiM2vbfGyQ7cTBg9cb0Z2m6mIkw/Ri3PmZ+BD5g69Umq
NJX6USMYNBL9pNrUsEGstbHxPjnk1sI18LzwUnl3ZNexY5vh08cChQN9u1Wx
jgt4O8NNh9u2PPrIg8tv/vbNy77jdKy3l/+hgykQpeqW+sYK5x+pZqSpPp5D
LakzUkcLU2JpXQ5DnWF1okE7AM0kdGfq8Z8p/E1E0wvtpGguHIhRmAxI/Ci6
VQX1X04qAbVRgQ2+CDBFk0gtMKGClWqo3ndqZ6SGuNGTPrFYLDGY8vDm3KKx
iZ7uroO8UMXzdgLugC9Z47JgDeFEG9wpTd81MiwRNT9x4jINOlbRE+Uacx03
xKw4hU4jOTI+JgMEgxacLS8YnjhSogjZ13FUBTdAMGjBQ0OdCZRGcEDMvOAz
wd90XrCiNZJ6yrbp84IFpQTmMA93Vts+OMCe8EenS1ll6rzT5E3nir+KWhZk
K1557SEA33nzFsybZ1m58r81vZZqu1T5paVq5hZ/v3zHE3sDXon1hdTqfs0T
VqsDcF0BpPMtK/rjhQstFy+5bJ5l0UWLLCt//zNdrA9rW3qErUfU8sOy/12t
6gu3PXqEdwUitr17NupazeFDRS/+6cbbbr3yzju+U1hwD+i8Eb0BnixQYENa
kyD64CEShWYjNk7iNKLJVOUOWsF5SJC3B7gCkDx7B537331LC7vbOxAIQN4T
uHIQRGFewQSTVBvK+ckoUsvm8XdGe674G09Q/E3bn5Evqy/ANsghp6SBHN6k
qLXwXGHRVR2r4eSKv1zAxzGVoUitxvmDUvXuDtsnfl9YG2ZAV8qpH1G27xFd
X1r5KBt086wNutRVbWpHVPmdxCp50uN/MnpOisXK/NckNgbzMybKpxCZRAWn
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
UhM01WLOoK7HbOMvLFdkbUmlmKUeqLPQJ4WD0jIfp3EpcL0AtZlrLyDC4sWL
M4diDu3PomqVVQ+ItaJUTV9hPsOsFtt9rFh8ya/e6NdgShQp8tuyYmVDNk6z
chHbYc0177Y32yIoNqOJRtnMcfBgOrFOGWGSwcQB0c6yZRrMRs7V01sF+AsP
Wjw+mA7yOZEcbSZnZQ7F+Pg43TkwMLBjx469e/fSR76lpWX9+vUrVqwAtKW8
wZlKMf2MySqcCZ0UEWShEjobLFckdyTkC+tVmlIJ+ItxHVN1ejRztcm0aUxy
/po/Aa+m5yvTF0wbfP0kdQ8mEqxMyVgi1qMqu1HsURyB4BZBrpiya3KFKsEq
YZVErKOhSs1Dx1kjPpjp5DXbO++8c80118BwwQjTUzpVnpny7ftvk84Ejt/b
2/uxj30MGSAWLYLXpUuXDg0NzQoF3FTtg4q/n7vrwXeOlHSolUd1e0AqaWMR
Pdne2jDnmrIL7R4seRbyyf21bMD1kVvv/9NLD65afuvvl1/51pu3d7RjBFRR
4ZpVK793z5ofPffs9Z2heiZQ8sYbN6+75z9Xr7n6tQ03trZ64Pa63e4//vGP
a9asKSkp6evDcszbtm1bu3btQw89RB9MaPCZJ554Ah7VyspKGPiBof7S8sL1
6x9a//DjTrtnYhy0p74333jmmScffuLxFQ21nuhEeKg/XO1uuvm2K+9Z/b3i
gnvb24vbjlW8/ubv7rjz+y8//8zLr93W3Vlz+EDxxo3L71n97/c+8IOCwnvH
h/rVUC2c6prVP7zv3p84HethBAId5Zs3rbj1lm/cduvXnY6HAC4By1595cZb
b/naQw/+e1npWsDKw4e2vPXm8jWrv3//ff9aUrymva0E9NlXX75j1V3/unLF
1dbSR8J6E6DnG6+tuP7ar66++0fl1vtBAGaY0ldeueH2339z7T0/djoeBdgF
OH7pxWX3rPnBqpXfgd+imvILz924csUPH7jvp2UlD2J5U8776svL717547vv
+neP6zlVamQDvqee+N1vrv3G6pX/4bA9efeq75Zb76U6NUAwTX1Cdfgcw98U
uWhqrSMx0icqrs5mTxMNkTTkKA3HniaO91SvVib5rWl/Pgsrz/RNCZdJqpOX
yoJsBScXgHxrJHsFpUSI7Orocl+4bGtI8bF8RUguC4tuVXb3ShX9YTcvuy66
+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
uDJ/zQuC6OOFqq7ulkDQBa9Bxq1qdSxb3hVpVjSfIJNi2cYgLY9oTgMKu9RJ
lGnOyozmPfvDktnoqZpUFSaVhGlwy8yxndt26kSa9XrTubc8/p5H/T31XxOF
qZj35ptvmvx+W7duNf+V/b4YU9YLlpVq6LxcKskYfyIKzUY0CQtIHn+n73n8
PZ12LuFv4gT+pug9+zjV3c/8qa+7oI3ztrOeTsnfE/CHhbK2dpumFR/V3Psi
zYe6Wt5tLRjtqwlJ7tZWZzBQEQ7VYb0/vrKjHZ7WKlB7kaNGwholAM2S6hTl
2pS5O56aBmagspEWkjdt2jTJaznn+DspncdIE6e88cYbRpZY6zlsybNcbzr3
lsff86hnw99Js4iKeSDdLV68mPr358+ff8UVV6iqOv3ilq1esKCUCbKNlTbx
pHgKxqUYo1rEnsff6Xsef0+nnUv4S9zZ9DYl4+R+HWcVlxr2HRKK2J7qDsne
q/g62yt0rkALlcQYR2fAoco1rFihqUVC8A1FLRPCHlV26qpbkRxYOFur1BQX
bMBbTiqBycALHkl3yWp9MjlMU7cyI6bMKeHz+S6//HKv12uk9bVTM2fPfssk
ico81Ysvvriurs6Y69Ojba7qTZ9By+PvedSn0X9NRwZ9ikEQvfXWW6nmS1+h
PfPMM8a0pqFs9YJFxSsqPlGrEOU6Qa5Ste0TowNBLDmdx9/peh5/T6edO/ib
SJdJgmeK4m8s1ser/pDiZXirGClhpVIOtFqtplWvebfb1c6XcV3+d4UKtqdG
0AFkHViIU95O0RZgl2PKAIhlQGcAcdkpqqWi7OElLyvZ4LCGQfN/J7NCUR3z
i1/8IozMd7/73ShpxjmgrBnpGWvO28HBQXj98pe/DKf6T//0T0aGFDHnMXXx
Oag3nXPL4+951LPh76lRjvv27Vu6dCmovTS/GzaWLFkCG+3t7dPeF2PqesHJ
AUKv2m0kx4xkT3yiH2veyVV5/J2+5/H3dNo5ib/jiL9Irz0S6trHB6sEtkEQ
S7tCfpkBMC0TeBcjFWq8N6LXdbSXhkJuQdiqhYtErVDptumhJob1Qud4H2zz
QrUg+pGuEx4NuVmSWwJYx7N5InYcHzRj+NQzoeRI8PDOmzfvpZdeMvfPLT9n
ZuC6eSbPP/88nOpFF10Er6+88opBtM5zwQR99utNn0HL4+951Kf3/5oTybQ/
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
W6VKldasWcOD0G6NGjWuvvrqKlWq2JR1y5YtSap8+fKrV6/m7xtvvPHrX/+a
Z0ePHg1TX3jhhRdccMHIkSPh04svvljOCidOnMi7GjZs2KFDByVSrly5+vXr
N2nS5K677gpJ2zjnnHPuvPPO/v37B2ejI+LAglpQ15DmmzLDEnGgcBDJq6JG
5N/CEPk369B+GB/yjfPPNqmbm5uLlmpPoXuiDiNRe/fu/cgjj0CXnTp1ateu
HZIWUu7SpQuPTJo0CVok8pQpU2rVqgUtLlmyRD4Hhw4dSmT02WbNmkHrSpYI
3bt379evn15at27dN998k+s6derMnz+fkKOOOkqKMwWOnou6reHE22+/DVmH
glPTEQcWWm6gF+/VgkrEAcTBIq++B0T+LQyRf4sCmp7VRO6OHTv2EROxqdlC
fReaLLqqbsG2aKwQbkg8GcktYM+ePTt37szFPffcc++994bEUYJuQcSQKReP
PvrojTfeiFY7cOBAGJM6/cUvfmFqEeKaB5Ws3jhnzhzToXhpgwYNCNm1a9dh
hx2m9qBb27ZtO/bYY3v16hUKnlqKOIDwdryDa04RBxwHkbwqakT+LQyRf7OL
VNMyOxj7gLRjbam6+eabx40bJ7cL/EXtve+++4gwd+7ciy66iBB0XrRXFBw4
FHYmGjxbv359BO+MGTNq164dEt9GcCgabteuXYcPH277cyxvcCg8rmXiK6+8
cvz48SEpXr0XEp86dapCpF5pey2vyMvLg+tbt24dMiyERBwQqPFYXRTz3vGD
wkEhr74fRP4tDJF/sw7zZRAKntzZK3xT5EFUVyhYf6mLoUOHQqZcjxw58s9/
/jNpdksQEmqGXrl48803a9WqFZJF3jp16vCusWPH3nbbbVaVvKJChQr//ve/
LVfoztr/DHjkrbfeInL58uW1EevMM8/U5i7rNaVKlbJ8os7TZmIP+vYozApK
yFdabZOAnRrLtHXm6dWv8JoNUv015ddeZHvjvdOrVAbsvZZUiZ/f8J8sqNva
iQMr5MxzealObTHt7HwqPBQ8oaAQe7XC9ZQFWj3644QWIbv+QC1xnYUMbrOl
3mXG9/xpiNT5R+Xfl499ix1+9DGDs/MTXKtLNVfBfLAGZ5rAm/4rOuh13tlN
qmqCq+iUyxtlz99NnWdJmfy1C9O/rKxS51AshZQSlMpSdvtvceNfnxMVrEpD
BWJNzvNgcI3c5K0t/lL+27ZtK1euHASqjc2rVq2qWLEitPj73/9+yJAhBHbu
3LlHjx7Eh3xRhLmYPn16zZo1pf/Wq1ePkNWrV1euXFmLuVu3buUX7oaRP/vs
MxnOevjhh2+66aaQNAn4V+u/LVq0IHzRokWQtXJlu7g1SIPB165dO3v27DPO
OMOPLiL2gRThekHk95CnrHDr13q6duilurP1ZSNlS0QpazRlCfr4dr47uK5q
2wWFEr+Pyxxu2ldrqciO6QXXZ0N+qdpuSUWw3u1P5VtdWMwUm9sb93qIPnVm
38zjZDab7w7SNL4L+W0mFKSS4NY1lAddE+gbiW+uxiCp84yCpwzvL8YCtf9k
r1/6PSvRvo/I9IGGxya6VSAEKo7veiH/61JyUk1OTKEGY15f/XypPaU8+MMs
imlFqgHSXsd7WUSx4l/rR1yoE6kkU+txIZlYFhVSgLa3KhT8EF90MGDLli1R
aSdOnBiSE0kXX3zxQw89pLtPPfXUiBEjqPSnn376mWeeIfEFCxa0b9+eW3Pn
zr399ttD0mtef/31G264oXbt2lpNJm9//etfL7/8cqVJTiB06JvctmvXjhRC
InwgZbTvd955R5/WqFEjXZAO3/jRRx+Rwq233jpz5swQjTx8a4j7rNOFgqKD
GqR2vJxPrVn49VwzqEIN0sC0cJ96VyjYnLxZM+8/yzP+nsRVlv0l8jfajTnY
kRoea/UnFCztL/PBNSPPlStXZsbxQ2jzvm13NaoJ+TzrhzrBcRmjbokIk6IS
JtzyMySh4Pgtu+AVXuB7XS/lEC0l2O2vz5UXDugFqT0wqY/y6rY1RT8D4+cK
DsgkdooTM6lNmUFd2rhxo+paFKyi840kZIxJPFPYW6z8rTS4yMvLS00++FG3
YI0z642kWPGvrwIyVrdu3QYNGgwePFghNmfC7+TJk3NzcymxadOmXXrppX50
7dshtWYKCELSf2aqpalm/RklH9kErA2tt2zZootUM/Dz5HbLS92UkuvnJ31v
jdgHrK8hY6+55przzjvvT3/6k921yqLY6Tg22ZVpa9QPaMXXtKt69eoZZack
1Zo1axS+YcOGK6644tNPP7WkaBiKTFP08iE1og7ZVrWKFb5yDk34fIa1jHKr
Vq36yiuvmKJhc/5cdOnSpX///hSX51MrbXWx1Ny17pqRnOB0bUVQfH5nzZql
JaR169Zde+21/nGfoJ+wzRb0FokUVfdjjz1WrVq16tWrz54927L9tXP1Yuxg
zYNwG1vKjEBwUwGNGzdGHTAh5jfnE3n9+vW67tix44svvuhlmh+U2hhVBO3n
pYsUNmnMh6DvUE2/+c1vlE+ViclMLu6///577rnH8q8LI1mzc6hi9J1LzSlz
XCeo5NGkaKJkZtOmTfCIDdX8pLSfncg6ihX/+pn2o48+2n+yFaxKQ+dzdUGr
DgVpzmaZBM+qvqvaNIhGgFbjtkri9Re/oGM2kbzAsXkP42hi2rVG3akZUT+s
Si1bRHwjGP9fcsklTz75pP76kU9wVZZZpDb61S1o1OIg03QczMZCVmUMpOks
VCgVDZton7wtrqUWOgWTZtapi0lHKzqo/CkNxiqnnHKKzMTZcNRPFPO3Q4cO
PXv2DBmG2ffk24MNrkgzR7MmE+xxL37/9a9/6eQCFaeDCZaCX220ta0swpqT
uv+rr75as2ZNJLwyIF62lxrJigFDfsu0wNRsvPC73/2OZC1QjCZdD7YaMGAA
13zpiBEj0O9SGVMp6UE79liY65kigt7+wQcfnHDCCRSI18FT1vKpu379+tkA
wwrBRrz6IhvXmeZlkVMjXq+I0Ujq1KkTEmHSu3fvzJaQkip78g0hZgvFin+D
0xG0czgk37569eqnn36ab2coi7ylpTFukZ7y5ptvXnjhhcHNIhqTqu+b9kFJ
WlMXUhswrAZTd1WJUnb8bJjnUK8rpYQJkf2ChTFySr1KbR2J2DfQfFeuXHn+
+ef7Aufi+eeff+SRRz755BMV4z//+U+aCkJeJlOmTZv2j3/8IyS1hmoQkqX8
EQk0mmI4J/4lPupbSBbohw4dyt3nnnuuVKlSjMYRGgoMSWVBNLwRKacWgoIz
Z86cgQMHjh07NuQP0Qns3r07WnMoTn0t67DBBp+M+nn22WcHtylrypQplExI
xsxvv/02Fz169GAYQ9em1uxZ9CDoQzJz5syZ1N306dPV40iB0h48eDBCABWP
B1Wb4P333x8/fvzo0aNHjhypqqfetYVj48aNVBYpfPTRR7yaaqV2jNaXL1/+
wAMPUN2q0KzA6+ZcN2nShIwFJ4vILd8oAgWUBu2HVvTCCy+IcPv27bt27Vqu
+WQ4AoZatmwZxcW3KH2kn2zoDRkyRG2b/NOYV6xYUb9+/QsuuIDmSneg/fPV
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
Ivhx2LBhhLz22muyuTd9+nTZvA3525y+y76sW2+99YEHHoBDU54BxX2p1Wc4
0aulfivptm3bfLIkqJhazi5dujRJmQtI03x11x8n+b98F+H7/UURERERERHf
Enuc0wfN/Zo1NmhXF2af/PXXX5fFVIOf+P32ENPppX5LVb9+/WrVqmU+qSHo
F198MTc3V6aHAJryyy+/XKdOnSFDhtgida9evS677DJZzuFzlixZcv3118uS
avv27XkLg4cVK1bMnz9frruIM27cuMsvv9wMvKAjDx069Kqrrmrbtm1wFhv+
9+KMiIiIiIj4ZpiOmZOT07Vr1969e7///vsoubIYI19+siEjX0KyiqlT89/l
UDApzJ49W/55Qz7vQ7LXXHPNf/7znwoVKrz33nshsRzeqlUr1NuyZctCoCHx
7tGsWTNU16OOOkoeXTt27Aj/5uXlyW72pk2bKlasuHDhwh07dugMplieR/gu
3sirN27cePzxx3O3SZMmo0aNkr+VqlWrbtmyhc9MWa2MiIiIiIgoCmgOuXTp
0rDt1KlTP/30U/Rfeb9C7ZVRbrlHDInlTHMHZsy7f1PQ8iMT3IGm5s2bT5gw
gffecccd0CIUzzBApjvRvrXvmkfkJEvetbiAdlevXs0tcginT5w4UX5n7BD3
YYcdprXgKVOm6CsgetmUGzNmDC8NibtPWWu/N0HqAyMiIiIiIrIO2feApMzQ
hzGj+Z42/9RyJh6cZZX9Xv+FT+VFwlCzZk3Zx+7evbvcoJx//vmMAULi5tKI
GNoNCdvKE2ipUqXgYnJ1zDHHEKdLly4iULMzduihhyq3JK7Pkd9GqFku5LjL
I/fffz+P8Gou/JmmiIiIiIiIooMmabUHCZIV28rnWki8YF9++eXcNf417J/9
MZnTPOGEE2wT9eeff56bmyvfJXBo+/btQ0K7MgEHS86YMYNHoFqIm0ySMVEz
OdcwQDPG8hDq927Zp5GUNm936tRJTuUmT55crVq1kDC+3E6hCHOxf4eqIiIi
IiIi/idAgkcccYSd5dm6dSs649ixY1u3bl29evWQ6Kryb4hGLEfDck7hrWf8
r+B10OtTTz1lK63w5sMPP/zZZ5/dcMMN6KqE2/wzirAMgJhGDG+aaiwXXco/
DG7ezHW8KCcnRyME0tTi9bx58y655BICH3zwwQEDBvA5XROExPeWqD8iIiIi
IqKoAdP16dPHT7qibA4cOHDZsmUjR46EZ7ds2TJo0KA9iVNdeUUMzszyfmPR
okWnn3568+bNtRq7fv36U045pWPHjvwqQu3ateFWXnTZZZdNmzZt9+7dXLz6
6qsMGBo1avTaa6+FZEhQvnz5Xr16tWnTJiR275s0aQIpo+HK/xSJ3HjjjStX
ruSjdHiKbHNxxx13nHTSSfKMqb1n27dvpxy4kOGRuP85IiIiIqKIYKqrdiAH
57HFTtHaX12gHVvgd9wkDFfCdHPmzFm4cKFsam3atGnx4sW6i1q6ZMmSjRs3
8uq8vDz5KF+wYIFd7Nq1S/n/6KOPZs2atXnzZkuWRJYvX66/n3/+uTRleUJR
tnlWa83c5S8sLG/gqxJ8l4+KiIiIiIj4RqSmjr3PRHGrOV8OBT1Be9fA+zH/
LN1ZD6a8SsmYRqbTor2aZbbVZ3N1lOk/2vufEsyjk/n/svx4hw4RERERERFF
Dc+2RnBGT6mjRqlp5/2bhTb7kPKzIO7znoyMfL0bUHPr6f0i2TDAfDSYO8jg
NPeU+1F7yj6wsNFIRERERERE1uH9Cwdn9tmzasotsnchtH/wKaQOMflbqWxY
oLdUmZoD9z4XRMShoMPBTHfGpvOmLIpEExwREREREd8SqelTr0gW5obe067x
rPewYISVUhL9hK0FenazlO2lXv2MiIiIiIgoSRC72XKn91PgCdS79818PDgV
Mjgfu1x428h+1tqnY9PU9hbzBhjJNyIiIiKipAKyW7p06bx580K++mkehWzC
NqUUpyaTFe4ngUWvFpLaGeV3TYeCujYPbtmyJTiajnalIiIiIiJKGGC37du3
X3TRRTfddFOLFi0UaCqnX9/025M+/fRTu2v7mjJ944pARbVDhw7VQvCsWbPK
lSsXklM/tt/Y3pi5Rhw3NUVERERElEjceOONAwYMMJ00Nb2s4zle+bVtwMbI
RpHeN64P4e8hhxxiKU+ePNnSt5lqvwRMoD8KFB3sRkRERESUPPzoRz8yuhT6
9u1bt27dUaNG6W/btm2fe+65c889d8yYMeLHW265Zfz48Y0aNRo0aJB2VcGY
nTt3btq06YIFC8TjCxcuvP7666+66iqlwFvq1KlDIPqvLCej/7700ksNGzbk
deL3xx9/fPjw4ZdddlmHDh2CO6Ib9xVHRERERJQwLFq0CFoUq0pXhXavuOKK
HTt2VK5cWQ5za9asKad7pUuXXrlyJRcNGjRo0aLFJ598UrZsWYX06dOnS5cu
s2fPrlKliiaoTzzxxHfffdeMX8mpAWRNHJmGXrduXaVKlXbu3Nm4cWPNTnfv
3v2cc87ZuHHjxRdfPGTIkEi7ERERERElFeafyPYnX3vttailXN99993yLA/b
Tps2jQj169eXU90LL7yQB7moVavW9OnTYdUzzjhj7dq1hNSoUWPx4sWjR49G
R7ZtV5999hncrXXeV199VU79RowY8Ze//IWLcePGwe9E7tGjh9wM3XvvvVwH
57XwABRNREREREREkQFihUODW4dFHRa3QoVy8UMIJEsEmHrmzJlc1KtXjweh
RZj0rbfe4qmcnBxImZhlypThltzjmpFGcPjhh0vLfuONN+rWrctFp06diAMp
K4S7PXv25EEuevfuLe/2ZoEqIiIiIiKiJAF+LFeunO2MQsmFQ+V9oEOHDn37
9oUfYVu5HuDW1KlTCcnNzYVkCeEW+iwXpUqVUmraNwWNdu7c2d7CI+ZUlxRg
6i+//LJfv3633357SJwFawxwzz33dOnSBc6F+kmBC3+sKSIiIiIioiShevXq
Tz/9tM3xonj279//iy++aNq0qXzpEgG1Fyps2LChVOPzzz9/xowZIXGqqzg1
a9YUI4dEaYWvoVQSMWYvXbq0bi1YsEAz3jzYpEkTLh555BFeSvo9evTQ1iy4
Wx4GQzTqGBERERFREoG6+u6775YvX75NmzZQ3p49e/hbsWLFtm3bwq3y8Yfa
O2fOHJRQ9Nbp06fv2rVL3nW1dQoa/fzzzwk/9dRTUWCl0oZENb7uuutIR7PQ
devWbd68+bp1615//XVuaVa5Ro0arVu35u0ffPAB6Xfr1g0iJv0BAwZwoSFB
PHwUEREREVHyYDufZ8+enZeXp78w4KJFi8yYM+GbNm3ievHixXL7y12ZqFq4
cKG860KyW7duhVuJYBorqq52R4PNmzdLU+bB+fPnKxDteO7cubxCavKKFSvk
S3fNmjU8WJjFy4iIiIiIiIMd3teehVig+cZNeVvITCTl59dfe0e63tmucX1w
Lo0yHRvt9Y0RERERERElA+JK79peWucXCXzMTMtXmbuUodHdu3eHDNuVZufK
PAWnXm2ca1wf7U9GRERERJQ8eMtXniu900BdZGqj/tlMx4XB+TPyG5gzNdzU
U5kueuP534iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIEoD/B2ARikc=
    "], {{0, 280}, {640, 0}}, {0, 
    255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{640, 280},
  PlotRange->{{0, 640}, {0, 280}}]], "Input",
 Background->GrayLevel[1]],

Cell["\<\
Master please show me some example. \[LineSeparator]How to build and train \
that kind of network? \
\>", "Text",
 CellChangeTimes->{{3.706977164457765*^9, 3.706977229022271*^9}},
 FontColor->RGBColor[1, 1, 0],
 Background->GrayLevel[0]],

Cell["\<\
Yes sure. In the purpose of this example I will use MNIST dataset. It is a \
large database of handwritten digits. 
The MNIST database contains 60,000 training images and 10,000 testing images.\
\
\>", "Text",
 CellChangeTimes->{{3.706977999505546*^9, 3.70697805626976*^9}, {
  3.7069780939903708`*^9, 3.706978116207985*^9}},
 FontWeight->"Bold",
 Background->RGBColor[
  0.9990997177080949, 0.937270160982681, 0.1552452887769894]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"resource", "=", 
   RowBox[{"ResourceObject", "[", "\"\<MNIST\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"ResourceData", "[", 
    RowBox[{"resource", ",", "\"\<TrainingData\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"ResourceData", "[", 
    RowBox[{"resource", ",", "\"\<TestData\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.70230520344099*^9, 3.702305203457637*^9}, {
  3.702307069124127*^9, 3.7023070723700743`*^9}}],

Cell[BoxData["trainingData"], "Input",
 CellChangeTimes->{{3.702308444551572*^9, 3.7023084460863047`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YcCaBKeEsdqnzgszMzEJYpU7KMDELiDEf+4kh8/WwPDMTs+lqZqZW
DLkYoHlMzMzznZgiMJwhyMTk2MskfWEDQzgWZ/h83tL26v9/Jh5Up96MYhLT
Xw1hMzFHIUv98GXm3/HmMUzOBlnuGDPzATgHTc6SyRHBYWCyRpLazMncj+Ax
MWcjya1ilnwGt7qCyfUzipwCXKqGWW7HfxS5PJg3o5iDUDz3fyWTHITRK8gU
iyoF1MeWe/7RKl85JoWI4xhyzMxSGkDCuvY/OnhsAY4CsTwMGSB4Vg+UK7qF
TYp+AABdfKAq
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9osJ+J4QAOqflGLExGE35jlXJiYWFiYXmAIfF+vwI3C4uOFha59V4g
LSwL52PKLWZiYmIA4gXzmZjQ5BYLs/Aoi7Gw8KzF0LceaJzzf6DwpP/ocvP5
mXicr/6fbzzp9//PVqhySixMbUDq9gsQxxFF7rwoExLPAdktl5VYWBA8VDMd
WZDlUN0ClOuDc66Lsqi8QJFbCJdSY5K4gGI5E9QtnwOZmFRuIPtgjzALi4Pj
hO2ODlYsPG0oUv//HxAGBzOQcF74Hx08qQPLSYV/wJACggXaLDoLj2CToRsA
AGmVjzg=
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+04BQDExNTM3Y5byYWIMg7iClzX40PLMc0BVPuFlAYl1wkSG5+Nha5
bUBnMNX+/z+RiWEyhhzIOCA9CYs+U6CU3P//P+uwyGUC5Xb8/9+DzS1AJwa9
/v9fDYucJwOTOohWZWLyRJM6oMTEogGkVwuzsGxCkwO6DiT3JZ6FZT66bSC5
MriDMOXu/K+FOggVAEODaW4mkIhGl4HoAwUzUDMGWASJHvX+X5hy/2cwQcMT
G2hmkduB4USqAwDgHYsG
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YsI1JZtsrXHIsLCyBWGXeR0oD5Vqxyh1UZgLKsWzAJrdBAiwnvglD
Jo+JiYmBCURMxpDLB2phCp8SxsLk9BpV5skyYRYRjegPP+tYmFjuoEhd0AFa
VQhk3GLBkJvEApX7kg1kRSNLfclkYtB5hsqCgWKgSVPALKCZOhdRjHQEytX/
gsqdQXVlD1DOGejy+5PqWIJmoMqpsbCYPfwPCesdaP6OBIZG1rZMULgUoIcJ
yC2goGRikTyELucIlePVOIEu9f+VE1gO3RkQ8MCciWX+jtfYpOgGANWaiA8=

               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+s4OI0RiBgELiGIXOrU5GRCQx0TqJJfTRnYoLKMXWjyLyPF2YCy3FK
YcjNAasHymnNQZd7ZguSqpkXxrQIQ86QiYlFrOHb/7c3/3wIQZU7wc/EJAZl
P3BFlfMHmtOAZDOaXM037HIdjIziW+C8REbGLoRcJxNTKoKXjKIPj9xFRSS5
H92cTN7fsOvrBjol8D9WuYmcTEz8e1DlBDXOvX79eq8GHxOX2H4kqf9rpaBx
Awxr/in/UYE/Qm4ymtT/6wJQubhjv9HlqAsAfP1nug==
               "], {{0, 28}, {28,
                0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+c4Pg0ZcYDWGXeRooxMTEJ6+npbXqLLreaCQQYQUTwd1SpY4IIOaYO
FKmPECkmH2sQKfgZWe4eWIa98v/bNUJAxkdkuWiwXD3Y9A5NpoXItrEDZRo/
/obwfJjYjyPkApiY+B0fw3g+TExBCDk9JiZfBG8xE5M+gqfDyOiDZEUFgx6K
vqVIcpXI+lDN/FuIJqd5B857iGJfFNALGrdhvBgmpmiE3NtgoKRmww8wZ7s4
U8g7JNu/e4LCJRbk5f38aGH2/0cQSJKLT0CAk0nu4z8Uuf9vj5TKQ+KIf/5/
THBruj0DE5PnNixSVAMAZ4J1/Q==
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+04JU/E1Mzdqlp/ixAMA2LzFE1PiaQHE/fL3SpAxIsLGA5JpY+dLl8
FricBppUExMQMEAImauoclAtEKIQReoJUEQE6BbOsjtzWViEDyFJXdBhYhFZ
O4OJpez//21AvTuQdOkATVr5///2HV/BckGvEXLLQC64A+VsA7pnO1xqtTDI
BaUwOWQzDwClWGRYOEu/ADnvb0kDHfT1P5LCoKuFhYXXgJxJLGAHIcnBLQe5
KucrkhwTUwGEBYojJhR/A/UZ5YNZwDhynoIidxDkFlU1IGCSdHr9HxWsSYQF
5ZT/GOAWRK51+0NMOeoCAFXPZPw=
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJzFUUEOwiAQ3Hjy6APcg7+Qo0evNTygjbXxUpOtifERPISP8JD9SAXbAgXO
OkmbhWFmF+bQPKrbBgCGrf1V9etEVL8vO7uQ/XDv+vZ67p9t19Kxccf28zf+
ESwBqMwIOxqCLlBkL8SjLigZQRhXoNWqNQUwb5BUiRRBLqeMs8dAGU9NUCAi
WdJeglnK2GPekXnlXb1prtO+i8iiCpwKrTOOM1MKTjKdBsMFGdckQ/Smlowe
0eC6h8vomx1rBORkNJftBEoop1DSoZT8T/ABLia5GQ==
               "], {{0, 28}, {28,
                0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+kwISRmZlZ88xrLFIHlZhZWVmZWeMxJQ/qsELkWM+hS11TYoXK1X9F
lwPZBcVL0eUyHcH6wkKAeteiyT1wAMo5zX4dDJRbjyanBRTTfvT/P8hOdDMX
A+0C0WeAtAmq1FqQXSBGNVBfG6ouCWbWBLCfMc18qMPMqnQdxFoKlItBdaUW
o/h6mL3aqHIZrMxZEBZmmB1WYtY9jEPuvynEvhZTTLkWHgZ4eM5G93pbCCss
HjDk/r+Oh8o5XceQ+/86FBR35849wpSiIgAAr/t0gA==
               "], {{0, 28}, {28,
                0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+04OASLQbpJZ+xSe2UZAKB9B9Y5DiZIGAqptQrDoiU/nNMuWSoNhtM
qeWCQHEl7HIgh1he98MidzyZhcnJ88P/lfxMuo/R5LSYmJL/gBhGGO5sY2aq
AEv9v4gu91ibif0FhHkVXc6KSXTnf+xyX0yZXGDso0y6T5DlpjAxXYcyT8mg
+QEhd0GGSeIoVrlfNYpMEkdQffDRmElWcdvRo6FMTDKousDuhAJBDKn/93z4
QDKs3R8xpIBgiw9TxrKV2GSoCgAw4ZSu
               "], {{0, 28}, {28, 0}}, {0, 
               255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+s4LENIwgwHMKU+unABAGHMaSeOoLE+R14MeU+uID1mP/XwZB7uRck
w6d3+YUqhlwzWJfn//81mPbdVGNi4p5wC6scSF8UyGxPrHL8l4D0KSYmtqOo
Uu/DmdRBUiC5UjRtCUxMOf+xy5UzM8n8gsrxzEKVK2ZiaoawkplUUaU+RTMV
QrTdF0OXO8jEVAtm3DJhYmrAkMu5DQQZikxcDd9R5e6aMsGA+X90UAyVYRfZ
hyG3IogJFtaY4OPG+UCpsuPY5KgJADVeiUk=
               "], {{0, 28}, {28, 0}}, {
               0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8w8H2zKSNDzK2/WKQ+eTKBwQtMqQ8+TEzaS1SZmHwmYchNY2KKv5MM
0sjahyb1RpuJaXkbk1j9Ei4m9l5UuelMTBP/FjIt/f//qQUT+wFkqX9BTEyP
/q+WvgFkb2dh0niEJHebicnkE4yzlokpFFUuGs75Ysnk/hNFbi2CV8rEdAfB
q2diuoDgnUeRS8UjN5OJaQ4uORS3vNdn0nmHkLvPzRTwG8a5zMSUjOSH/yEg
v0PAQzUm5zdockcgrMNqTEw7kaX+b2RikjgPpJ/WszFxL/yAIvc9g4lJdFab
ihQTk9n6/2jgpjgk2pnM9qJL0Q0AADqplU8=
               "], {{0, 28}, {28, 0}}, {
               0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QsJuRgXEKVpkv/pJMTEza2KQeWzGBgNSUj5hytkxQcApDahcfSJzP
lYnJBl3qaxxQhvP6MQkscsUgXan/nzFhkdMCClZ8//+nHlNukyBQ7geQ0Y0h
9yWKiUli5z8ga6MQutw9oC5PCNMcXW4uUO45hHkVXc4KIReDRc7pE5h1Soap
DUOuF8x4JcMk8QSr3K+aAiaJI/8x5IS3HVVTAFob+B9TDgbOo8tlwWQ8P/xB
l/scDpZhX/YCXYaOAABaU4ZG
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8wcOQELpkd9oysOe+wSrVwMDEyMVlv8A8IaD6PKrWCg8N/wcwuHiF7
cSYmrvSfSFIvpJhKQbTK0f8LOtdLMlo/RMi1Mxp9B9G9YN5NBsaUX3C5ZKbF
yDYcEmGaCefIM21Esb6LyfotjM2IJvdNh2kbLrn/AUwpMKYt4yxUuQ2McLl+
Jp1vKHLbWMxhzGt8TCtQ5J7xM8HZOUwyF5DlFjLB9f3/ZcckuRm7W/7/f6DC
yNAI89PHLEbuS0gqXyUyMsnGds5//XpbpzwTxyoU6x+mMAEBI5jgWI3qpf+/
nnQZcktpaWn5d93/jwVceoFNlF4AAK/7qL8=
               "], {{0, 28}, {28, 0}}, {
               0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+84NNPHBJfN+UxOe7BJvNlkx0zMxOzYNKOp+h6NgJlQHJAIF1/7hdC
5udGW2YwYFKzFwfRFX9gUr9zmKEg4On/63kiQMZ0mJw+RKLq/Hkwd4cwM7Mk
TI7JLRQoFfQSxp8J5MHYz4t4mJldEfZ/V0bI7eRgZo66hXDaOhZmWxibgYmJ
ZRdC6oYEE1MD3D5mtgaE1E+gqx1/IeTUEVI/8oAuQZjCxKzwHsZ+5gaUmvId
LhfBzOz1FsKc5sDMLJLxFWHMLSVmZl27+dtqnW1lgFL1/5HBPGVomAHDWnjn
f1RwPRAqZ1X66D86+PWiuwAInn/FkKEfAAAc73tm
               "], {{0, 28}, {28, 
               0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Q8DiaUSz7C1apP9GMonKMxljlljCKnL8fybIYU+beBE2jc///P1fX
xZC6q8bIqANirBC6gi6lzsjIzHMIyLrJ7okmF8LobhRwG8KUQXO9qOMnuyQI
u1nwKYpcMWPN/zqYHOMCFDkzweP/d86AyWUjSx1kQHJ4JmMrstxKRrMPcKuF
OC8jy9UzFiB8w4PqzoOMCDOPsvmgyD3kR8gZMO5HkfuvLnEXyqpjD/2GKlfD
GAqm39Wxyz1Hlfp/lovLferUqVUSjNyn/qODPWyMIMBidx1DChj8SeyRkSXH
sMjQCwAAwmS3sA==
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9gMI1BZc+e01ilXnsxAYHsLkyZ33WGTGBQiyH1rYgJCiJfo8tVMsHB
PhSJv2sMOMHCbKIc6HJrwBJOTExG/33Q5FaJgqSSnkZnrEGX2ycElNlz++P/
D5//o8n9BrpQKfEFlIcqV8fExHcQxtkuyxTwHC7VAXSZIYzzvRLF79VMTLZP
YJwmlHC5pMXE1A9l7wwFmrHsClxuDxOT9YlvEANrgLpW/vuPLMfEVAdkXOkF
2iVRcg3Jc68jgHIcPj4+4FjYjhJc/2fww8KYu+P7P1S5/1OgUgET/mOAP21g
Kc/nmFJ0BACa2XGA
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9A8NKDmZGZmXkzpsyqVeGsrMysQLDj/5VVH5GlpoCFwYTu/wbWXCSp
XiFUOVYkXUJg4a3XgEDtLorch2xmZkbBaXB+PTMzXKoYqCdiAsIYJH1XQLYg
OwxJzgMoNRFJ6pguQg7ojIk/kL2KZAwwNNYgG7mSmVkNSV8pUkCAnHYNSQ7B
gTgNRc4LIeeBLLcZxQ9+KE67LQ+MGpUrV678+P/higczA3MjmqNBBk9YCQoh
ZkVkV191hkYBmGhE8RAokGByZagy//+/uqYGllO7du3j/4ECAPfWZe0=
               "], {{
               0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+K4P4xCMCU2eMmxczMzATEbntRZT45c4LF+Ur8mJk4XT4hST1lYOIO
mAXlNHIzpSGk1vIwaa5DcMOYmeHsNxrMhsf/Y5dLYmZGtgAolwFjXmNiqkeW
WsxkCFcayWz9DVlOnbkQzmZiDkeWWsak/wlJbjeS1E05pvkIHiMTkiMvSTFl
IKlkYkb4baccswyq3TD7HlUyMbs+QJZbwszTBKTO9PbpMjNlvPmPApKYmBiZ
QJg74Mx/NPCm1dpKydraqu04ugwEPMMuTEcAAN9VrxY=
               "], {{0, 28}, {28,
                0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QcFWEYTV2mQ/V+kxMIZOxSf30YwIB3olY5DKYIKAEU+q8Pm65VSBx
4WR3puyf6FI/ikByT/6HMjFtRZd7w4RT7r0ryInTfoPkFv5DlQOZyDsbyADK
MX3HlJP/j1XucyITk+QZEOutELrcZiYm1UMQpjAWuXAocyJT9R/scq8DBXJ+
oUj9SoHKzQzFCLM/9UxM0j5AwMXEpHINzeubmeAgBk3q/w0LmFToN3S5/7dV
wDLy+15iSNENAABLqocx
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6c52MkQ1YtLrpWJiakdh1wUUE70NHa5OUA5JumnWGQOhwuaBgIlGzBk
lqz7p1H/+LMXE1PAHzSpt8ZMm0D0D6DGk6hSJ9mZmApAjH8NTEzOqHLTgcpf
g1nr2JgcUOXsmZhUf0GYJkz6r5Cljgsxsc5GGLEFWW4zE5M8jN2BJreeiWkG
lPmbj0n1PrKcFkKuiQnNLQi5P/5MTBXY5b7FMjHJ3kKR84EqvpgE9OcBVO+9
cGZi8wECMSYmseSvqHL/z4gwgQGLOJa4fd8MkkqfjikzKAAAO7yecQ==
               "], {{
               0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+kYLGDLxNv0fRHWKSeMjEzM4Pw5DdoMsdaFEHi4fJA+dWoUv48ED3/
36QxM+k9Q5L5Ws/AxC3Xa8vkC+TEMDKFI8mtYmZyOv7//5uqb0DOTSZmJLk3
Dsy2SPYzMYu+hHOmMDN/+o8sx1wP54Qx8SG7q4iJqRhupBxzCbLcXmYE/xEz
82lkuUeoco/R5K4jmb8EWS4VyX9A86OQ5ZD99wYYhkhSjUzM6xG8MGZmzZtw
KTamjJ8IuacKTIxM9aB4+3RNnYlJ9iaSKf9bwXEQFhZmCKRNUaT+vzkOjjdQ
3IrV/vyPDhaWOKYxR5c8fokhQ1UAACbKi30=
               "], {{0, 28}, {28, 0}}, {
               0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8ocMCfiSmh7wBWuWImZiDgm70XU+qkDFiOiVnA6xia1E15ZiZZTpAc
EEz+gyJ3DCj8ZHk/EBQCWekPkOUsmZg2QFj3gSHIZI0ktZmTuQHG/jOViVnz
MULOlpm5H8ErYGa2Q/DkmNVuITlMlFkB4W9+5tXItuciyfUySV9AlsthYoJb
kcBsg+IjOSTrmTDkJJ8h9Jl+RZJazMOsD+f0MTPHIaQ2MDErI1zdy8TEFAiN
nqf1wHCpQqj8LA2OnlWb/6+qkQCGZ91PJBvm6YOjgNMKFA/KVchS//+/mSMA
jT8uhTn/0cGB/n4loFzDCgwZugEA/PyCYQ==
               "], {{0, 28}, {28, 0}}, {
               0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4HM5I4NNzx9sUj8DmKzjmZk+YJOrZRL9/f+Jkfh1TKmTnEy7gdRz
nqkYUn8qReb8BjGqOTahyx1nOghhvBCrQ5fz8fgNZXkqo0m9Ej8CYy4Qf4Uq
V++BYEuvQpVzaUaSc8UjNx23XJg7bjmTTJxyX5VvoMmlwJkTzFCl/tdJ/4Cy
PnttRpP7Lxr5DUw/18MM6xLWiC9/v3ypk1n6BUPu/wIOJl8mJu6VmDJAcCGA
STwLS8RSFQAA8djXNw==
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+U4EWEPiND3RuschlMIKD3FJucF1BGxovJ4CUWORmg3OKbskx1fzHl
7JiY2A/+P8vEdAlTLpSJqeL//8/6TB0YUu/FmZheAenDTG4YctFMTPIfgfRH
NY6DaFJ/7JhY94NZFkw+aHJ7mJiMIKy5TM5ochlMXFcgrAOsmHI8MCa34kt0
OTW4HFMPqlNsmCph7GSmTFR9xQg5AaYSVLnLcLlTnEL3UeW+m0tdBzOeyWH4
4X87q+TRd/8/X9ViElyNLgeKWzUfQyYm604Mqf9vj+alM2nmbf2BKUVFAAD0
ta6a
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9A0M7EdAC7zM0aTmZmkw9Y5RSZgSDyJhaZ31OYQHJM8mVPMeSmMDMx
K9cDCWaBYnS5UCaG8P//N9gzAQHDUhSpMzzMGveA9OetYkCDbd4gy0UyMz+A
sK5k2TAx+yFJHhNlZkbwhJiZvT/BeauYmYMQcmeBkv1wniwTP3KIxDAxweVu
ijL7I9sONCYRxu5jZl6NLPdGD2G9AZrcVxNmYRibCU1uFZJbepmYcpGkziQg
OW0LDzMbXPLYKkFm5jkIld3AKLC0ijp27JinlSgzk1g0Urg8Xu3NDIkjECG3
4z8K+NQPk0vq/z9AAAActoc0
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cDWN7wC7vEm6OvP6q9wSbzI5eDSeTJ6nXY5BqZot98+P8/+RsWOU3F
uyBK9Cim1BHGbjAtgkWuiGU7mM4oxpSTF4PQ5QqYcoyqUDkmLHIVOOVeMPRC
GGUSGHJzGVuh+lKwyE2FMCKxydVDGKJ2WOQgbjnE3onpTgbBt0DykzwjlnAx
Y6r/+/9XJlMElrB+K8t07kEyk/QnTKn//3OYePgYZa5gk/r/q5GLSeIiVqmB
BwBRONdQ
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QcKsoOdnW9gIWmS/VAkxAwOiFKfUsmEkkYuOiQEaOk+hST3WZhJaC
GGZMG9Hl7JmEjoIZyRhyRYwip4DUm1//kxnR5C4yMi0GUu9k1c5lo+uLYhR4
DqReMzEdfdvzHNVj7IxLQPTfLtaYJWi2bWJivAFhWTMFocklMKp+gKpiZDiE
KifK1AdlvZJlrECResbPtBvGtkGT28DE9B+P3GaE3BxU+7QZ9b5BWF/1rD+g
yp1kYiy7DaT/vg5nOozmh8cijEwWzRs2RDAxuT1Ek/v/oUsNFK1M/JM+o0sB
wZNGfSa7nOtYZOgFAGvxrro=
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+s4H6lKiMjo9pqVNHL+hrJdzqEOcuX7Mpg49yIIiXJCALW50Gcw/K6
z5HkOhlN35gxen2D8O6IhSPJ2Snc/X8kRvgDlFts9B0udZjRH0TdhPFPCq2H
yx1hXITqtBpzhBz/c1S5DZoIOVE0j+5hP4lT7r/IUbhbRNCkNjAcgetj2Ysm
x4owk3Eyqlwuwi2/TFz+IEv9drZAcDoZjyHLzWfsQnDeC8l/RPA+uhh+R1K5
nNn1PVyhC3MTiu2zGYUWQgLnkyZjJKrL/hzTYOcTsSorK5MQTHn2Hx0cS+EE
RXDObQwZKgIAuF+9FQ==
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x848LrNimk/dqkX5szMzO4/sUk9swJKMTNJT/mAIfXUmhksx8ys4vsK
Tc6VWXDhHnm1U5O4mJm1DqBIzeVlnvX//40H//9PqudjNpiHJPVOkpnvOIwz
iZlZ6h1c6pM9M898hKsamJnb4bw2ZuYoJFOamJk5d8I4jszMN5DdrMvM3AHj
MDAloLjspR6TB4zNxDwD1Ud3mZkRck9R5Z4gy4V/QpHbyawHY+YwM29Bltot
hnAL0A9O1+EyH9ZKMGs+gPFuVrAzS+RdA4LXz2+tsWVm1r6HZMoaLXA0MBtr
8QBJ7buori4WZIfEEZ+gIIrlYLC2o6OjvaPjDYYEvQAAZOiSuA==
               "], {{0, 
               28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8x4Pqt/z82lZUDwfWfqDLvKxjF/qdrzC9O6ZRkTNyNLPUmmrH3/3+R
YjBnjiSj60e41E5Z3jYgNd3mJph7z4epGCZ1jc/yCooNz/UUYMxo1r1oDitn
grEYE9EdXa4BYzFsRpX51cBZBdfXiiqVybHkG1wuCknm0wZb9dUI7gSWFRDG
+2fXp7hqdT1DUvrRTaTwBZBekiRh0HgO3V3/C2wYGBm5kzZjSIDBjRs37mGX
GewAAH4J2qU=
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x84sJeR8ejhI0fOYpHaJsbElM3IxCS+DVMumYmJqYsBSCj4x6LK3Orm
ZPJ++/vtJD6grPBjFDkRJiauKSDGpFCgZCC6nBiE9QFouMJ2hMzXZFYmpj1Q
zhygxoZfcLlOINf4KZSzWwHIOwaTuu8A5M1DcTFc7ggTitxteSS5w4wMjMlI
/pEFhhCyvlTUUDhGrBznUhjvfQgTk8Q5FLckL0H4T3HHfxQ5Jq5JYE6eLUqY
fbsZyAKU5NPQUNPQAIaQ0tP/yEAErJWJkQk5hKBgcrc5TM7i8n90cPsYMFSP
Hjt27A6GFJ0AAN+lb/g=
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x84cI2RMenuXVUGw7tv0aVOCTLDQOxTVKm9ykBBvTQFsORcVLlIkFjR
/1WSuOX+b5uJXc7hIZDxax4zs/IZZKkWLmZm049g5nGgqn1IUm9TmZn5oGw0
uVe5zDjl9jATkOvGI/cat9yK3wi55i+ocichzDfCXKh+B8nN+wVi3VBBDzOw
fTOXAYEJiKW3H10OBmRrd//HISew6T8KeLcvBiY1/8h/dPDOHySRcv/+Twwp
ugEAAFtm0Q==
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6ctOM7RhlPuOS9XK05JCSam6Z9xyC1lYmJUam9fhSGxZ8vtL8cVGZmY
mLgMbqNKreRim/b//2V5SaAkk+ZXZKnvDkwFYMajjo5EJqaFyHIfmGTPw9i/
PZjYjyPJXWXyRXB8mNw/IslFo8rFIEkdYmT0gXM2MzJGI8kdZkLoe2TIxHQd
h1w70IefcMoJHPiPXe6jIJMPstT/t45MEjvBrCvuTExbUeT+r2RiEqj8DozD
GCYmrTuocu9BwcgvIMDBxKT7BFXq/+8jxiBZJkYm1on/McCDVpAcg9pcTKnB
AABR6qFs
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9A8CaaiYGp88htbHIbWViYWFhYLC5hSn20hMixGD/FkPvVxcLCoy0A
lFTFkFsAFG3/HwAkJdCl5gkBRf//38MP1D0ZVep7DAsL/zogYzdQic83ZKlP
eSwssutBrBsg5/Qgy+UDBYLArLcR6HJicLn/c9Hk/JmY1H2g7DlMTEzdCKkT
uiws82EcoD7Ngwg5oK/hco+NWYROIWnjY2GJ/wGVUkT1+xGgtjQw68VcYyA7
GYvcqhQfkOdSP6DJCWtqaoqC4oE9GVnq/zU9FihgYrHO/Y8KTvbwQeVc7vzH
AGvAUrOOPcCUohsAACV/clM=
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJzFUUEOgjAQbCc9ePQBAvEXiiePXjGWM0QkXjApJMZH8BCBd8A//AgWFMQW
rtpJm21mp53dXfoX5wRCSDyTh+Ndt0J4t/1cXg5RfA6j4LiLkiAMxMpv0hbv
Xf9xlQTrbIJzwcB4NUbdQVuUI5zN0MLUlZzAqOpUKnPNiAXWCBKGQuUESJtf
mnSjcujyXU3HKbgaDWqr1Oij691RKG8OfgH7ph52r+Oqz6yvStap+JRVJa9A
6H1x2wmk3ILeF07RwVB7XYF1GBmDOaHqlXkxOvbfrCf/vJgi
               "], {{0, 
               28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Q8HmaPAPHS+xyNYyMPMybsUvJMcqfL8cm82kSMyMjoxU2bd+8GBn5
pYQYmdNfYUgVMDLK3v7/spSR0RndQKAu1v1Axt9Twsw1qHIzgVZNgDCP87Bc
RZZ66MrIaPgIyrFgXIIst5iRUegTjFOJKlfFyNgI51SyvkOWc2EUegHnmHv8
R5XTgjH/VjLPQpHzYKyCMT8yit5FkVvMGAdlrTZmPP4fTU4KwljFzOz8BVXu
ODNY7s8pEabI/+hAnqt29+5KTUbGBAyp/0WMYCC24A+m3Md0oIxr0ilMGfoB
AJn5rUc=
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YsEKfDZfUE21GGxxSnXKMjOI5F7FJ9bAzgoBk9mcMqbesjFyyYNls
dKnFRoyss17bguSkTqHJpTMyLvz//2OzC1BSC1VqATOj4QcQ48/PMxIgVQhw
lpOR8TWMY844H0nqlTsjY85f7HJ+jIyq92Cc9zrIcl9UGFkWw3mrGcUvI+Rm
MTIWIXixjBJXETwRRhkE74wgih9EGC0QnHhGqdNY5b6uzmRizPmPIqcF9ty7
A4nAUElBCetWdkbjuVf9vM0ZGZm01n79jwJMGCGARWXhf3RwRwkspbYAQ4aO
AAAuh5ct
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QcHEaI6P8kSPfsMlZMzKBQD0WqfkiEDmOVnSZ37O4mRhF+UCSrm/R
dQEFxddMCgVJdqPJaQDFrP//v44p972Ig4lJ6NH//z9vhqDJfcoFKT8GZiej
yYFN8n2CTa7cGChlD5FCk3tsw8jIyFoB4cxhYGTsQsh1gkwshLDfAD2hfhAu
dVUbJHcTzG52BjIDEdqOALlCi/78///gei3QJ0zGn1DlUoH0SVVIeN78jyqn
kZycrMfEAHLuvA9Icid4maAAqM/4BUp4QdwJllMP/IQq9f9kNw9YKrfr4H9M
cKoaaNExdD30BQD00me+
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QcImRkTH7+TdsUlcYmUGg7ROm1FEhiBzzbgypXfLMULmKd2hSW9SZ
mRklwsGSl1ClNmkDxXgX3e/1A9KJn1F0gaSYJYCsbhDjFbJd6mCzDmKTWwSX
+v8qEVVuvwAzQnUJityvFcDwYBS6BuZ8yQSyX8KlVoE0KZ6A8ED2ab6FyT0H
G7gEwnmahuI/JLm3izKATPfHaHLR3d3dXUXo4QmRAwFIeMY8QMh9a0OW811y
DznAPnUg5NxvoYbz/09QnYyalx7/RwffX70KY2a+9vIthgwdAQDiq1iS
               "], {{
               0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9AoMrExJB1EJvM1XxhFhYmFuH8fEy5OSwsLHJMQIIl8j2a1AagsPG1
AiOgHFPYB1QpCSYWuWv//1+TBRkcjSx1C+gMpjsQVeIMTDJXkeSKgarDoSZt
AppeiJB6pcTCEg23RIaFRfgQjHPfEegChMptQN4OZA5OOSYmJjMkOSB3O4zj
j6wQTR/QYUlfccshOfp/JiiEYJxmFhZlb7hULSSEkCxn2rYNZOzVbZnAEFJH
GPLACRTCLAn5+XmGIFb4YiQbXtuA5FgghFw0ajS8KlSGySGcAQdntgeC5HJ2
YErRCwAAE+FujQ==
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QcHj+/PPYZd6HSDOxKJ+5j02ugYWFiQUI1mPIPPcUZtFxEgbK8dqh
Sc22ZWHRufN/RxBQM3/iG2Sp/UwMTEZgkeuqDExMS5Cd4crCxDERwr4hxsLi
jCTlxMJiNBHGO6/MoozwynagCxIRSs+wsIjDOY5AuSMIuftALow9n4mJaQGS
7feZmODe0GRhMX6BJHeahWUhjA0MjUlIUueVWFQuIMntRJITRfYDEzLneiIT
SzCSUgegY+Y/B7E+BzIxMSghGfJ/B9DRTEaOjo4OViwsEkqLkOXeNwpDogdI
FF/4jwb2ODs5A4GT86Tf6FKDAgAAcTOKoQ==
               "], {{0, 28}, {28, 0}}, {
               0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9IcN+UgYkp4BUWmdX5jixMLCwsgWjiP29FqgoDxUFyLMmocj1QYTDh
jSI1jQ8i3Lp9x45sVLltTEBgysRUgMUVD5yAeoBEIRa5A0BnzP/fzAmTexWJ
8Mc2oLYd//+rQeXuOyKZgCYH5CLJAZ2y/f//5BkoXIQ+pNCAGoPgsOCQu2oE
5G3ALvf/miwLi/gm7HL/I5mYGJhktkG81YQaQu/DINEzDRgQ+UwsqCH04Q44
CnjU1CSAqpRf/0cBBYXC8Igq+48ODu0wB8uZ7fiKIUcPAABCMG4O
               "], {{0, 
               28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QcGDbNhwyV/OFWViwSyVLs7DgkvNmAsltwCa1QQIs541F6ksmEwMT
EDAwrcCQK2ZhYQqfEsbCxKKBLtXEycIS/eH/Ij4mFuVXIIGFanC5fBaWIJiD
CkGMSUEwqVNKLCw7QIwzQDnlM0DGg9cwOaAzlM6AWduA7tmOYh3MJKAcC9QE
LHJzWFhEDmGX28DEIrL2P1Y5UOCg+w8UJM3bts0BhUs0mlwWKCjB4akz5QNY
5EA+TO6gMFROLhUqMgkRW2uEwXLG1+CqCxGmHtqxY/uOHdf+DyAAAD0JiRc=

               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9ocOPKFRwyZ6M5mJkdzmOR+TmRixkImITW/ECXuubIzMRsGxtszsyc
ii4XwswsvPv3//8/NnHz3kGReWbGxKQKU8WUgyInw8wc9gXKbmCWRXZGGhNz
CNwFDczMSFIpzExhCMc1MHsi5CYCnXEL2VUz4OzdXExMtk/g3FwmHoQ7HZmZ
yxC6Zggxp8E55zmYbX8ju8obYXUgM3MHjA0KHKMzCEOYmEU+QpnrFZiZ674g
pP4zMAmD5R6t0GVisjj4HxmoMjPrzFy5ylOcmUm++xWKFMgtwJgBYm7N6//R
wYFyCaCcUuw5DBkQeHz16tVXWGXoBwApUJ4P
               "], {{0, 28}, {28, 0}}, {
               0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+EYFemNwMjAyOjUGbpPTSpRwJMcGB8HlXunSlIVFBNTY2LiYn/EKrk
aiYm9rybQMYZPSYm4SfIUr8LgLogzC9+TEyzkeUmAU2sgLI3MDGx7kNI/XQE
yj2Acr7KMTEtQsgtBEoJv4DxmlDkSpmQuahyVkxMMgieMxPLVlxy0kwct3DI
bWLCbWYPExPnCxQ5vpNQ9kNlJibJ/yhyTF5QdgSQjeT1//OAfM7bINbvCmYm
5orfSHL/A4GSGof/f9ztAWQY/UcBG1WAYpKqwNBiYtd5hCr3f58sNGYDV/7H
AM8vlqnqZWUt+YwpRU0AAFs2dzE=
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+84PGRI0de4JDyYWFhiXiLJro7IO7//wpbFhBwbUNRv5OfReJ/AwcT
iwI7UJJrCpJcAFBA4oE3C5PRhQIHILsHTW7CRhaWeaf//78FlLS4DZeaLcDC
0vFjMctKMO+FCguLIkzqTSILi/Le1yz6NyB8TaApMLloIDvt/7eeU/8x5ZjA
cgiALMfAxMSUipC6JQ/k49CXAuTGY5fbrcjCkgwPtu1AOe6+2/AQQvb7bQtQ
KArMnTt3zlxjEFN5B8KGS2ARIGACkwJ7kRz9/6mqAEyOXULiwH9UsDtIgEVf
jInFOvc/FjC359TS7p472KToBADJZ2yJ
               "], {{0, 28}, {28, 0}}, {0, 
               255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8g8LQTBFZik2oRZAIBdn1M2bUcTFDApncDTa6BiYmz69Ahdy2grMJ1
FKn1HEycPSDGC08+Jiblq8hynUxMllDmaqBOZWSdzgi5jw0gY5HsZETI/f8H
kpS5iiy3Bc75tAZo53xkuUNIVngwMWndxyG3h4eJqRBJbjOyuy2AVsLY/kxM
Fn9wyAH9x7QWh9xOLiYmrsQzMO5SJSS5/6v5gTzhlWvW7Pn/Z00pGzB05yFM
WQGJIyYeCzMwNRPZaSvUmBDA5cB/FPBpfqQ4CxMTi7i4eO+r/5hgenf3dCzC
9AIAhI9zFA==
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9g8Kyq6tofrDJ/F2gzMTFF3cci9TaGCQzUMCW36jIycTav7uBmUnuA
JvXcjInR4CCQMYeLKQ5V6rA5E1PnUzBTlYkJVYqbiSkYykaT2wnU1fsXq9wr
oNt74f5CkXtrzMTUA9P1/5oIkw1c6kcMI2MAnHcjkJFtF5yXx8Rk8BRuRjYT
Uz5c6pk2k+FjOMeeiUlxL1xOk0kKJvVrjywTk+YjhEsYmZyhrINlTEwCsz7+
R5abD6bv1zIyMRmvR/Y2UC575cp2Q0NZJkYmj/f/0eRgIGnFx/9Y5RLyH/3H
AO+qQeDuX0wZ+gIAs6SUgw==
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVVL1rYkEQXzXPz1xiYSUnaKEQRDAEtAlYBO5sDpR0IqKGgwQ5PXIhRcTK
QgP6D0hAS8XCKkWCKYL/Q7ARRVFBULE5PInM7azrywsJ8e7BLPtm5vfb+dr9
Frk4/f4jcnF2EjF/PY/8PD07+WX+kjinKoWMEGJCMRPcA93yxQS//ywI+Qz0
k/37fgv3RAGTyQSSySQK/VutrVYLlssl89h9ByOTyUAul6NQHa4KCIfDkEgk
oNvtkp0NGBXHRKNRKJfLMJvNiO4DTCwWI3KoVCpEA5lMBvb395mYTCZmX/t5
vV6YTqdE+wFXsVgkAte1221IpVJoI3Ie08HBAdRqNeah/oDn6OiI5oE6FTw+
PsLl5eU6P9Dr9VAoFFheqjccW7C3t8f8jEYj9Ho9FadeLBZQr9cxLTEcdKUl
ZR7CGyoBBoMB2O12RocloXSrsImS2TwejxiWxWKBh4cHKY3AaeLxuOjmdDqh
3+9zGgHG4zF2QLTTLpP3OObzOQSDQVYhFJ/PR/u1sjWbTfD7/UyvVCrh/v5+
lQLnUPKQ8SzswPqsXC6Hk6jmhXt6egKDwcBMh4eHUgYVZxiNRmJBUPL5PDw/
P6t5ja1Wq2R0X+Drmt3d3YHb7X4FpwGoNsDXeTYaDdDpdCL8+PiYbMJq+dGI
lR59fX2NfRA2wHUcPhwOweVyiRcC20gHU8FLd3NzA1qtlplDoZCUYZu5bMPt
7S04HA5xxDUaDaTTaahWq5DNZsXEbDYbdDodKcUnHiT2D2cAgxT4CKM73rRV
HC+YHY7Bl6ZUKmHX6N8KEwgERIx01vSSsb+6umKCQ0E7/Oqm/e9rSGR/Aatn
7ac=\
\>"]], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+C4Mv5EDFx8UBsUucTmZmZjJx0H/9/2VV4C0VqPS8zs/7KL/8f/zho
wcwsgiz1loFJPBHCXMGkKcCEbKA6E/MSmL0HXokzI6RemzKHXvgL525h5oaz
X5oyeyJbkMacA2cHMcteRZLqZpNdCWO3MDHVI0lFMjEFwzlMzEmvEObXo3CZ
mBvh7C/NzKzpb/4jyc2GyczRYZbdiewsJuZJYPrJVBVm5pTnyFL/hZiYmKLs
ss2YmDj8T/1HBSckmIHBzMws0YwuAwTvtzY2Nix59R5TZigAANDxtag=
               "], {{
               0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJytVDFoIkEUnbjunp4aRMRYnGAREEERBMXKwuIOi0PUWMRujacJetwll15F
K+0EKy0ttLKJhZ12YqNNGlsFMSo2cngH8m9nnN2Yi6S5G5jl8/9/b/5/82c/
8/fXX77y9zdXvPnTHf/9+ubqh/njtzvBxZwghEx4mxG2QTDpxwQ/f/1G6AMI
6+TfbQ7bSAHr9Rra7Tbkcjmys9ks1Ot1eHp6wrHTAwhLIAz0+30wGo3AMAyS
kS8HMhmxyMaxfD4Pg8FA/QquAJ1OR9LFHY1Gwev1QiqVArfbTZzCKQqFAgKB
AGZB749UIZ5YLpcl33Q6hUqlAufn57QyBuLxOMxmM5Lx7g2earW6jwvdbDYb
qNVqYLPZSMxkMkGn03kLLmiHlAdwLAD2sywLyWQSlssl+woul+CxWAxLLjLM
53PIZDJ/h+VHGAqFgiSlAFFR9+XlpeQOh8OHSI6mhEIhqbvHx0cRWSqVgOM4
4m42m8wRJC7P5XIRtN/vV1MtEokEcaXTaXQIE2VdLBYSLBKJwGg0gt1up6Tw
h4cHElKpVC/gChJnYTgcgsVikUQRxpRSs0TybrdLxvbs7Ize/TOHkuatViv8
nAgHzuN5nnbFQqPRIH6r1QparZbO4TMHmUKkhlarBRqNRpp3h8OBhSI14DWZ
TGC73UKv1wOPx7MfRDno9Xo4WJR0r/opaU4oRiLFhTidTvD5fGC32wkpXlj6
YrEIt7e3MB6PD+tT09vBdWC6i4sLMBgMpFGhkWAwKJ794iH8rz8KOvkDoG+x
mA==\
\>"]], "\[Rule]", "0"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+84KmIiMgD7FJrVBgZGZU1ux5hyLxeKMgIAY3oUnddGGGAfT2q1AZm
RkbmTCeIZBeqlA1QqPL/jubmZhk0ufdWQKmGv2C2OSMjC7IzQHY1/voPkzOE
SfT9/78QpAsqNZULycxb/9cAHS8FlXotzciodR9u4heglyWvQNgfgW5iXYmw
bRbQxNlg1r8vFoyMTNUIqaNAC9IhzPkgz9kjObKTkVH8HMje6UasILlDqHJq
q1evVhVjZGRg1Axp+I4qBw9I58coofX/Dh9URkmr5z86KBIFgaD5bzFkBg0A
ADAvesE=
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJydlDFrYkEQx/f53tPECx6BqJgYkKgB08VGEUFQuauuEb+AhMNYHHd4acQm
YqWEdEGIhViKgpbWgq2VlShKxCqICHJygs7tPtfNGr0mC7vO29357cx/dv0W
ubv9/iNyF7uJWL7GI79uYze/LV9+xvGUKCCEzkm3IGIDNulwDn/+LhAyA27C
x2yZ2EiEeDwOer2edPy1HkOhEBQKBRiPx0jH+UjUp9vtgk6nA0EQkFoZRbi4
uICrqyt4eHhAR3t8MpkM2ansPqA+Go0GAoEADIdDpN3xkXgfuLy8FKFcLuON
drsdDAYDWyKKkF+HwwHhcBju7+9hPp9rdojyFtFoNEKr1cJxrE/rdDqQy+XA
6XSCLMsSDbLRaABta9HeIZvNJmi1WoaNRqNYlHXSRMRN0irK8/l8e3kynXl+
fmYs0vP5PCvWarWC2WwGbreb8VQqFSSTyf/w1Mp+m83GeCaTCdrttpouT6dT
8Hq9bBlnDqVSaTfTtUCkVSoVOD4+3gRwenoKi8XiLQBMfX19hbOzM0YlN6Pf
70t7qI+Pjxs9oFgsipRKirhNleHp6WlL6mw2i3ikhspETg8Gg1uyp1KpdzwJ
XC4XY11fX/OoA4qaTCbg8Xi2UCS05XJJIbsoCTcOdUhRtVptozRDJRIJJfF6
vY6/0uk0RpnNZj5DHqU8EpwmQYmiyLYROxaLgd/vZw8Su7J7puIYn2g4vV6P
icQ/yGq1Sne8+RxxwuIakerjKN6E3ZzD++joDLkt9P7RtCWwWq3KayUxvry8
8JftM63QaDSCk5MT1geDwbooH/y/420k/AMGmuFQ\
\>"]], "\[Rule]", "0"}], ",", 
           TemplateBox[{"59898"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9y4FQSAyMjI1PZH0ypdYqMjEoOCZqMBzGkVnAwNj/99P//1zo/dKkr
XMwN/8Csa/vR5RoZA2HMSbG70eVSYExOxiZcck/YGQ+gyu1iZE74C6R/bmFh
FHyKKvdnnyCjdk6OkiDQi/MwPPFicZ6enp42IyPvWww5CHjLyFiFQ+r/QkbG
bzikXggy2mAJTzBYzMi8HIfUZxVGWVy2XWJknIhLrpxR8CsOqfPsjMK4tC1g
ZIzBJbeKUfwdLjlSAADPSMbH
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVk72qGkEUx2c/bnbdXBPEwiYLKjYi+AQWVkkVwV5BvQbuBWPCzUXBQvx4
An0AUSwUCysrBT9aG0HEJ1Cw0UJRMKgnM3Mny8JuErIww5kzv/+Zs+fMfI6/
PH75Gn95eog7Pz3Hvz8+Pfxwfvz2jF0ChxBSyXAiYgM22aTC6fwToQ+AP85o
3xMbidDpdIDjOHA4HLDb7e5NkHq9ThEyIpGIGTKbzUCSJIrY7XY9YmVINpul
2zabDY7H41sTZD6fawdVKhUz5HA4gMfjoYiqqnrkHUOazSbdFgQBWq2WYkDu
YLPZ0DwIFggE4HK5IIuOe89CNRoNLaHT6WSGbLdbDcnlcnqE2kigp5Gk0uk0
Xvn9fpyBz+fTZFarlYRBsk4rsUxxZjAcDrVssQ7xkEqlcCS32/3bj31kFqBW
qwH70BuTeP1+XytOLBaD6/WKVa/0+XyGXq8HoihqnVqv15IhjADFYpEiyWSS
+URYrVbaHRiPx/+SycxnsVior1Qqob9pwuGwpqlWqxCNRmEwGJho7mCxWICi
KPQvC4UC3G437H3VLpdLGI1GdKWvuMyq0G63QZZlema5XCYVgP1+zzM5vrqQ
z+chFAohY7MV6Ha74HK5tOaSJgWDQVpsr9dLfZPJRC9VWOjpdAqJRII+X4H1
k+d5yGQyhhv6p2f9vzbifgGJ0mpz\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x964Hw8FyOD9goQcwWa1FUuRtsp/nxMUzDlXgsxLvn9//8MxkhMOWPG
tr9A6q+eNYbcEiaNb2CGAafQRjQ5AcbDEIYBI2Pu/ygUOU7GdxBGIiPjrv/B
2OSW3TJkjPzx370fWU6ScQOIOq7DyH7p/3+3QmS56czcRy8fMmZnZATZ9fgL
iqGujCDAz8h45j8G+FRfVVV1xIAx+CumHBic42S7ikPqvxljOC6p85ysN3DJ
mTKG4ZK6yMmIU5sxo/IXHFJ/pRi7cWkDxu5dXHIkAQCnlr6V
               "], {{0, 
               28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVlL9rYkEQx1ffD/M0p2KnXCBgIyiiBG3EUq0OC0ExTXiEg6SQO3OpbOxs
LGwE/QNELLW19Ac2oqgIEkhlKVhIIrkTmdsdn/IuGsI92GV35zuftzuzs9/k
x7vvKfnx/la+jDzIP+/ub39dhn880CVOQwi5YO2SsDHQodJdwPr3H0K+Av00
x2MDGxMeFosFWCwW0Gg08Pz8/OWEZLvdgs1mQ0k+n1dLzhXJ1dUVmu12O7y8
vJyfkIxGI5AkCWWz2UwtQSLhwOfzoTkej5NjOw/D4RARgiAwhEElMSoIv9+P
iEQiQY7tPAwGA0SIogjT6VSvkkgKYrVaQTabhUwmQ7TYC9DpdMDj8SA6FovB
6+vrTv/ONxQKoYY2OmM9DyaTab8G/X5f7XaGbmdQKpWA4zgwGAzQ7XZhMplA
q9XCsOp0Oi2SRLi+vgb1N5/PWbT5IyIHVqsVf1iv1wna6SF6vR64XC5cp1QY
j8f0gDt9OByGdDqtzI55+8wtl0uFJ0G1WoWnpyfwer1oSyaT8Pb2hluLRCJQ
KBTIqb2pWSKuiSDL8iFIzWYTGTTQwgl3s9mMsna7fXDf54a1VCqF7jRax+48
VCoV0Gq14HA4YL1eCyoC2xirhUajgYRaraYmSO8uey6XY7XBKftiZeJ2uyEQ
CJD9GiXsk/VPWCUlJerqYxvbbDaHlJTL5X1YP+XplZTQKw16vR79gsEgFItF
iEajYDQa8dB0/ilrV/Y6rLabm5sDjz0qTqeT+SlX4GPGR6/O/46J5i8zm9hB
\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x964IwLIyMjQ9h6LFIXFBl1ezyVmVisMKS2SzP1vfr//9MBL6ZvaFJP
BZgyIKwlTA1oci6MIVBWN6MbmjsYuS9CWIf5mCJQpL5YMCZDmQeYmM6gyD1n
YnwBZfYyMaEa+U6EcQrESQu4GG3QnLKakS2ltKS0VJORiX0/uvfqRJmYGJl4
JRmZJNGlgJ7eBQQ3dzMy1WPKQUAGowEuqe0cjCW45JqZFD/hkHonz+SOS9tU
RsbduORSmExxSV3jY0rHJRfHJPwGlxwpAAC88r5+
               "], {{0, 28}, {28, 
               0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVU7+vIVEUvsOY8czjSVCIfUFUColGIqIUQrKdiEoibHjFZjdvaZEo/ajo
FTqFUkJBolXQSPwBQkQUIpLd5uzc45IRtljJvTlzvu87c87nzNd0If/te7rw
kUk7Ip/pn/mPzC9H+MennFJzhJB3ehyExiCH7HqH8+8/hHwB+cc9xq80Jjyk
UilQqVRgMplgv9+/PqEsl0swGAxIy+VySooeKWrIZrMI+3w+8ojz0G63geM4
PKPRSHpCORwOYLfbsUwkElFSDIxSrVYRdjqdcDwedU8og8EAtFotvqhQKCgp
b6zXfD6PsNfrJUr8heFyZRgOh/QQFd4aWK1WtG/U0Q7K5fKFz7Ra1EpQKpXA
YrEgh54rX6/Xg9VqvT3L8Z1eRL0AvV4POYIgoKfFYpGOoaKB3Ibb7b6VEEUR
xuPx5dWsjKDw0mw2I7fVamkwrYH1eg2dTgd0Oh1CwWDwqXyz2dy63263IjOm
0WhcB3sqO51O4Pf7UZbJZESWnkwmNz9ms5n4MDZP06iSJAkWi8W14HQ6vS1e
MpkUHwxXQygUQmU8HifXPmu1GubC4TB51PBog9FoxLLyMghM1u12MVWpVO5k
L8w9ulo2mw05zWYTdrudvB8XjO4MnTMWiyF+Pp/vauCeyfd8Psftpe15PB6o
1+sQjUbB5XKhjud5CAQCSncl1h71iE1L8K+Rc/Q7TyQS0O/379bpXx/9/8aE
+wtJxWdS\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+K4HFUoDRbA6rYmjcg8k09N6OApDjnLhQ5y/lA4iA/o1fXy/9vRe1R
5Bxu//9/iI+t/geI06uLInfh//+3AiwLwOzPqiKv0ZyRzVgMYexkZFyFKvVK
gOUJmPHHl5H/NKrcYsZSCGMzI2M2mpFVjHNB1Pc6RkabT2hy97mEb/3/v8mA
kZFl0X90MJFJRkODnVGb0R5D6v//k2GMJq0HxFmvY5H7/+/97/8rGRWxSYHA
XxnGSlxynYzsf3DJaTDW4JI6z8GD7jc4cGB0xCX1lBW33DoGwdO45EgCAMzA
w+E=
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVVM9LYlEYvep76lPLJEUiA10EggQt2gSCtpmBwEWbFu0kBooYZshaJGJt
WhS06A8IpVaKtMiVrqqduLBdYIsW5cJ+ECiMzvjjjPfz9XiTtpgH973v3u+c
c89378cLhbfWvn0Pb62vht1fN8M/19ZXI+4vPzZ7SzoNY2yKDzfjMXqh/JrC
r99/GHOh92gGYzOPmYDz83OOh81mQ7FYHBkCqVQqEEURGo0GCwsLaoiFIDoE
g8H3NBvMCyiVSjAajbBYLKjVahYVZESW8Hq9JBGLxdhgXsDBwQHlDQYD2u22
eQik0+nA5XIRbGdnRw0xEcSAbreLt7c3tFotvoJUKkVwj8fD1HiJ8BIKhQKW
l5cJMzc3h/39fVxeXsLpdNKZ3N7e9rVlnlGu5vj4GFqtltthWl4bE8k51/H5
fPQNBAL/cA1yGff39zCZTBgfH0e5XNbSsh4XFxeYnZ0lKh+CIOD09FQaUNAh
Go0S5OTkpKfXpzcaDcTjcYXu9/v5VRiH0M/Ozgiyvb3dI/ZNZbNZhbqxsTFI
E/D09ISxsTEy9vj4KNKyyC8LoVCImFarlXdZn/LhyHqqhIlEIsquuVxO2TWd
TqtponyjNzc3eH9eX18VB8lkUsYIqNfrmJ6eht1ux/Pz86CMRB18d3enSF1f
X2N0dBR6vR67u7toNpvyUepwdHSEmZkZ2cBHLR3m5+eRSCRo1r89E66urqh6
Xsni4iIODw9RrVYV2w6HgzeEcYhcJpPBy8uLPOvb5XNuy2w2kySvemJigvpS
kiTk83mm1hqRu+Dh4QErKytYWlrC5OQklbe3t6duos/+GP8bM81fijSwXQ==
\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+C4Gsa0OGya7BJbRBiVM/O5tLHIrVRiHXZt///54thSn3UZ5kKor+x
VmPIFTDmgOk5jEroUm/1WR6AGaqMluhyJYwhIOrvNCb+5+hywYx9IMt8GBmt
MKxTZFz2dOJEHUZG1qsYcomMyoKMjCZOjOGYXthtY2bdduytOCOmNijYyqj7
F5ecHuMmXFLH+Zg/4JLzYUzCJfVCjvECLrksRqE3uOQcGXlf4pC6xc44BZe2
PWIaj3HJkQQA0C/J/g==
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVkz2IGkEUx2e/MLfnB1poE8UPRAs/GhH8aLRIGlMpWK9H5E4NkYudvaUg
qJVgZ2WhgpXW2trYWAkiKihooZCAvOzM7R3e7abIwgxv3v//ezPz2PkmlB6/
/xBKTw+C9euzUHx8evhl/fLzWUwxFELIjIcV4RjEUJrMcPn9B6HPIH6UPL7H
MWJhPB6D0WgEt9sNq9VKo2BZLBagUqmAoiio1+u3FrVkicViRNZoNLDb7dQK
llwuRywGgwH2+72SZbvdgsViIbbZbHZrIZsiBhKJBJEzmQyS6yxMp1PQarXA
MAwcj8f7G4tWKuHz+UiJwWCA5DoLw+GQ6F6vF67XK39j+UQsPIxGI4hGoxAM
BiESiUClUoHJZAKHwwFMJhPB5/O5HGVBEAQiOxwO0Ov1NF6I6UAgAPF4nEjp
dFqJtNlsRO50OrBer2mo1WqIA4/HQ9J4cByH90V3MpyBZDJJPNVqVVzhHAeX
y+Wto3iEw2FFtlQqET2VSokHeWHF1kCz2QSapkGn08Fms3nxfzg27onf7weW
ZWG5XHJSSafTSUqGQqF32J2kF4tFohcKBfTKtFotkrPb7QoMC6fT6W2rRqPB
Shi+Je5MuVx+h/HSTfr9PvkrsQc3V/QjWmLb7TZ5Hnh1y76+jV6vR1h8LJfL
RUM+nxcxnufJST5iaqns+XyGbDZLXipNZgbMZjN0u10Z868X/L8xov4CvH5Z
nA==\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9m4M+RAgZGRqbQbZhS9xyYhDzr2/bfLniFJvO7nEtv518Q6+2ULWhy
RUyVP8GMX61MGahS17nV30GNZmLqQpWbwzQFyjrHpPMTVa6W6RqE8TOYKQHN
uh6mgxDGRSapZ2hy+5i0voLovdw8O9A991mR6QiQWs7OVIwu9f//ImbGxC5F
BqYwTKn//9uFeYU5GCWwSQHBq/+WrEtxyP3/yjkZl9T/tHicUpGs33FJ3efN
+IdLrkH4My6pD5JlOG27yzMVpxwmAACvQNN8
               "], {{0, 28}, {28, 0}}, {
               0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1UjtrIlEUvjq+xscuaGMkAa0CQeztrLJYbBUUrHQIK6ZYVjQkWIhpoiB2
amcliH8ghFioCKkDNqYI0c5CUARxxee3c693F0XbHZiZM9/jnHvOnO/SbeTH
T+n25lqyf4tJ0cjNddx++SsmQ4KCEHJGbzuhMeSQP87we74g5BTypdjGehoT
AZ+fnzAajSgWi+TrEX48HuPk5AR3d3d7vIHzDw8PsFgsmEwm5MsBr0Kv14PJ
ZEIkEsFmszHtSIw8RSAQgFqtxmw2I7u8ifPhcBjBYJB9GY/w0+kUoigin8/v
8dv8agwGAxrB7XazOpVKZXu8vVa1yGQyrBV6XPrW6XRQKBSwWq17epHpRZTL
ZQiCwDSSJCGbzcLhcNCRQ6lUwu/3b3Nzn46PRB4V01HN6+urwOFqtQqtVsvg
eDwuHnE2Gg1GX1xc0K5VHK7X6zAYDOw/vry86A6cAnK5HHO2Wi2i4bZ2u80w
m82Gfr+vPWJLJpNM0ul0/tnm8zmurq4YHgqFjtlKpRKjC4UC0XLb29sbw5xO
J02hOdLe+/s76+P8/Byj0ehvwW63y5z0lme86xS5JBaLMTqRSNDkag4vFgs8
Pj4ySl7AQ6cGy+US9/f30Ov1cLlcqNVqWK/XKt7JcDikXeDp6Yns2rfrbWBn
83g8rILZbIbX60UqlUI6nUaz2cTHxwei0SjdwT2/kZ9wtVrRHWAaeW+UdJnk
sjSdz+fD8/Mz2R3w6X+IieIPYmuAAw==\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4M8dU0ZGRhdsUkdNGfXqU8J5D2FKnWHnnAekjmkux5B6ayCyCcxY
dwZDLoSxHcLwkapGk9rIYfUZzDjByZiKJmfDuB7CuMfI2IMq9ZBN7iOENZmR
8TqqXDmjL4TxnIvR6y+K1HdXxiYw42cjI5SFkNPiWw2WSmVk1EH3QTmj+7ub
cxq9GRn51qPLfQOFJFAPB6MrutT//19nJ1mUrHwmxDgTUw4CljHafsEh9Z6P
tQOXti8MPC9xyWUxuuOSes6N6Tk4iGSswSlHJQAAxSrC9g==
               "], {{0, 
               28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyNlLtrIlEUxq+r42N8FGIVNmJrCGIjBIldsoKPThBLE4VEWHbJChYJSNIk
hV0qiVgqIkSSP0FQLOxFECFNgoWKaBQX5duZ6x13xGTZAYcz93y/851z78Vg
NHkW/x5Nnp9Gbd6L6M+z89Nftm8/LoQlpYIQsiv+bESMIYTstYvp/DchXyE8
in/HRjEmSkQiESgUClxdXRGDLE9josLb2xv0ej3V7O/vGz4okUgkaNrr9ZLt
vAqTyURsDwaDAb1eT/+BZDgcwmQygeM43N3dySUmJikUCtTF4/GIFXmZREsl
PN7f3/Hw8ICTkxMcHBwgmUyiVCrh9fUVZrOZ4tlsVo5q2AzT6RQul0uUCF6r
tzAutFotxY6Pj7cxLVKplDQ6BoMB2u02crkcrq+v4ff7v9BKSjpapVJh0N8y
ajbbbDbD3t4e1ZXLZRVd5jCfzxGPx6kD23+i+wQXGqSam5sbToaLjUi4kNpw
l2aXhggGg6wkR4+d53m67vP5sFwuV/oNVoWXlxeo1WpYrVaMRiOpo/v7+7Vt
q9WSk1rmenh4SNPCvqwH6Xa7ayyTyWxjKjw9PdFDcbvdGI/HHFtuNBrQ6XSU
FLZMTuqYYSgUounb21tmqEQgEMDOzg4uLy/JNqNCv9+H0+mExWLB8/Mzx7DH
x0c0m036Jcd4hok5jUZDO8rn80qG1et12O12FIvFjYOg113wrNVq0iWEw+FA
Op1GLBZDOByG0WhEtVrd4Ays7mKxQKfTEVnha3Xljo6OwJ6NFv/nv+GzmCj+
ACjMlRs=\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+C4E+ns7Rw8w80QRDxoVqDSVKfkzH+G4rcKSC+YMUoOQNIhzBO/oVm
3mkBRqdPIEYuI+N8NLkCRhuwFEhuGZqNFszzICxPRo4vqHIPGOUgjP18jLlo
Rk6Dyp23ZWQ8iCb3WI5t1tObp6LYGRmzf6PJ/d/AxcjPyMjJxqjwBV3q///7
k5uamnoFGVsxpSCgklH+OQ6prxqMzbi0LWRk3ItLLpPR/Q8OqWeCjAtwaWtj
5MflkueijD64tLUzMrbhkjuhrf0UlxxJAABNiMSC
               "], {{0, 28}, {28, 
               0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVlM+raVEUx89xcHBdP5KBvMsZKgNTiQn1pLyZkYl0e3UlPd13JzIjZGCk
JAM/Jsb+AclMDJgaUcJUQh5qvbOXc3Xe4w3err1brf35rr322qv9Lfrx9j0R
/Yi9Rjn/ezT5Fnv9yX398c67GJqiqBcyOYrYwJvC8gKHXyeK+gL8oO/tJ2JT
UhgMBmC323Eul8vnB0ihUACapnHm8/lHyHq9BqPRiEgwGBQjagHhlbit1WoJ
rn6ArFYr0Ov1iDWbTTHyLCCxWAy3/X4/XC6XpwdIq9W6pdvtdh8h+/0ebDYb
ItlsVoxoBCSVSuG21Wol6apEiBIRBmazGZTLZchkMpQEVymUSqXbFXK5nFim
ECJ3Oh1QqVSfxZAQg5KBUqkEuVyObo7jYLfbXU8S5CzKlbBYLMBisSBbq9XI
o8F0OoXhcAjhcBhYlqWuMRmIx+NwPp9Ryd7FYqBSqeB5fDw+A+KTwXg8Bo/H
cythv9+/pv6Xdj6f37Ry4Wq9Xg80Gg36E4nEvUxKHg2cTicwDAP1ev1TGQgE
UKVQKMjN2Qd1SyaTiLjdbthutzLBzZ9zy7Xdbt8rZTAajUCn0yHi9XqJmhfe
yxuNhlguEypOKisek8kEXC4XSkwmE1SrVb4e13ChUAj9pC9Op9N9OAYrIAz+
ociqgs1mA+l0GptSIpFgWIfDgU1BwkUiETgcDuKCqoVXJeGKxSL4fD4wm81g
MBhIT8PxePyjf/71EfyvTdG/AZD/k0o=\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+KYE8Cg1Hr3l+YEtti5NgE1EWYmJJ+oMn8yOJhc5l25/+jxg7eZaiS
B+SY/I5D2UVMcruQ5ayYAh/D2IlMTGWocldgzOlsTJyHUeX6oawb0kycG1Hs
K2KqhrJsmZhaUJ35gofzLIj+3sDF5P4czQ9hTJ5Ax9wxYmKS24Em9f+AKiOj
CiMjAyPLAXSp///vxUhpGLcyMnljSgHBq///+xlZTmKV+///jQSjCw6pLyVM
jHdxyM1hYsrAEkEg8EiFiQmHrv9TmTgX45B6rckkj0tbHxNTOy450gAAqLK6
QQ==
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVVDGMIWEUnrGz7Fg2CoVwi4KgXZ1EJyciJ9GoFMbmEiu53MWJRkNCqKjQ
6CR6jYiQSBSi0CkUKCgISjlO827+38xkdscW9yf/5OX93/fe+7/3/vnGJGPf
fzDJt1fG7E0wv2Jvr7/NX38mWNcdSRDEM9pmAtnAmtznGf78vRDEF2AXKbWV
yCYoKJVKIJPJ8C4UCk83IPv9HhwOB4aYTCYx5JGDVCoVfEzTNDQaDfUNyGq1
AovFwicTQ1QYcg/1el2oJRaLweVyudI/4I7HIySTSYwjSRIWi8U7nJpLeTgc
QKfTYYzH43mUVKWA3W4H/CqXyxhKURSMx+Pr/Tk8jfE0LJdLCIfDoNfrwW63
g9PphHw+j3moHL/f/473wJU8GAzAarViHNqsEgQuni0TdYvPy+JoCZ2CUCiE
w/t8Pliv1zLslsN8PoeXlxdBNKPRCJ1O50EUQcFF2G63oFKpcIcmkwnFRTid
TpDJZECpVOIIXq8XNpuNQhLhDhKJBIak02khqtvtFpLncrlbNJfLhY9ZdTnf
PcxmMzAYDMLItFottpbPudPpVFCyVquBXC4XuMPhkPVKL8xzg8EgkoxXkmEY
oeJUKiVlXnuFlESQQCAAo9FIiMqLgM673a6Yfs3wBOfzGeLxOFYbFcpOHlSr
VdwstNBDyGazUCwWQa1WQ7PZRBzx/ZXcdLbbbTxtKBsKpdFowGazgVarJfAV
WI2i0ShOee3nx0eggF6vB5FIBE8ZmhU0rf1+Hz8u8aB89qP4X5sg/wGaM5Lt
\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+C4GiZIiMjYzI2qSZJJkYlQyamckwpU3b5jNvv73MxOfxBl4pgk3gA
oi2YrH+jSe1lFDsHoj+qMnmhSf00ZQgCMxYwMnqiyb1hYlwGZtQzMcWhyd1n
YnwLorcpMjFdRJObBJT7c3RShCQThnX/LzMxzvRhYmJkYmKqw/DdXAZgkJg2
uzOyn8aQ+/8WCH69F2NCdyUcdDAxzcElZ8rk9hmH1F5GpoW4tHkyqH7CIXWL
nRGnnCsTYxsuIy2Y2G/jkqtkysYlRRIAAGocuaM=
               "], {{0, 28}, {28, 
               0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVVD2LIkEQ7dFZXb3dC0XhFj/AH2AgCCYmKoqbGBkJMhy4yHHH3qKYKCiI
sZmgoIk/wczQSBDETAP9AYqocOAH1HXV9gyz61xwAy1l93s1b96rmefcW/77
j9zbi5LzxF9zv/Ivym9P7Ocr3zJLjLEnXB6GNfBS/DzBn9OZsW/AL+m2fsCa
maFcLoPJZIJCocAeb85lCIVCdG61WmG5XD4YQKLRKEEkSYJGo3ELuYPFYkEd
EOL3++FwOLAvOtyjaJVIJFC9ijGCjEYjaoN37Pf7eshXAQkGg3Qci8XgeDza
DSDNZpMguDqdjh5iw1qG7XbLhZ/PZ9jtduBwOAjLBTI9+F7Y2O12SThXxsgJ
ZiEZ9Xod4vE4KUYDJpOJTUe3Cn/m87lmYbvdhlQqxUgcP1MfVl2VSoXd9rBB
q9XSenDxcL1eYTwe034mkwGXyyV6miGZTIK43vkfesmwWq30vWQhczgcgtfr
1aTMZrN3Bz7RN5uNRh8MBndiu1qtatRsNmvEPJ1O5Bt6mU6nVWav16NmuHgE
eub9p7nApKbTqSy29/s9TRPekz+1nmkTEDTHYrGA0+mE9XqtMtXJD4fDcLlc
9DbRBPABRqWYqtvthnw+jy8ITQvaZ7fbiR6JRDCKDzbT0PIJqdVqGIvmlc/n
g0AgoKZUKpW0lCwG7y6mWywWMRL+D4fODIqiGCb7r+/A/9ZM+gvxOnm7\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9u4ICZrnDtM2wy/XGSTIxMTF1YpIJYmFiDq6Zwy1c5oUstYpSrOwek
d/IwyaPLhXDtANPrOZkS0aQuMm4BUYfyWRk10bW9FLTfdrjTF+gW7ScYTtkA
FGYCupPnChZ3VtroqEQzMtVjkQKCvz/2MIq8wS73/38iQzsuqecCgndxyc1l
SsMl9ceYaQMuuQ9Merik/rcxNuCUk2XC5m8wuMyu8xeXXBhTKU4jp3NfxSmH
AQCE98vV
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1Us+rYVEcP7jG4/IiNur5sbAR3kZZKWUxs7JBNkrdXqP3FpPpzbOg/FgR
GxtlZeMfYCFRFmKvhKWdSFlYTWaiz9x73DfdN2zn1D19z/n8+P64J8S9PX/9
xr29PHH2L6/c9+eXpx/2z6lX/kohI4RYhM9OhBh8KG4W/Pz1m5AH8Et2iVkh
Jgo0Gg2wLIvlcknub+CxWAxyuRzpdPoGzmA+n0OlUsHtduN8PuskFK1oYbFY
qMVisSC38FKpBJlMhmKxeBM/HA5U//j4eANncDqd4PV6KafT6WglFJ1o0Ww2
KZxMJsk1zmC73UKv18NgMGC1WrESyr1owXGcMEyUy2XCXlXxSWgex+MRw+GQ
dmMymbDf7zUSKo3JHTKZDPx+P52Zw+FAPB6nEqHCQqEglajF7Hxf7xT+JOzM
X4lWqxVmq5bI7sRMu92O9hQIBNDr9TCZTFCpVBAKhQS5XPRzuVxYr9dUpLqy
UWA2m9Fs3W6XzyvcKTEej5FKpaBUKinmdDov/H8qj0aj0Gg06Pf7vOoy7na7
DbVaTavn56q6kinRarWordVqRT6fx3Q65c0u8sFgQJsW5DabTXU1YhbhcBgM
w1CKUGEkEkE2m0W9XqfPnZfRczAY/NAxK6av1WpIJBIwm83Ugy+FvE+rWq1C
XB+0OvEljEYj+Hw+eDweGI1G5HI5bDYb6f95+A8xkf0BQXdCIA==\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+CoFo/hZ9tKzaZx5qMIMDe9AxD6qAGUMLm6v4OIY3P6HJ39RkZs3/9
///vBMteNKnfyYyMjr/BTP6daHIzGBmVnoJZf85P/4sq18jIGAZhFaat+4Iq
t4CRsRREP33IxCj+AlXupTxI34NqBW6gc2+jWdjCyC1vzw/2YvwvNLnH4VyM
ULAL3X///1/vybHVAkpZo2uDgH+uQKnHWKX+XwJq68Eu9d6GkVH2D3a5SYyM
LPOxS/2XY2SNwCF1hIVRAYfU/ys8jO245P7v476MU44EAABue7HS
               "], {{0, 
               28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVVDFrIkEYnTW7q9G9E9LYnGZJZdL4AxKRFLmrrtV0InqSYI675GKVKiJo
YWUTu/gL7FIoqAgWdkJULERQJJJUFgkHpybvduYme8utKW5gho+Z9958875v
93Pk/OjL18j5cTSifjqLfD86jv5QP34707bWBEKIm06V0BhayBc3fv6aE/IB
2hDM8TsakzXUajU4HA50Oh2iGM5ZTER0u10oigJBEJDJZFZBms0mRFFkEFVV
FdMtIjweDzuWJAmHh4cOE0RCPp9nEDqp2vX1NbGbcDJmsxn29vZ0rNvtxnK5
XDdA33PJ29tbHUZnLpcjZpyMl5cXHBwc6Ljd3V1MJhObAergkv1+n8rg5OQE
fr8fOzs7mokaSVspbT6fc9G/3HVutSaJUCgEu91ObJxTqVTAh6b+L0dGOp1m
KdESbW5uIhAIwOl0SpweDof1K410G/f94eGB0ahEMBi08O3RaISLiwtaLar8
+oDBYKAnI65QKxaLukfJZFLkOd7d3WE8HsNisbAjl8uF+/t7eYXC5eWlrqDl
I/Pt09NTxONxlEolPD09mZkSCoWCztza2qKX/nmxRtfKj3a7jaurKzw/P5vp
MhaLBaLRqC6xv79P9yReGs1SlMvlN0onYzgcwufz6fREIkF9f/WTNlCr1WJ9
W61WrSuK32g04PV6mdPMJmJlbdzr9VCv15HNZrGxscEwj4+PxKhhNzTQ9vY2
Y4u8ZlarFalUCtPplBgbVuGZ0zLTzGOxGHulLMu4ubkxfllv/SL+NybCb6+Q
nE0=\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+SYF+AiOPKf9hkHiSzMvBLM4Z+xSLlwCjQ8uTbYgmXz+hSv4MZBY+D
GJd0zqPLdTMKHIewfqFLnZAUPAGiX+SFost99wcb+HePPiPjQzS5/Yz5QPKh
GyMQfMCQm/3//iQhRsMoTkZ0655zq6hwMkot+b2TGUPu/xYuRt6sX//fyTEu
wZD7//wA0Mt/fRjVv2HKgUEbI+NFHFJLuRhzfmOX2qfK6P4Wu9QLXcZUHAZ+
LGAMe41d6m0MI+9iHNo2MzLm4ZD6/1PT4h0uOdIAABFFx3c=
               "], {{0, 
               28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVVM9LKlEUvvNGfW80s6SF2ktaKCIo0a6lgeimh4HoItqICBU+lepPEDfu
3LqsFq1zI0i6013oP5CCoBBFIRoq+r2516vMS9/iDdzhzJnv+86POWd+Ra7P
Yr8j1+fRyK7/MpI6O49e7fqSl7JLFAghO/TsEmpDNvltB4PhiJCfkC9h2dZS
m6gwHA7hdDpxcHCAt7e39RWQh4cHCILATiKRWIao8fr6itPTUwbR6/W4ubkh
egVOx3EfHx9IpVIMFw6H8fLyQtYUuDUestvtwu12M1wsFlNC9Fzq8fERdrud
Qfx+P01hlg7HrXPc3d0dtFotw8XjcYzHYyIpcAYeMpPJLKqs1+vSUpUiOp0O
KpUKer0e+cblJ5MJjo6OGM3hcGAwGJAfCi7TkesvFAqLNGiHLi4uMBqN6Fva
d1itVvbu9vb2Lz6z5b7Q2DqdDjabjR1JkhjeYrFQDi0LxWIRoihS/yqJcrnM
KPl8noV9fn5GLpeD0Whk/v39fZycnMyllyXEhUQymZSfZr5WqwWfz0f9ROT3
9/d38Evu0VcdFT4/PxEIBLC5uYlqtTqXos0slUrY29uTGzyTovKrpCQuVavV
YDabmZRsqxQTJA8rQqEQ7fP3FXOdzWZZMRsbGzQJDU9i/lW+BpzPOu10MBhk
VJ4/UXFuo9GAy+XC09MT0SzNvw7NZhMej2cRNp1Oo91u06mhOwOTyQSv18sm
TMmf7YXE+NFoFGq1mm45DAYDtre3mR6ttN/vE2WpsyXQsGU5Pj7G1tYWDg8P
cX9/j+l0qvzE//pR/K9NhD+43b2M\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+84ONiSYZ8rDJf6yUZ9eo7sUldkOYIv/YHq67F7Gp7cFhVz6ryCIfU
RjG1BzikfuhwnwczEtWno8udYlwDot6sY2GMQpdbyPjy//9/e4QZGRk3osv1
Md57fN2Wka2YkfM9utwZRgkuRkbb46sZfTHc8m+uCIf7vn+/7RhPY3Hp03u/
/v+fyCj/HIdPLrAyrsMh9b+OMRJ7eAJBvsBdHDL/+gwm49LVyciIEV4wYMLo
+A+XXLziB1xSVAMAKMbUdQ==
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyNUz1oIkEUno27/q2XCEqIeEGFoE0QC1sFm1hZS9LIEg6S4vCIqbVOEwgW
VhbBUhHsxVZQQSutlJAgIRBQCw9Pxe92HlvorXfcwAxv3vu+N9+beZNQ7m++
fVfub68Vb/xO+XFze53xXqTvVJdBYIyd8ull3IZqasspfv5aMvYV6hD+bdu4
zQxIpVLw+XyYTqfsiy4uIhwOQxAExGIxbDYb2x7Iw8MDQfgsFAr7ICoTj4+P
CIVCyOfz25BDTUg6nYbdbsdwOGSyLi4im83SCZeXl1iv19Y9kF6vB0mSCFat
VrchVu2U8XiM0WiE5XLJDjTa09MTUTweD97f3y1bNDNBZNJfLBbhdDphNpsR
j8fRaDTIv1qtEI1GKUW73WZ6vohOp0Pxk5MTWK3WA75hEiKRCJrNJsrlMoUT
icQeuo2ujse58re3NwwGA+Jyn9FoRCaTIdtisWAymZh1KQx4fn4myMfHh1a4
gdTX63U4HA51xyUZUKvVoA1m3JOn1WpRnkqlotbFfRI+Pz/5fUMURYpdXV0x
vQYRi8UC5+fnkGUZ3W5X0lIqioJAIMB7Z4dm0Whc0vHxMfx+P15eXo50zyoi
l8vRy5+dneH19fVwCyJrkFKpBJPJRFnUovW9bqT+cbvd9MLJZBL9fv/PViMa
M2E+n9OhLpeLSg4Gg7RX/8JODUfaFc1mM1LA8fynqt2+g/ufL/s3mwm/AfXu
bP4=\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9m4PfDY1aMDOkfsEjdtmNiYjK35XHEkDmixMFs2X3/7//zPLVoUvud
mBxOQZgL1X+iSD3QYpv0G8r+InwaRa6ecR2MeffiwRYUuWnGfyCMtwXiJv8/
osiFii/98GHtvS4LHkYmQTSnTAM6n4mRid8jpVIcXe7TkkBzX7OuCz/+Xxep
x/AfDCQx3sIltZ5P6QsOqe8WPPeQuLeR5dqZJiJzHyCxf3kxncJl2xzGBlxS
98W0n+CSq2SajEvqBY/hR1xyW5jm4pLCAAACOM8+
               "], {{0, 28}, {28, 
               0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1U0FLYlEUvvoae5XpSKKbgnAj1CqKNEFRFzMiuGjhD7AaqsUw0rRpIbYI
Al1V4KoWgi3VTfsQxIUu1JWQmAot2gQZMqUV37x3fMUdsuVcuJfDOef77v3O
OTcQ2t368TO0u70emv2+Ewpvba//nv32a0dyCSrG2Iy8Z5lsQzKVYwZ/en3G
piEt1cDWyjYTcHFxAbVajbOzMzb5IT6C29tbaLVaLCwsoNPpaLmUSYVib2+P
KE5OTtjH+AiazSZMJhPm5+dxc3MzwaXoFIrT01OoVCrs7+8zPq5W4q1WC8pi
Ywptv9+H3++nq4vF4vgQWL1ef4eNK77Dw0OCHB0dMR6jV2gfHx9ht9tJ9PX1
9RiX8lVJyWaz0Ol0sFgs6Ha7IpdiUG5ZW1sjQVdXV4yPj1J8Eg8PD0ilUlhd
XYXNZkMgEMDy8jJisRgqlQqenp7o2bVaDUajEdFodAiPgEQiQWqkzQanSPfK
Pr1eD5/Ph42NDeqR2WyGwWAYRhMMBil8fn4u0dzf30s06XRaLgA96a0gb9Sf
0MivWVxcxMvLC9OQT4O7uzuEw2GiX1paIlXSIGmGwCWRdEMmkxmIlWrdaDRQ
rVaRy+VwcHDwEfaFhmNubg4ajQbHx8d4fn5+p5Tag6mpKZRKJcZjRQV7eXkJ
r9dLotxutzxIyssFJJNJWK1W9Hq9f7CDAdQin8/TCIiiCEEQsLKygng8TvP+
+vpKSsvlMhUuEomMchQT3IC6XC6ufSM0Dk6nk2Aej4ev8+BTirJCtNttFAoF
OBwOKpr8zzc3N+Xm8ZDp/2Az1V+QA6Y6\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+C4IwDI8NdrDLPvcSZmJjkF2CRehjLxOn3+Wub/kdU8c8v/5/kk2Be
CGJ7zkSV+/Pzoz4TxykQ8zo7dx2aiXOY2EC6rk5UY2JyRZNby8TV3qqgwAd0
DYbcNxMmCDDFlPu/jJ09xjDi2rW7TEwFWL0IBF1MTC245ASYhN7hkJrGxFSL
Q+q+AJPsVexSp/iZhHZhl3rvxMTUgV3qXxoTE+dz7HL3gF4vwy71x5yJSe8b
drlz3EwSv7FL/f+vJb4YlxRpAABRIbsU
               "], {{0, 28}, {28, 0}}, {0, 
               255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVk71rIkEYxmddP1ZNVGxicaKVhYUhoNhKwBwKl9pCCwknSXGc5EI6rRIV
uzQBIYUi2PkP+B8oYhetjKQKNoqIgqfkuZlx3Ns77zhuYIZ3d37v887HM5/S
N5efv6Rvri7S3o/X6ezl1cU379nXa/pLlgghbta9hMWgoRjcWK6+E/IBtEn7
sZXFRIbf78fR0RHq9TqxaeYtfN6AXq8Hq9UKnU4Hl8uF9XpNDvc4IzabDcLh
MOdYDwQCWC6XB3slDXh5eVEx1m9vb8k+Z8T7+zsymYzKmc1mvL29WTXogZCc
Tqc4PT1V0VKpRLTcoeA6nQ7sdjtnnE4nWq3WdgeCswluNBrB4XBwzu124/n5
mZg1nJ1zejw+Pqo1c7mcFnEIZCfDyk0mE+UPSLlcVlXu7u60iCLOotFowGQy
8Z5MJnFycoJEIqFDv9+nCsPhUFXIZrNaBZO4aHoZCAaDDKF6bNQjFAqpadFo
dD/NgGazyactFguKxSLu7++JDl4v9RtsNtsunWxHmclANFrmdz09np6eeI7R
aEStVpPF6ugB4+HhAT6f759SBv7HxC23Wq0wm81wfHzMZRVFYZdMC23LDQYD
fmbMwvl8XtmTUTCfzzEej3mddrvNd8WcLssyW6FerDAWi6FSqYiknzL8zqmJ
Xl9fkUqlVKeen59z6cVigUKhwFdIV6q1iEVIU1MjHo+zd0i/tpv3eDyoVquc
0ObsHN/tdhGJRCBJEnvvzAG/OP5v7/5/YyL9AApCeXA=\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+S4E2WFIN34XtMiefzrVSYQCAGXeapHycTFFj/RJU6KQYRdwwN5WLa
iSK1nBsozmu4+vWv/9+dmVYgSx0H6nLquwxmT2Ziuo0sV8zErA923Z/3YVxM
TFdR5UzB9FkfsKUlqHI3gOSvJVwQBy1AlTNZvaBNECQuzoRm32yY15I3KaHL
vbcESQhn7/6Xy8TE2vMPxX+veqK6Dt75/3+3ABOTGHqQQcBeYLhxx2GVugnU
xRSAVepfGlDK5QJWuc1AKdNLWKVmAQOV+Qh2hxQAtbVgl/r/uYJJ6w8OOZIA
AAoziDM=
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVVM9LakEYvak3UzMSISFeEOHKjQS1UFdqvLeoJ21yIRGIvOgH8jRd9AeI
CxE37nShC6Ggna1CXARBtBBCCYzcRlBBC+GFIp43M3e8XbOCBmaY+3G+8505
8839HYzv/AkH47uh4Pyvg2BkZzcUm//594CE1GOCIMzROS/QPciWL3P41+kK
wg+QMTa6N9C9IKLdbuPw8BAqlQo2mw29Xk+Y/AAXiUQYZjATicQHuHHkcjnM
zMzIOLVajYuLC4MCOsmhp6enQ5TLy8uo1+v6Eaga/X4f29vbFCYwMImtrKzg
+vqaISYUOUaec3t7i+np6aGc9fV18CFoFTlTXFK1WoVOp5MlGQwGbG1tKem1
HPr4+Ih0Oo1AIIBUKoXz83O0Wi0V96tSqQyqs0k8GVI5zlW+vLzA4XBwfXQV
YTabsb+/zzjoycPhsHwCURRZWRKXON7x5fP5QU0Sk3JCoRDK5TIWFhZ4DTXu
7u5kJzQjPFrEYjHGs7S0hJOTExSLRSSTSZhMJoKXdFoslqELJJwfahpwNZtN
8iXFut0uSqUS9Hq9rJPW+FzTGw9pFFJditVqNaytrTEGDeeJx+Nf8IgyD+1N
u91O70DCkZX0P7sTv99PtQ1sv7m5+dKuy8vLobb3eDzIZDJoNBpcqgbZbFZp
ldIpLT/N0dER67m3ntXDaDRicXGR3cLT0xNzjo7X11d4vV5Gd3x8rKSb4HRX
V1cDVUSF1BJutxsbGxtskgOy9LOzM2W6jqff39/D5/PRF0EoJSNcLhc6nQ53
8v371+Dh4QGFQgFOpxNWq1XkaZubm7J/yrQp7t/z8zP29vYwOztLf19YXV1F
NBplV6N8qJ/9zr67F8b+A3lT5PI=\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+S4M++FgNGButrmDJfF5oyMjJyCrE0/0WTOd8tw8hpvmzf7f9zxc+g
yPxawcXIFQo17P59ZKnf2YyctpexO2I1I+dKGPv5dxSpD1zCV2DsW0rhKJLv
GIPgJigyMt5DldNbenu1Z3JysiYrI6PHX1Q5RkZWJkYI4D+G6pYr0UBQMGnN
n1pGnlXYnfu/hZExCbvM9xoxRpF7WKW+NTMyCp/Erm0qI6M7DqmHUoxpOJzx
OYVR6zcOubmMjBNwSP33ZAz/h0suXv0LLikSAQA+dLy7
               "], {{0, 28}, {28,
                0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVlL9rIkEUx2fNrr9OT4ghATEQbSQWIY1YBNsYi2uEYJEi+OMkQY6TXEqt
TJcmCJYWFgma5G9IGRAEi4iFgpLKLggmymn0ezOTuWWTzRW3MLuzs5/3fW/e
e7Pf4qdH33/ET4+T8Y3wSTx7dJz8tbH784QuLUmEkHU2Ngibg07FbR3j31NC
3KCXpJ9b2Zws4fDwED6fD8/Pz8Sh+y4jEolAkiTEYjEsFouvnyDlcpkjbFxc
XOgRBaPRCKlUiiN+vx+z2YzYNdwXIfX4+AiXy8W5dDqtRWxCqlQqqd7C4TDq
9fqb+TvOiPF4jEKhoLJOp5OxVg1qF+hkMkEul8Pq6ipHV1ZW0Ov1LBrUIQI8
OztTFROJhBYxiYy2Wi0cHBywQQz8bkY2m0WxWMTt7S1eX1+Rz+e5hM1mw/X1
tVkjYxRBPT09qZ7YUBQFBoPBxF6oF4fDgfv7ewF/NDep5ltbW7i8vES328XN
zQ2rJ7VOJpOU3Nzc5LJ/Xezt7WE+n+vlllS5aDRKzKISTM7j8ajmNGWfhCJj
OBzCarXyCtDkmMVyp9OB1+vlnUUrYNSlUuYemLLFYkGtVjOLYAaDAa/Zx72b
xArtLmQyGdU0FArh4eFB295mkabpdIpqtcrjYzh77u/vo91uv0kb0O/3FV1L
29FsNnF+fg632606CgaDuLq6wt3dHU84u9jpWFtbQ6PRIFodm9jMy8sLKpUK
AoEAfWPFVbjW8vIyZFnmPUyL8s6WHzG6B9ZKzBfryu3tbR4HO/s7OztsB9rc
/Os/8L9zIv0BrU+WSg==\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9W4NfDIgsLi+CmX5hSp90ZIcDoPbrUVkWgsKSklRc/40w0qQYeRs6g
g3+BrG5G/acoUq95GF1uQpgHGRlTUeSeMar8gDKTGBm90eREmo9e+b8mMkSR
g5GxB0XuiwXQJbKWTBCX7kF1yyN+sKhp0/5MRo+/aA59PTUkJGf/n//ftRhb
MD0PARMZGRbikPqsyWj/GbvUv2JG1sU4tK1hZMzFIXVdm9H2C3apD4qMIotw
aGtnZCjHIXVDgNHiBw65vYyMS3FIAeVycElhAgDgY7GD
               "], {{0, 28}, {28,
                0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1kjFoIkEUhmc1e2rORAubQAQFG7UQBMEIYiNRlGuMjaUGIYJyhwZsRYUU
2lhYWKrY2dopksLKVlBLBdNYKCinJybvZmbHvc0J193CDG9nvv9/M+/Nt+jz
UzwVfU48Rg2+dPTHU+IxY7j/nsZLcg4hpCfDgEgMOGSTHn7+OiB0C/jjhPgr
iZEcer0ecBwHyWQSXZ/tX4j7ZLRaraszhIfJZAJarZYiTqcT9vs9Uks4NbN6
eXmhDDlRNps9R3hYr9dgNBopptPpoNFoCGkYd8W48XgMVquVcm63G7bbLbqU
cNcsZbvdFk+fSqXOER4+Pj4gk8lQhOd5aDabSCXhNIzbbDZgNpsp5/F4yD9S
SjgtS1mpVMRb1ut1KUJjfNflcgnVahXC4TAduPbQ7/fheDwSAna7HVgsFmpT
LBalFgrWtvl8DhqNhiA4J5kV4HA4IJ/PU6tEIkHlfr8f3t/fBR3z+MI8cNFo
v4haRmc56PV6uLu7A5lMhjlhrdvtAvtwHf72UcPb25vYsEKhAIPBAEajERWQ
BkQiEXpN0lilUnlKVS6X/2F7IdqaTCbypBRsORaLiS0NBoPnF+NpfdVqNUW8
Xi9Mp1PR9fX1VZTH43GpXMiggFwuJ8pVKhWEQiEqI3WUM5tSqUT3bTYbLBYL
qY2SlbfT6ZzeslBeGdzc3ODjuVwuCAQCp/5BrVb79JJUzGA4HILP56MGp17Y
7XZYrVbspH80l0xzOBxgNptBOp3Gf7i7eH54eKDvAu99etm3/yFG3G+kCJHW
\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+i4NO8Um8mBiamrk/oMjcztJmBQFqYmbkMVeauOz8zk77Hsl33L++K
nY0idVCDmVl37jtsNiXyMCvN/4xN5oc2EwPbAezuWwJ0QRd2qQ5RZqX72KX+
xzEzr8Ih1cDN3I3VGUDgwKT4DMJ6HqpYihoknczMFRcmxgEBEzNz8HcUuXcy
wJBiYgYToegheTY+npvJLt6WmSkYI5CB4NWL792CzN7fsUj9//9nLxOTNw7H
zmNmbseu6/9/RWZTbHaBwAImzXs4pP4re7/FJUUiAACS8bbs
               "], {{0, 
               28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJylUz1rIlEUfX670Y0RsdKAH40SxMpSsVoDspWkVBnCgimWXbJJsLSLH5W1
+FGIhT9BEMwPCAhWFsbOiGAKhdVdhLNzXx7DhLHbgTfcuXPuefeed95X6a7w
7bt0d3Mt+VK30s/CzfUv35cft3LKoGOMndPyMYohh+J1jt9//jLmhfzotPEJ
xcyAYDCIdDqN9XrNHJr/RnQ6Hej1eoTDYby8vJyqIDYB8fv9MBgMiMVi2Gw2
nzUQE1qtFofQenx8xG63Y/YjuMPhgOFwyHekJXf2AffelRWr1QrL5ZJ4UKvV
4HQ6OTdNIudOVCUWXmLH8/Mz8vk8XzabjdMnEgn+HY/HeTnlMpkMTfFJRWEW
Wr29vcHr9RKU6fn7vURMJnJGJXd1dUVUVg2VGZVKRRGkWCxiPB6jXq8bkcvl
ZB1UrLwh0suioTEimUxyLB3BYrEwCxlfX1/55pS+v7+nJo6Um1AqlbgWtA3J
uN1umVOjHW9Kaaff72shJpTLZbjdbg4JBAKYz+fsTIWzCly321WoPB4PqtXq
B99ZhUD7/R4XFxd8OrKz2WzGaDRS++9EQCVJgt1uV7Zut9s0idZfFjw9PSEU
CikdRCIRNJtNOlmmNg2vZaeYzWZIpVJwOByKQaLRKC4vL9Hr9TAYDGhSTCYT
HmezWTQaDb2K6lSYZzqdolAo0FCyomQUExfA5XIp7Tw8PDB17ZmYUD4/foXo
LMniQhR+R2QyWUMOEc+R2/4/MdP9A0fldoU=\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9+4MfOem2duPIfmDIPvcSZGJmYmBiT0GXedAsxMQmXnry4oXQDmtRu
DSZG4Y432GxKY2RkbPiGTeZXDiOT4Xkg4+5UxUI0uclMHLFATS+L+BmZXFCl
7vIzrQbamMEBdCPTDjQ5PkYbX6CFjpP8GbPR7UsCqmc3XPp3GQfjfnS5Vxcv
Xrz6//92aSar39jc+v//GaB9q7FL/T/DzjgDh9T/dSzsx3FIfRNi6sOlrYFR
+BEOqXOMDLhM/N/NpP4Fl5wD0x5cUv8D3XBKYQIAwtq91Q==
               "], {{0, 
               28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1U0GraVEU3gcP912XYmDg3mJEMTGVASW3lOQHUNye3Hi9x7syZKiUASl/
gImSGaIMpUQGhgbMyFDySOvtvRz3nnKm79Q6Z+39fftba6+1jj/yEf/xM/Lx
/hYxvqYjv+Pvb3+M3l9puiXlCCEvzIyE+UBd/vUCh78nQp6BPtzVf2Q+kUIw
GASv14srtQjucrlAIpHAYDAQwWVQLBYRN5vNsN/vn0Qo0+kUOI5jqcBoNBJS
VDwln88jRafTwXq9VolQDocDaLVaDFYqlYSUJ57SarVAJpOBQqFggR5FKJPJ
BGEWrFar3VO+IUWpVGIgZs1mk3wX8BQ8b7vdwnw+/7TFYkEkPNbpdMBgMOB5
h8MB5/OZPNxpqCAajSKHpcO+LDW73Q71eh0ulws0Gg3MheHD4VAoIedDLZdL
UKvVSHE6neD3+2nb6IpibrcbyuUyBAIBxBOJBLnXkKGGRqO5XVfC977f70M8
HmcZEKzFVRhp3W6XKEWqUqlUEGdZh0Ih1ja+KnLYbDaQTqcx1E3H4/Hcy8jh
dDpBMpn8pLGizGYzqSDharUKJpMJUqmUUOGBV4jFYnj6ZmzEaDLC6cOu0pDs
nhaL5bMTbAoLhQLsdjsinJDbP0H3ce7pOPJ1UeCZTCYD4/EYp6HdbuOafmlV
7qdstVqBz+cDvV5/i0uVv2rMJuN616+zGtxRwvF4hF6vB7lcDqxWK9hsNgiH
w5DNZhkmDPf8H3zC/QOq34Gw\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9m4FNRkRQT7943WKTWGjIxMzMzMYdjSlXzA8WZNZmYRY+gSzXyMDM7
7nv84boGM38GqtQBBibuABDjkToTkyaqnDMTcyGIfqoOtPMmitQeTiaxW///
v2lRBNoZjaptFTOT9f8zjRIgdzKXoMptZmVkYmJiZJIIYGQy/ITmzCaQ3xTb
3mzG5r9d4bXHn/3fo8gkdhDT72BQycw0H4fUTgy/IUAYut8Q4KsVut8QoJ5Z
8zEuOUYmLPEDAUC/LcIlZ87EfByX3BamjJ+45NABAJYuqaw=
               "], {{0, 
               28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1U7Gr2nAQ/sUkVV9inRSR90AndXQSdBKhnQpOOjjJo+AbSqt1ERFRxH9D
cBScdFFUFAQXd9FR0clBBAt2ueYuP0NetWMDFy65777c990vX7LF3Ndv2eLb
a9b3uZD9kXt7/en79L2gvRIFxtgLho9hDlrKby/w6/qbsWfQLkHPVcyZBP1+
HywWC+RyObher+oDSCQSIYgoirBYLB5Ber2eAWm322aIgyAiCIJAkHQ6ze7r
ElSrVWoPhUKw2+2UB5DL5QLRaJRgmUzGDPnIIalUisoY6/X66QFkMBjQIBja
x8wQJ4eUSiViQEir1bKbIJQzBYbDIUqBSqWCpsDhcMAKjEYj8Pv91Op2u2E2
mzGbqd/G7ajX6zfHmH63Ul+z2YTj8fjOUbTMzGHlHIiRZRmtZTSshrrZ7PF4
IJlMGs/hcBjO57P1jsYGnU7HUBuLxUjGcrmEWq2GNPp0kjENRrFYvGeSSbzd
bjfEbzYbTZzuKYpqNBo3c3RW2iPwSyP42ycJEomE8eV8Pi9x6fv9HgKBgMk+
2rdBJd1RyTCdTvF3IDpFUdAeHafVttst8ZkOBvtwt3YHeaKqqmFEPB6HyWSC
JxZOpxOsVisIBoNUczqd+Fu943ni05XLZapz33UJMh3+m1qXywXz+ZyZjVa4
/G63SxvFnYtc/r9Oi8rXrG0fCoUChdfrJbzD4YDxeIzLMbc8/4ecCX8AzXJ9
zw==\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+K4EF1uh2j1itsUmvFmJmA0ANT5lU1EyOTvMlME+7rGHKFTMxiO1//
/3+oFUOqj4lR7BrYZMYd6HLpzFoPwVI8TBMw5JhMQC5drMlk8hpTH4/JTA+Q
SzGk/r8yYWQCQe51WHz3uj8jw56J2QSLFBiYQN2KBbxSwHQjDGgyYQkvCFjL
xHwIh9QXLcYluLQtZhZ7iMshmkwtuLTNZGLGJfXfmCEYp1wrHn2kAQDmpcS7

               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVUz1vwjAQdT4KBQe6MRWRFVaYYWtZOuUXRKgiDFULZWOFFViZYYUZVn4E
rLDCiiq1y/Xu6kQB00qN5Phsv3f3/C558rvB84vfbTV897HjvwWtxrv78NrB
LcsQQuRpuIJiwFC98vDx+SXEPeBj6HGaYmHBYDAA0zTBsixxd+W8XC5TPvA8
7+r5ZDL5g2/D4XCAYrHImH6/n41BpIJMp1OiQy6Xg/1+n7kCOZ1OUCqVwDAM
mM1mcYijIPP5PBQC6/XaiUEySmuoo16vC/38R6vruowZj8cyBskqSKVSYRGk
dbPZpLUb38LxeITRaARBEPCo1WqRMKTHKSmmpLlwmJmgl7OUEhaLRUqjSmg2
m5zZcRxOQf3A+7FA2g8royrUdsm3mE8Y5OKK9hKw2+24KaFflBf5SY1uR+Wp
Odg7O9YMUqSc1Jk3MBwOozsqN4WtRBGd9pfLpUhqFieg3W5HFyPuarUigaai
Y/v5u6aVTpdsd6/XO7O4UChE/tFMlm+32zO+ozpM8i79DWf0Pm5zRokgS6kk
+VWtVrkseYZSztry2+/631gY3xURRNI=\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9uYFWGiGD3H2wynyy5GIHA+Qmm1DVHRkZV1UQ75qLf6FJXAhhF14AY
/Iwz0OVqGTnPAKlfBzgYNdDlTBgi////0As0mHE2mtRWZsapbW2OjJzcjKof
0eT2s4LcqG5/NphxEoYzF+fl5c16//8yI99VbB4Eglc6jAk4pP6XMDLexiF1
Xowx8x8OuWRG/ms4pLayMebjsk2T0eMvdpnvGayss3DouszINBWH1D0Fxj5c
ls1jdPiAS66S9z0uKSwAAJngw3c=
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1kruLIkEQxtuZHc/HqQi60S5MsqhgaGLiA+FukwPByMxBDjQ4PTwTA1MT
0UAQRMHETEyN9Q9QDFxNBCOjTXwEt5yr+113Oyezq+k1VFPT9atvuqrrm5JP
ff+h5NNJRf6aU36m0slf8pdsjh6JOkLIPTOZMB/UVbd7/P6zJ+QOdOlOvon5
REShUIDFYsF6vSa2i/gN2u02dDodQqEQNpuN9QqyXC4hyzLHqtWqFjGryHQ6
5WFBEFCv1y0XiISXlxekUilIksSt2WySzxrOokp5PB4u9fj4iOPxaL6C9Pt9
6PV6jmWzWS1iVZFkMsnDNpsN8/ncdIFImEwmuL295Vg6ncbb2xsxajibKpXP
5znDbLFYXEOen5/h9Xo5kkgktAj3aRM6nQ4ymczZaPnsTVj03D2r1YrZbEYM
mnyD+o6DwYC3jXL0i+16uFwuBINBjMdjxGIxrlGr1S7TTy0TRZ7IHkhAqVQi
nxAOh/mR0WiE2Wzm/sPDA7bbLY1+rEKEz+djE4d4PE4E9YxODSqVCtNSbyai
1WpBXbTTH3VuUCwWz/8djUaiCu73ewyHQxgMBh52u91XriHh6ekJ0WiUM06n
E71ej4qersNenJ03Go13uf+mmU7DuWxqAquXSiqKgkAgwJuUy+Xw+vr6Lt2s
yu92O/j9fphMJip2qjYSiWC1WnFCm3OaVz263S4ffYfDAbvdjnK5jMPhoB2T
u//gE91fGrNhzQ==\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9m4MGZdDsgOIMpc7BQjJkJBO3RZb4EMTIxMpm0rr0WxGSCKnVNC6jD
fieIGcSMKvdAjIGp8BCYBdR/DUXuDDNTLZixFminNpqRPIxL/r86Ux0EtJN7
HZpTWpmYTRSAbgxhQrMNBDRBOmKvrWVkasGQ+3r27Nnr//+bMIVg+hwC+piA
9uIAYszBX3FIrWUUu4ZD6hoP0wQcUq+CmDxwWTaTifk1xGhMuRhYiBhjOoQn
FsrCDJl0phkwVZhy2q9xuQQLAADR0rhj
               "], {{0, 28}, {28, 0}}, {0, 
               255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1UytsAkEQnfvwKXdQh4LkLCBBg2sxNYAEcSENIJoWiiM4sAQJHgseCRos
WDRYaNKa6c7e3mX5tFUlOXZv572ZN29un+x2/fnFbjeqtvXYst/qjeq79fDa
YkeaAgBxeiygPbKt+Ivjx+cXQAzZT3H2IdqDhrVaDVOpFB4OB7j/Ia6qKo5G
IwiIs+l0iuIHvhscipumiZVKxeNkMpmbHEPEy+UyGoaBs9kM/OIsnU7/wtFx
PB5zbZqmkX7fH/Jc2n6/x0KhwKn5fD4sQUwB2Ww2vAOCDIdDU4KEBYSqKIqC
0WiU4IYEiQgIhUhbsVjE0+kUugEZDAa8CGWaTCYyJCgaYExcr9fes91uQZVc
JXqpVIJrroGJRMJLTys5zKbC+3MboPNerwd3Et+Zmon9ft9zmGpZluW9i7py
XE7hDDHiWSk65GOhCaxWK+x0Ot4kZInsIwhepdI5xa3c7XZ9wiBqxLWaQuxz
hmu6H3e7HcfRjSBcs9nE5XKpizQUJjGuECbc8eHMkwBvKJlMeuVozeVyOJ/P
QRdzoTzCk7MczlzCeDwez2q5K3lMnlNLVMc15zKPc9NCuFgseBty+5cr0ya7
YQqJ1C4Zyi44k53NZtkZvbs3xy9xYv+wB+UbxEimEw==\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x964N9SBkaG+VilnpcwAQHHAmxSOkwSlZ+bWAKwyFkzaTwFUgcuoIn/
PvTqvIDOYxDz4xEvwzfIck+99kuyHQAzo4B23kbVGck0F0Tds2TW5UWXE2V6
8P//pwOsTAaXRTDlYn+WKTGxhj3bwCT/ClUuG+Q3nrir///PZnJFc+nPdSkp
E66BWJ4YcnDwVoFpNS65+0ycJ3HJ1TGJ4ZL6X8FkhlPOlakOp5wA0xFcUptY
mJ7hklvGZPwVtxy2uCURAADUq8P5
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJylU89LYlEUvs/3/PFKZ1yYJEwkrVwUJEEgrp0hYcBVoGAgOVDIMEMjkRsX
/gXuI2qjG0HEf0CJNq4MIjdBCaKC5ELFAUfom3ePt6HJN23mwb3vvPt95zvn
nnfO51jy4MvXWPJwP+b+dBT7fnC4/8P98duRdiRLjLEVvtyM29BMsa3g5+QX
Yx+gPdK8/Z7bTEY+n4fBYEAoFGILc7jyB9/a2sJ4PFZ1KOVyGYqiEK3T6byk
2EUUu91O8NXVFdPDA4EA4el0Whc/OTkhfHt7WxfX/Ah3Op06uIKHhwfCVVVF
rVaz6FD6/T7cbjfRCoXCS4qZKCZMJhMUi0XE43Fa2WwWjUZDEUns7OyQt3YZ
Nu8uI5FIEK4tNttlWK1W7O3t4fb2Vjub8U5PT9/QeYelpSXCo9EopXR8fIy1
tTU6MxqN2N3d5f8BpVKJzlZXV9Hr9cw6KT1LNZtNEV7FcDhEtVolKY5tbm7i
5uYGDoeDvu/u7pieVjgcJvzs7IzNSmLG/f09fD4fZFnGxsYGbDabroZRVLjd
biMYDKJSqcDlcsFkMvFcZrARkUjkuYJvyJgxnU5xeXnJb416vU7tt76+jlar
JVIzYjAY8HakcF6vF4+Pj39pqaIv/H4/xfJ4PDw9WdyWV+j6+lrU7LWbim63
SyG56/LyMlKpFEajETKZDA3L63lbELrcL5lMivaY7RaLBRcXF3OxFkXVnp6e
kMvl+NxDkiR6n5+fL/5j9P/HZtJvErSLMQ==\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9e4EZvti5TzkdsUvsFmJmZmJndMSW/zeJg5nBpaCxnXoAu9d6ViVlp
LpDxwzoIXS6dmUntEZgVxqzt/w3FGUxMtiD6+5VsJiZGplfIcg3Mak+AVLcZ
M7NEOBMzitxWZu4QQ3FxNlaJxvdTmMy+oDhFAuR8Yaed///vFOC5gOqWx3U5
OQsfQNyig833IDCLSfgSLjlx5hxcUitYOC7gkHokztyBUxsz9zkcUgcZmPbh
0lbEJI81+oBgN5v4alzawph7cEn9D4vGKYUBAHPnus8=
               "], {{0, 28}, {28,
                0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1U7+PoWEQfj+fX7vsnURBsRui0KDQbCMa4VQXiQiFSjYXu+FyF7eJTugk
6FQSCZ1ErRAJ8Q+IiEIpqDQiEdw1c++Mz+Zb68qTvIyZZ56Zed55vyZen799
T7y+PCWswUzi5/PL0y/rlx8Z7hIFxtgDHitDG7gpfT3A/vcfxu6Bf4STrUeb
iRCNRiEej9O/u3/ERVGEcrl8Ja6EXq8HarUaTCYTtNttvQxyJ0EymQwoFAqw
WCyw3W51VyDD4RA7JVi/35dDPkmQVqtFjeh0OhiNRrdXIIvFgvpAWLFYlEM+
y1iUSiVotVoYj8c3MohBmvjMkE6n2ce4Emq1GvVpNBphMploZRANQdSwXC4h
l8shBZ1mswnz+Vx5oanT6WTydLVUYbPZgNlsJowCS3GDp2FBn88H3W6XKSQo
t8FgMIBer8d5NB/YVNDpdN6Ei0Qi4Ha7eTqfkk+HN6dSqahaoVCgytVqleZ7
fHyE3W534rnoMJ/PE6fdbofVaiWS+wZKpRKlYQgP0sZiMZBmgPV6fZVuNpsR
Bo/X6z3rdDgcYDqdQiqVYhTkPkEQCHZJpZGmTSaTZ92oO74T3HuKnXV3OBwQ
CoVgv99f4VCTCoFA4K1tm80G9XpdlNo6Ho/g8XggHA6/WxC6SqZDWloS3DFM
x1+/30+iocjZbJb8jUbjXf6t1OZgMKA7PauIg593IBgM4hsipHx16MXwAVDJ
SqWCkoHL5aIRcAN5DpO/h/v/YDPhL9jXglU=\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x924GZenJLJcqxSD+2YmBiZRE9gynxpEmLije2bryH8DUPOk4nR9CSQ
/mB7BF2qlpExHlMDGKxjYZ8KpO6WlG7GkBNiyvv/7WURPyOTFoYcI5Nzgi4H
yJ2xGHKr2BkZGdULVzPKv0OX2v3/Zs+6F1/+T2R0xO6e//8X8Cs+wiH1zoIp
A5e2EkZpXFInRNjn4pIzAfoRB6hkdPuEQ+qHMUMPLm1bmSze4JJrZlqNS+p/
oBtOKUwAAJZyy7k=
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1Uj2vYVEUPbgPbzxP4qPyXnw0RKJCoiERiYliCj/AV14m8Yoxw1AoNLQi
USiFTkKiEZVWwU9QKKhIREREzDRrnP2uyc3Qzk3OvfuevdbZa6+zv6QLma/f
0oX3t7T1cz79I/P+9tMa+Z6/bClkjLFXvqyMx7iE4usVp1+/GXvB5ZF9xBoe
MwVisRgikQj9Pd/JV6tVyOVy9Pv9O3kBo9GI8n6/H9vtVnsHcj6f4fF4uBTU
ajUp5EmElEolyGQyUnI4HJ4kEK0oxOv1UqFsNstu8wKm0ymMRiNUKhVarZZG
AnkWjygUClTFbDaz27yA3W5HffAymUzmkwSiEyGdTgc6nQ42mw2r1epRAlET
RIPxeMwjzOdz3i4GgwHW6zWOxyPtNxoNUhEKhZiU/yiq7PV61MQFw+T0VsLh
cCCXy/FbIK7FYuFq1Td0JaV5A+FwGKlUCm63G2q1Ws43L6df0/F4nN3SNdDr
9VebSe3pdMJms0E+n6fGr3yXy3WHL1C3giBQB81mUyFuLxYLsr9YLGI4HEqZ
ZDN7QLlcptP5SiaTvDK7HacHRKNRUsBxPp8Ps9mMKUTv9vs9AoEAJpPJxYp/
uRq6g0ql8rdLrVbLnUC9Xke73YbT6YTBYKDaUv7HkKmxXC4RDAaJe9XAvyaT
iQ+g6maolDQG3MxEIgG73U5z3O12pQ68/IeYyf4A/x9TyQ==\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9m4Fg1OwMTE1PpNwyZHy1CzMxMzECg9BhN6oQ7UFRt/vz5/vLM51Gl
jksxM0ev/g1ivg64gSoXxiyy8Ct2Z7zVY14OY5/adg5F7qEQ82Ew49uqKAHm
CBS5n97MDvMO/180Qxnk0FZUQzuBQjxSLBA/PEGV+3O9xqmmpubLHWZm2+/Y
3bTTlCn6DnapdabMbJuxS73nYRJai13qjS2zdAN2qf8ezMyLcUjN5mbejUuK
h7n5D3apU9zMzb+xS70yxyn1P4bZA4eB2AEAW2u5PA==
               "], {{0, 28}, {28,
                0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1k89LokEYx0ffN7W0EvGkhVLQ0Zt4CqRDCrLoKaS8SCzUYdmlzZMeBPXg
fxAIhnoQFL0EgXgUNDrk0Q5dIk+lePHnFnz3nXlH09zrDszwMPOZ7/Nr5lvw
8uz7j+Dl+WnQ6roI/jo7P/1tPfx5IW0JCkLINp1WQm1IJl+2MZz8IWQL0lDI
tobaREQgEIAgCHC73fj4+NAvISt4fX2Fw+FgWCwWw/v7O9mc41Y5d39/D61W
u8BtzHFrnEulUtDpdDNOckvW5zgtD41yU71qtTqP6DhCo6bHdOZyOd0SsoJO
p4P9/X2GmM1mRKNR2QPn1jnX6/VYVEqlEgaDAaVSSY6YcxucK5fLsNvtTE+l
UuHm5kauAOc2OVepVBhH9U5OTvD09CRX9EsDpOzRarUQiURwcHAgUIOo0O/3
6ZVZdjSF0WikXlLQIJlMzjA6aRYmkwmiKFLvIt0kAnZ2dtBut3l4nzJMUkp1
MpnA4/EwCafTiXQ6jVqtRk+RzWZxdXWF3d3dqVwikQAfUhZf5UQ8Pz+zOlI5
SYZ5lPIaDocoFAo4Pj6GXq9nx36/X/UPhW63C5vNxpB8Pi+nK7Bndnt7i4eH
B6JaKscKjo6O2BWj0YhMJoPBYLDwXGVOjUajwco0LRttUrFYZM9W5L7e3t7g
8/nw+Pi44GuVn9/d3cHlcrGSKNmqwd7eHq6vr2fT6/XCYrEwH81mc15mjcuM
x2PE43FaLy4jsHfDQ5vt0Ra+vLwstXD6Her1OsLhMNRqNf34TERaQ6EQq7vc
gc9rW//BJoq/ReWZlQ==\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9+4G2WNCOj7lssMlf61RiZgED1PLrMp5mOTExiVg1p4ozxaFJPVJiY
3FeDmWprUKVOSjEGLfj4///tU0BbUaV+uzMuA9HfTcUwnPGSiQlEbTdlSseQ
e83J9HJmvSUrI9NWTPcXMAGdL6TOIP4eU+5mTnZO6f1MxnWYUhCwj1HrCS65
2Uw4pb5oM+GS+r+IyROnnLr5M1xSOYyOuKQ+aDPhlLNjYl6JS46RKQ6X1DLG
oIe45DABAK1qykI=
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1UjuLGmEU/XRmNnE3uwELBd0FCx+gbCmihWATsUjjD1Bkia6PENmstf4D
a7ERC0EUO7Gz18bGRixEEEFEfCCRxOJk5s640dU2AzNz+c459557v/s18vr8
7XvkNf4UMflfIunn+NNP05cfL+IRp2KMPUiviUkxxFD5PODX7z+M3UN8VHJ8
LcWMR6VSgUqlQjAYxHg8vjui3BCFI1itViMUCrFznIfX6yWc4zhUq9XbC5TV
agWHw0E0n893TPmkVEmlUlRJhNkxfqvgNpsNLpcL0+lU1rzDy+UypQ8EAhfx
7XZ7sHCC3yl4sVgk/WQykW2f4Dza7Tb5s9vtEuf6iKIhigaDwYDaSCaT9M9k
MhiNRojH4yRtNBrsXMchnU5TaZHD1GRQgFarpZal69Pr9VgulzJf0X4k7Q3m
8zk0Gg3pZ7MZCoUCstks3G43BEF4u7xms3lBz5FGwqWqvNJqq9WC0+mk81gs
di7jsd/v4ff7Kb24QrySbbfbkVKn051Ukzu9QqfTgcFgeNu4UqmE9XqtJljA
cDhEt9vF4VksFqLo/dJeSfOH2Ww+GCcntVpNUFxYrVbU63XF6vlCbzYbmpO0
anLnHyTH8Hg8yOVyiEajNHPJZTgcZsLZOvHo9/vI5/NUS+TxlIaDxWJBr9c7
K/1ZKS12hEQiAaPRyOQL5/D4+Ejn8gz+ae7/Q8xUfwG1rl88\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9e4FM9EwMTU/EyTJkX9XzMzEzMzMxsBzDkZgCFmfUsgcRedKmXBswu
N268erdLAlNuDzPzov//79upYNEHlGs45AqUYQ58h0UOCERZma0wpP4/a5OT
k0tt5GBOxOXFNmbmG7jkHJlN32CX+dHGwPQUh67vpkw2n3HI/fJj0n6PQ+4j
M9N0XEbmMCt9wyHXyMxchUPqfzwzcx8ul4QxM+PSdg0YzLjluI7jksMEALaP
vrE=
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1kjFrwkAUx8+kSdO0zSY4WBFxE8TFQRFB0Haq4OIqoQgtWFpqJxd1cXTV
2cEPIQri4jcQNydFRRQV1Lq85p4XiTXt1sAdj/P3/93zcY/q53P6Vf18eVKd
Dx/q+/PLU9Z5//ahHfEWQsgdXU5Ca9BKtt3B5mtPiB20z3KoZVqTC+j1esDz
PMiyDN1uV/kDoSuRSJgh+/0eksmkjhmRa4akUqmjpVwu35ogxWLxiORyuXNE
gO12C5lMBhGXywWbzYbcGLgbploul8hwHAeVSuUcEbDneDyOiMfjgcVicbjm
B0ev9Pv9yIVCIViv16bcbreDUqlEJ47scDg84RTWWiQSwdaoczabySYI1eiD
6Pf7RkRChIfRaISYw+EgHO4CpNNpnKEkSRhVVZWYZZvNpq4nh10Aq9UKgiDg
eTAYhPl8Tq7OspfGLBQKBeh0OhCLxcDtdhPdqD0SmmeJn46LE0etVuNYW4PB
AMLhMKo4pmq1WsA+IpqoJpMJ+Hw+VEWjUY6OSwOn0yl20Gg0wGaz4c+aSjIY
rtit1Wr1OAz9Vq/XC4FA4OTst050z3g8hnw+D4qisIyIz0D/o3SJogjtdtvY
hv72V6sVxmlEe0EcLTRrNpuFer2OkDFm/4eaWL4Bz4lgUw==\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9u4HM9IwOjbcsPLFK/g5jAYDmm1CMfoLh+jhwWuYfqTPqei7/8rw9/
gSE3hYnrEJC6LluPaWQyk/f/Z1OmyDDJY8pFMHlZcAFtFPiKKTePGexInxNY
fPA/R1uFiSnwGzYpIGhiEnmAQ+qEOFMxDqlfwkwmWNwBBkeYmFbg0sbHlP4X
h9wUJoEbOKT+uzOl45Lax8W8BpecBxMHLqn/BnjlynDKYQEAWULG9Q==
               "], {{
               0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1Uz2LIkEQ7XFczlXXExRMHDUQDAw0MDAxXT8v0ERTkcNd8NhlXUwF8ScY
mxho4G8wEAP/gYZqIOZ+4Cnyrrvs5WbPYbNr6Jmi6r3X1a9mfpTfn37+Kr8/
V8qB5Fv59em5Ug88vrzxlKowxjSxA0zE4KF8aDj8PjHmBV/KNb4XMVMRjUZh
MpnQaDSY84u6xWIxrKdSqS/qZoxGI1itVqiqiuFw+F0HsUqJZDJJEtVqld3W
zeh0OlR3Op2Yz+eOG8gdTqcTHA7Hhwwulwt70OFsUmoymRBG7MFgcAu5Srlc
LoLEYjHs93tm1+HsUmo6ncLj8RCuXq/rIQ8S0mq1qOx2u7FYLGw3p6mo1WoI
h8MIBoOM2uK5fD6Pw+FAiHsDv7rdLtkp0GbJyeVy1JFAWAwMKpVK1Eomk0E8
HhcjYarkCl/5LQn5zYBbqVSIm81mRQbr9Zr3yqfCuV6vl2p+v9/g3L+zE5/A
eDxW5RVmsxk0TUOz2TSg2bBcLhEKhYgaiUSQTqfR6/Ww2+2oBc5DsVjEZrP5
1PKHravViiwRF7zaekc6wm6fz0e6/X7/E9cuuefzGYVCQbKuFnEs5OK5fydt
wXa7pZ4URRF/HL0TiQTa7TaOx6P+GO9/iJnyB0ZOPY4=\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+C4FOfPxNTLlapudLMTMzMbHLnMWSeTudnBskxMxdjyNWDhGNXr/bG
lNsA1CLcD2Q8wpB7xMSgUXwBooqB6TiKXCqzxj0o8zwT8wlkqc2icJNeyDCJ
XUGWs2JmvgCVqmFmyviPKhcENVCGmdnxM4qcJRNTbx8QMDABQdF/NH0QbzP5
izEzf0CVu5IClNO3sTn+TI8ZTdv//19Xr179BkjPYha7hS4HA3LMCrikepmY
VuOS62M2+4ZLTpE5GpfUf7SgRAYb8MiRAAAsGKhh
               "], {{0, 28}, {28, 
               0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVVD+LGkEUH3e9NZdLYiHa6MnaWWknKDY2SSFBsBULOYW9QhLWKwU/gVoK
gp/ARvBDaKeFlYWFoFhYiKJw17zMe84Oc3GTkIFZHu/3fu//7PfKi1WrV16e
nyrmN7vy03p+aphff9hcpXsYY494TYYycFF8HuHy+sZYBPjx3MqfUWZeGI1G
oGka6LoO0+n0QTH5Qia6CjM3PBaLEV4qlVxwL3Q6HcJTqRRcLpePLibtdpvC
4B0Oh6qJX0SJRqPkxTRNpuI+wu/gfD4jVd79fs9ZV/f9fp+4oVAIlsvlvUI3
yMSAxWIB1WqVzJyCk8mkBtlslnufTCaw3W4hkUgQZNs2u3XjhUwmQ7hw40VB
tLBQKGACTBO6w+EA4lzpv7lKp9OyJ7w/1EdOw9kKNbt+KZu/uNJlVsViURY8
m80gEonIbHO5HJxOJ98/iprP54bo+G63g2azKVtmWRZzo4/HYwgGg2TXaDR8
Ch0TQCoOhk/gXfI+Qa/VakSNx+OwWq0cNeavbOYt04D1ek0m2DJk8+CY/52y
+k43+XxVDx+EB/V14A0EAtDtdnXRVwwgqrpSBP1e4K1Wy6GKsRtQLpfljubz
eYfvRt9sNtDr9cDv98utUbKROqzLbfwPotDBYADhcNgZlEMzDINeFe/ku+w/
ifDH45HeLl9cuWn1el2GUjl/+s38r8w8vwC3nZsM\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9+oM2fqbjtPqb4uynu/EzMQMCzGV3qdQdQGCzHbIkm9dIFJMqkGmzF
zKyNJuXKzOc2+dSpB/+7mZn9UeUmMfPNgxitxMx3AFVOi9kPTN9wgimCg8OC
zHv////7ZAkHM08UmksWMjNvnpqbDnLnAnQPLGSGACZm0zcYHtdkYmLib/jP
wJSAIfX/y6dPn778r2cyeIUpBwaf+JnycEj9b2Bmmo5LLpeZ6RNuOemvOKSu
qzD34ZB6qsrMjMvEa8ws4bjlcEphAgDDTq4C
               "], {{0, 28}, {28, 0}}, {
               0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1kjuLIkEQx1tndtfXKsbugogGamJioKH4iE4DA8FIWQ53A71j3VwjEQQD
H5iJgt/AWBDM/ABqpoEGPjAQPbgDqZsue8YRh8uuoYeaqt+/uquqv6W/3r9n
018fb2lr5DP98/3jLW8N//gUXJyKEPJKt5VQGwSTfV7h1+8/hLyAsFQXW09t
wsFkMgGO4yCRSBDjXZyX4jzPU+ZZAVmtVuBwOBATthwxMGQ6nYLdbkekWq0a
ZMgzQ7LZLIYtFgucTif9PxC1Wg2Hw0EJKRaLEtJqtZQQQQkmkwmRXC4nRzSI
6OB4PCImbvpPV6FQQJnH44HNZqNTkDqdTkTETU+il8KwMArqS6VScukTG0W3
2xV7SB7wyyNOfV6vF3a7nfZOppXLoN/vQ7PZxE5lMhmxFQSTCEd0Oh1g66K/
ycXDaDQCs9mMusFgoGbg+XyG5XIJvV4PNBoNhg0GAySTyUvhN03gwOVyIRON
RoVKqO8BZrMZBAIB9BuNRmi32zdX0LAr1Go1OSPKt9st2Gw2KTQcDsnjnfwR
1us1hEIhiQuHw1Cv19UwHo+Fmy0WC6y+UqlITYnFYlJTeFlKLauGpgwGg4y+
zoW++Xg8Dn6/X0zldrsVU+lYKlpFuVxGWtSII76m58Dn8ynm0bNu7Pd7aDQa
EIlExLcscBctHQx9BxfyqjWxDpVKJSyZnpvP5/F/Pp/LZ/HyH2yi+gtmmZUq
\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+KoN6BAYfT94NlGBj2Y0pBZICkA4amerAM0FwMOah5DmAVaDZCbALK
1WMaCnbC/v0Qa+sxHAKU2A8xHNWh+2GK6zGkgI5jgPsD3Xv1MGdg8d3/egY4
wJCDSGLxAIoKdOvgAI+2/XgSF8g6XGZijzyCRoLk6nFJkgAA1BeWXQ==
               "], {{
               0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVVMFOwzAMdZumDdvYFzCpn9ITnPiIakLaDgg0du+n9a+Q2CWzE6e4iTkQ
Ka0VPb/n57h9Ha+nt/fxej6O/ctl/Dydj1/988cFj0wFAAfaPVDsMeTHwX//
3ACePK6qjHcUg/XzPHvOCXuaJtgWuCbH7QTkkWITVE3A8YKHHIR6wzAsPBQj
HjYFrtCTJe0prlmPODS9PfOgn4UHOaWUCxAjIRBpbTjLSl2V2Sm5jp4S1Co1
IFEdmmwkP2h2XEG11rNKS9nmqhWpDNlS5EnpuVVKd4XVJsfUYoDSopg6ldzI
YbA5ZZyYZgHRG7dR5LDELk/vOJ1wZIFtaI0spLk0lkCS3xxucDyTok4kJlC0
0Eqx5YbwTHZxw+ny0o2wIOZDpm2Vcq3S3bb4hIy82Cglh+Kv/8J/Y6jugG1o
ig==\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9u4H6tHAODdu0bLFILVZjAwOATusyfWSpMbCIiIqxMTM/RpH63MzHp
b1j/9r+jIPdLNLnJQKnbLZLOP//fOoyuLYxJdoMnExPvVUx3PGNiEpAFusMH
ixufQZyIVe61OBO3VRZ2uf9Xdx//v4KJKRubHAh4M5l9xCH1wQy3trNMTIdw
yaUxiV/DJRfI5IBL6q0RUyEuuflMktdxSN3hYLLCpe0mEz45KVxGYgEAur69
hw==
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1k72PYVEYxg/m3jHL3ZBIhMwVhU5BFAoVkexGmEKjl8nKDNnsmp1WJ/EH
6DSi09HrKFRKxEeiI4IExSaW5NlzjkvuGplMsye5N2/O+3ver/veh+Tr07fv
ydfnx6Tz60vy59Pz4y/nlx8v9EqnIYTI7HESZoOaykvG790fQu5Bj+Zof2I2
ucFgMIBWq4Xdbke/3//8DsKeQCBwDRmPx9Dr9dcQg4KUy2XuttlsLJF0BVmt
VvD5fBzLZrNqxMgRHeLxOHcHg0Hy1n+DVCrF/VarFb1ez3gF6XQ653aazeY1
ZL1ew+/3cySTyagRSUGi0Sh3M2yz2RhUyB1HBHS7XTQaDbTbbXaDarVKeFra
B40K5Rx5RavnNyIWiwXvgaUwGAxsqEin0yd5LBZ7R67DdDo99UgL+YhGUGtg
MpkgyzJVfUQrYr/fI5FIcC3VoV6vIxKJnMqVJIlP41J+nJQRxWLxnNrj8WA0
GiGfz/NdCYfD2O12PPdwOESr1bp9E0LiFRQKhX/CsCpqtRrfK3ZCoRDMZjMf
6Hw+p3VfbrKAw+GAUqkEl8vF44iiSBuwWCz0mwuCcI4/m83U8tN+ViqVk/Q8
eK/Xi+12qyS4XCUdJpMJcrkcHA4H3Q/2w+rgdrv53XK5JOp27/+DTTR/AQJ0
bjA=\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+S4JEqA2PoeWwydzPYmIBAHovUYlUmJslCNSYZTKkNrExMAWf+f5pR
hSF1W41J7sSP//9XSi/HkDNkkjsHpJbzMM1Dl7onzlTz//9rH14m3n3ockZM
TBM99VSAzuzFMFKaCQaWYMjN4GJiEnF2FmHi2YPphWP79l38f1mEyR1TCgLS
mJSf45D6bMZkgEvbXiamNlxya5hUHuOQ+m7KhBmWUJDFxGSGS86Uiakeh9Qf
YyalezjkNjCpLMBlJEkAABACuhg=
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVk7+LGkEUx2dX3Tt1N5Ugoqfir1L8gf4DwolgwMY/QI6IJ4TEy1Ui2NlZ
2FmJoCCChX+AWoqFKGIpWmhhYacQTRBeZub2hk3WBLIws483n+97b97MfMy8
5j59zrw+P2Wc8ZfM19zz0zfn45cX7NJwCKEHMpyI2IBNeXqA7z9+ImQD/HFq
20hspIV+vw88z4PH44FmsympEB1cr1cIh8MUc7lcsNlskKjgRDlUJBKhDBnl
cvkWks/nGRKNRm8h5/OZRSoWi0pEkpFer8dq3u12xhvIcDhkiSqVyi3kdDqR
GigSCASUyAcZyWazdNntdsN+vzcoED1F9DAej2E0GtGxWCyIF5bLJZhMJiqN
x+NIqbuXm1qv18FgMLAiMY94iMViOO27VhRFGAwGepVcA1ar9V2K7uisgXa7
DfKHfX9q7iAUCrF0tVoNEokE+P1+0kasfotRrVb/EUNLzh7MZjONUSqVeOoW
4HA4QDKZBEmS6BL5447cqxqmhWAwSBG73Q6z2UwjuzudDt0vWWo0GmqlAKvV
Cnw+H1NPJhO4XC683JJut0vbgiMhpZx2H8/kput0OtaCVCoF0+mU7vV4PNIT
wRdOKTXKh9xqtcDr9TKpxWKBQqHAqrHZbL+lFOWS1us15HI5EAQBb/Gtww6H
g3VYUN05AbbbLc1F3jDHcZBOp2E+nyvD/+1N/6+NuF+YLWOe\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+i4MMOKwbxmZjiv293pAoxAYEzhtSTeiYI4MlGl3qozsRkkrsPCE6h
S93XYmLy/fj/7rLLmJaVMrGs+/L/fz5TEIbUDhamTf//3dVgZmrEkHNiYvry
sQvkkF/Y5KK1gVKCBzCtW8IDcX8iptT//0v9/f2BmndjkwOBIibnHzikXnIx
NeHSVszEchyH1FsDJm9c2nKZmDbjkuNhUniFWw4zKKFgETPTQlxyP3j8cXmO
RAAAW7+9wQ==
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJylk7FrwkAUxk8TxcZYqotLC9kUXRycHBXaQURwdQpFaBGxRJ1FJ/E/cFTU
0UEXQRA3wdVRRAQXBUFBilXwNXdeQiSxSw8uPPJ+372XL+9iYv4jlRHzn++i
8CaJXx+f7znhNSvJrxgTQugFbwHhGOSQPl7g++eE0DPIy6SPORwjFo7HI/A8
D/F4HMePBkij0QCGYcBsNkO9XtcidoIw5AScTiQSSJ9n1bwgCLDZbBwGSCaT
IQjevV7PCNlutxAIBAgSjUa1CE+RXC5H0izLwng85g2Q9XoNHMcRrFwuaxEH
RSRJIulIJIJNsWuQB4JYoNVqEc+UHQ6HEWledmMwGABdV55qbdStZrOpOCKf
dNWIoviHxoLPV+1JJpPg9/sRQ7VOpxNGo9EdrfVGezgcYL/fQ7VaVeS4ldPp
RGCbTm6Hfr9P/MTybrdLerxcLjCfz8Hr9aqzUSqVbsorVhUKBfWfdDod3IJs
1dWKbDarDo5ey8FisQCfz6e2H4vFSPt44frtdhum06lWytGvXi6X4PF4VGkw
GMRDxsJwOJQrTyYT1XCLwUivVisoFovEI6vGqXQ6rdPw9M35fIbZbAaVSgVS
qRS4XC7EUi2eJaUeq9E+0XZ3ux1xOhQK4QsMbrcbarWa9c79/U+MTL8Ta3CI
\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+C4N+jFEZGhtwv2OQWMIFBCabMm+msQAlpJiY+TLkWJiaOmH2LscnN
5mIKX/D/fwcTkzm61HlOJv0f//8/U2Zi2oom9daAKRwo9VyXiYnlF5rcbSam
6P+fl2gzMXFvQzcSKKccb4jdB49FIX5jsviE6YPruf7+/tFMTCsxpSCgkInp
CA6pPw5MFj9xyG1jYtmCy0geJm0Y8zia1GsuhBw6KGNiasAh9VCUyfo1Drll
TEz9uIxcxlR8GJccaQAAAZi0XQ==
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVlD+sIUEcx2fXrrf+PJ3KvUSiFEFFolHdVRelgkTkecl7hdx5NmqFQqdU
aCREokepIVEqFSokFGiQCyJ+b2bMTlbWXXKT7OS3s5/vd7/7m+FnWn1/y6bV
j9e0+8dn+vf7x2ve/f3XJ14yCQihF3K5EakBl2x6gT+nM0LfAA/BWFtJjSRo
tVogiiLk83kYDAaOfyDkqlQqRkSG2WwGTqeTIpFIBNbrNXrWcTZmVSgUuFWx
WHyEYClYrVaKeL1ePWKniAnsdrv2GClsbTQaARtINGgk6PV6VCNJEnQ6HbsB
keFyuUA0GqVYOByG0+l0S8W4Z2aVy+X4RwyHQz2ipZlMJpDNZiEWi+E0ZJYg
kUhwWbvd1suemGyxWGhtRGY6m2iS3W5HCYtBY4bpdMptPR4PpFIpCAaDEpOr
qsr7ohjkyp2cJCRjv99Ds9kk/RWZjc1moy18bCPDdruFQCBAbeLxOByPx9s2
4ISr1Qp8Ph9/DdmC8/mst1GYzXg8BovFQjG/36+zkWG5XNIP1Gy63e5dFAvj
arUaP0AkSr1eZx4SlMtlrg+FQnr57Sg/QalU4oiiKJBMJqHf70Oj0UBaNxwO
B2+q2eBhgs1mA9VqFWRZxndEI4HL5eK+WK9/tXaucVINQY/2z/xAc71eYT6f
QyaTwfEEQcBr5OdPTt/hcLjr0N/+C/63RsIX8uiA/w==\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9u4E8tAyOD1i4sMh82ezOBQAem1HEXJgjoxpDq5WFi0izu5GBimvsR
Xc6JSW3fz1OOII3rMOTYD1xs4AZJCV/BkON6Uw+xby6GfU5MmWADmYr+YJFj
YmIOl2Gy/43phV2aPBYLPmuz7caU+v//GdAJxUzi2KRA4G8okz8uuXdMTM24
5I7gkfNkMv6MS06MKQ6X1DZWnHI/Upn0nuKQO8fEtBiXkeeYOE/hksMAAFxE
tOA=
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1kz+L4kAYxif+iSZxK0EbF6wEFWxs7ESRO0QOK7ETZBE2xXGHbisKNor4
EQTB3kawUBALQbAQBL+CViKKcOiqPJuZTTyPhLvqBiZ5k/k9L+/zzsy3/Ntr
4Xv+TX7Je78W8z9f5ZeS98uPovLLzBFCnun0EhpDCdXHM36d3wnxQBncZyzR
mFiwWCxgMpkgCALm8/nTXxA6u92uHrHidDqhUCgwJBQKYb1eE8cD51BTDQYD
WK1WxuVyuUeEpSVmuFwubZno1y1IJpNsPRwO43g8SgbIdDq9F1yr1YyQ3W73
L+R2uyGTyTAknU4/IiJDbNhsNlitVtBGqVRiuNvtJo+8wHgBw+EQfr8fDocD
kUgEnU6HekAwGATP8xiNRp+5/9CJiMfj92rpNJvNyGaz8Hg87DsajeJyuQg6
qeUulWUZsViMtV7pcrFYxPV6VX0Yy0RRxHa7RaVS4VVZu93WvBJeJ+OZzGaz
YTKZYLlcolqtQpIkiyp3Op1avwzktnuxPp8P4/EY5/OZHkpaONFy9Hq9ewlW
XQ47Wq0W66/WK9pvui+NRgN2u9304ORwOOhKEdVjOJvNkEgkGK25bzabhu4l
VbPf79Hv95FKpYjW6Hq9bqh5Ui3TTSiXy/SeguM49g4EAvSoKGZ+857/EBPu
A5ooa1Q=\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x924EWnDSNjxTNsUl1CTCBwElNmiwUnWIpJcTq61GxmsLgckFB6hSLz
q0sTKGi69s4xkOb5yFJfWoEifPWP//+rATKkbyDL2TMxubZ8AjJ+gAwuQpaq
ZGbi/wNirGBnYlK78xdJagUbk+LDpUDQzQ2Uuo3ikB28TBx6EPezuN9Bc/8c
XpC4LlCXMqa/dy+LWbbsjQ6TyFxMOTBYyMS0DIfUfxkmyYu45YxwSc1nZYrH
IXVPmcniAw65WiamWFxGAuUu4JYzfolLDhMAAJLInQA=
               "], {{0, 28}, {28,
                0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1Uz1rIlEUfTqOH2s0IDYhRowBQUgsFMFCsEqs9h9ERMJCUiy7uCkMKDZJ
kfgDLKKIhWJjZyHYC3axE5RACIgJFiKyZCXx7JvnczLuhN1qB2a4M/ecc8+9
983nxPnpl6+J87OThCuaTHw/PTv54Tr6lqSfBA0hZEe6XUSKQUP+2MHPX3NC
HKCXZhl/kmKiQyaTgVarRSAQwNPTk/UvEOm+u7v7FyQWi6khIu7v77G3t8cg
oVAIk8mEWBQ4M5cqlUoQRZHh4vG4ErLBIAIcDgdL+/1+os7r5PzW1ha63e7G
B5ByuSwbrlarSoiBV2m1WlIKx8fHhIFoE+PxGPv7+4xmt9tRLBaXxjlXz7mF
QgEWi0XC0TfpKeLg4ABms1kuS4exxhX5oJrN5ooLo9EIn89HdZdKOp0O0WgU
g8GAmD7g1mo16PUMjd3dXTw8PNBmK5UKVcjlcmv1PR4P+v2+UWVfxMXFBQSB
Gcfm5iZeX1+pjJQzsBIGg2FNhtrB29vbkr82Rj0ikYiMPTw8xOXlJabTqcAn
9fLyskoTLe8ymUyCX8uyf2xmNpvh6upKwdHDarUim83i8fGREReLBdLptMAl
t7e30ev1VJJGLjmfz3FzcwOv1ysvLBgMol6vs+7a7TZMJhNZ6UmndGVRUJ12
Abe3t6sJyhxpIU6nc61Vt9uN5+dnlS8z12k0GuxvkWrrFTr5fJ7v6p1j4Ryp
D5vNxtA6zul0OrJfJcfKOaPRCNfX1wiHw9SbRqOh31KpFIbDId/jO8fxH2Ki
+Q1p6ZF2\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9u4MqW1BQBRgaFuxgyv9t4mNiUFQv4mNrRpb5HMDE5bv//exGPwTJ0
uZVMvOv+/f9/gKnsK7rUaU6LayB6M1M9hm0NgkAXvH24SI6J7ya6XBFX36o4
OSYgEHmFLndXj4lJwLZ3MhPTekzP/Thy5Nb/6yFMsT8w5UDgrDiTyl/sUuvE
mUyeYJc6J84UfQe71H83psjvOKRWscncxiF1i5N1Hw6p52FM/Tik/tcz6ePw
2P8zojw7cWkrY8rCJfVfxfYnTjlsAACPtso+
               "], {{0, 28}, {28, 0}}, {
               0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1k7trYlEQxq/P6I0aBcXGiJLU0cLCJoWNW20nooiCRCERlhU32GqlVWLh
f2AhxEKLBMRGLOx8VKL4KoRAIJDSVTfEb+85HsINuuUeODKc+c3cmW/G79Hb
6/iP6O3NVdT2LRVNXt9c/bJ5f6aEJ5mE47hTcm0csSGY7OcUvzd/OM4C4Uh2
torYnAzn5+e4vLzEZrPhDAf86XQaUqkUiUTigF+ObrcLk8kEjUaDRqOhFyFq
hmQyGZrC4XBgvV6fHEBeXl7g9/spVigUxAjPkMlkArVaDYVCgWazqRMhxwyp
VCpQKpWwWCyYTqdaEaJhiNfrpR8JBoNYrVaaPUSBfr8Ps9lMsVAohNlstvsC
47SMq1arn5zL5cLz8/OuWMbpGNfr9T45ovbHx8eu7y8N8kQatNttekmz5IxG
I/h8PhobDocJo9qTT4X5fI6LiwuKkavX6+lQ7+7uUCwW6aMwy1qtBnY45V4a
JVKpFHiex/39PdUyEonAarXKWbjRaMTr6+s/wmXIZrMwGAykGk5K347w9vaG
xWKBUqlEUtHqdDodxuOx4N1fhE6nQ6fsdrsxHA7lLPXj4yMNFVaJEwvAM40f
Hh6oX6vV0rlst1tWghytVov6yCYvl8ujvXAN2QQEAoFP/TweD+r1OlXq/f2d
Vk8W3Ol0olwui5vf7d4xxXK5HMVICrKHZ2dnsNvtSCaTtGnyns/nv4i32yY1
BoMBnp6eEI/HEYvF6AglEgn5/8Jms1FRxXGW/2Bzkr+HK4UT\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9u4FmLGRMTI1PORwyZl0EyzEDAxMwcAxd7+wRMfTFlZuJSbGx89UqU
4ya6Nmbm+uMgxhNx4QdochOZ28B0s53zBHTr6pkOg0yuZWBag+GU88yydavK
DIFuWYIh9yWdjQnkTr6uv1i8t3N1MVBuPRYZEAhihjoIE7QwsercwS7VzcSc
jkPXfXEm3TfYpX6mMDMVYZe6bcjMXPcFq9T3JCamOhyWJTFzFWHX9XMiE1cz
Dl1LmC2O45D6v475IC4pHAAA/S7A0A==
               "], {{0, 28}, {28, 0}}, {0, 
               255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1krGrGkEQxvfuvIvRpyERsTlBey0sFCsbIanSWNvoM/geGBLOh52KKBba
6P9gpaK1pVhYWouCFiIoWggSMSCTnb3NcUHbHOwxd/v7vp2Zna+pt5dv31Nv
r88p3xct9fPl9Tnv+/xDo78kgRDixeUjGAMN+csLv66/CVGBPoIeKxgTCQaD
AUiSBOPxmLju9i3Q6XTYfjQahel0+ukOkeF6vUK73QZRFMFms0G1WiUfTZyV
c+l0mlkho2kanM9n8uEBd7lcGIt+uEql0j/ce8YpsFgsIBQKMU9clENPhwm1
mVLMZDIMQ0t6PDFzds6tVivweDyMCQaDcDgcyJOJe+JdaTabjEG/bDZrRhzc
qlarMUSWZQgEArBcLvV0OOfkVolEwqigXq/b7k6TYDQaQa/Xg3w+TxhI38Ph
EPhD3t1VbMFGYGagKAqmYeEyp9MJjUYDbrfbA5kdZrMZy8Tr9bJ+drtdKBQK
Rp//Fk3H4oFegnK5zJjJZEK/9E5gKsViEUeR7fX7/YdanCHeBarSy6CzBLFY
DOLxOLRaLeXB3e52O6OBeDydUirU5ZvNht2ny+WC9Xotm+QSP/V4PDJMF+iT
hRmHw2GjYpxYv98vQqVSEWG/31Od2+0Gq9UK8/mcmH3t3BfTwrtVVZXo3bcY
3cOVTCbN1Ti4bLvdstGJRCKEjT+VCYLApLlcDk6nk1mm/oeYCH8AelltSQ==
\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+SYL2DCScjo8ZuTJk/ccyMjI4eHgLcl9Glfjkxipx69/f//1PaF9Hl
6hmT34IZbxReokm9EE35ApHaM/krmtxHbfXbt4EmXjTlf4jhlLtCjAwmRSEc
jGJ3Md35xMdQm4ORUWYtdg8+4WF0+4xd6nE0o8gL7FL/KxkZj+GQWs/I2P0P
u9RDdkaHH9ilvmoyCr7HLvUxlFn3OXapXx2MYjic8X81I/ME7DK/N/Aw12N3
YLYFI3MCdl1brbkE1+CyjHQAAGGNzMg=
               "], {{0, 28}, {28, 0}}, {0, 
               255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJylk7trYkEUxsdV4zPrg2hlwC6KpBAMCDZq4Vpku1gJopiFBFl2cdOkshVs
hPwZKtpYaW1hJylDCjGQCBoRdXF9fXvPOIpZ7XZghsPc3/nmvO7XxN3Nt++J
u9tkwv4lnfh5c5v8ZQ/9SEtXchlj7JS2nZENyRTHKX7/mTFmg7Rk+7aSbOms
Vqvw+XzQarUwmUwoFovMvMcdod1uI5VKwev1QiaTQS6XIx6Pm3ZQlZCcz+eo
VCrQ6/Ucy2QyzLjDaTinQKFQ2Erl83nDAWQ2myGbzXLMarXuIlrx2nA4RCQS
4Srn5+d4fX1lxzucTnCTyQROp5NLUaKDwYDpdzi94ChRlUrFOb/fj+l0utYQ
3LHgyuUyZ2jncjmsVqt1TIL7LFK4v7/fco1GYx9RotPpIBqNcuTk5ARvb2/r
CgjOILiXlxdeVOJCoRBGoxFTH0iBuMvLS7jdbrhcLqjVavaJvJgcNpsNpVJJ
dPXfMunw/PwMs9nM36Ax8ng8SKfTuLq6Ip1NJ4j74L9uh5y3g948OzuT3nx6
epLGYrlcYrNarRYuLi5gMBio1Ac0FJQ/LBYLrq+vMR6PleK61+uhXq/j4eGB
uqnci15Bo8YjTCaT6Pf7ShEUedrtdnS7XbbvpuJjFgwGtw1oNpt4f3+nwKUk
1hp0R4lJCXzQ0Ivvi8UCsViM5lAU+wiBQADhcJhvo9EInU6Hx8fHXffNmNA4
0bhRvTUazaZdDocDtVpNNPbwr/w/NpP9BZ1Ufjs=\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+S4Ey1nRgjk91DTJm1JkzMTNoZ4kxnMfTYMWoVHgIyZjKgy60VY675
CmZ5iKGZWc1U+BrC2s50DU0bUy2M9RDdxJmMSCJntqPIHWLSLpw58/WrmQdn
tpgwiaNp9DABA49COybGYEz/gUGLGPOSr9ilqpnkD2GXeeXBpH0dh5QmUwsO
q9YqiO3ELvMgiFELPURgwA4WnhhguxguX70qZNLG4auDmkzc63BYNZMpBIev
yAIAxzvMJg==
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVUz1PAkEU3OMEkVPjRwKNhGuBlppSaWyAP3AxJkdhFLQDOv4EPS20hBJq
aKGFFmpMtHnuvHuHqxcLSTh2j3kzb2bf3ntv/uOT99Z48Ny7lvfiNx5e3dvn
ln5lW0qpLL6uwpr0Uh5Zev/4VOqG9MeKruNYqyPq9/sUi8WoXq/TarW6jkDi
NJ1OKZ/PM8xxHBqNRurKwCUYl6DtdkvNZpNxxWKRBoMB7ff7CwOaFNXxeEzp
dJosy6JarWZCUgIpl8tk2zZ1Oh2wnEcgcVqv11StVpmlUCjQcrlUZwbuVKiG
wyG5rsuKk8nk1ICcCQS9hx57vZ5jQM5FDZBKpXKwp9NSJwbuQqja7TZjcrkc
zWazpAG5FCqtwM3An6QUpPgjJpsPB5KlUklX4ZngPVJGPpCRCM3yY+lEqx+6
1SUx8OmWd7sdmwE7zha/6EjzMzyTyagoXdAN1BaLhRyBTfP5nA8z8BV1AL5u
t8u7kGez2YDj+92v4QgDhEvda0LKIIPXOGWz7ETEccphqDI0MsI2h4b/tPQP
aykZXdhAoOEkQVqnZxvOcafg3CwPBizF0mF6kA9D930fafJe15qlwVQlWRmG
oR7eCMCx192aJX9d5f+ulfUFItl1uQ==\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9+4MvradqMXthk7qbJMsmYujBhytxP4eWuX/T5/xFMuXPiUt3v//8/
lH8nDF3qo6rE7f+/V9oyMO7agC53hJvfxtpV0FFS5MZbDDOXdnV13Xj+hlET
pyc28B7FJfVL2winthqm27ikTnPk45L6YaDzBpdcItdhXFLbGGfjkvpo4vcN
l1yK1ENcUrMZW3FJvVTkXoNLLpFpAi6pbYzhf3DJYQMAga7fJw==
               "], {{0, 
               28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1Uj2MYVEUvs/YHcMYI5H4CQmFQihEqFBImE0kq6R+GSszxcZmdkqJSkOj
0ugkColCpVD6qSRqCSIqEUSEiEXyrfve280ztt2X3JeT+51z7vm+73xl31++
fWffX59Z85c39sfL6/NP81Py7Xx1wxBCTPSYCY1xDoWfCbtfB0KMOH8MH8to
TKSo1+tgGAaxWAyn0+lRlHLHpdyAZVlIJBLk83lyjUsxm81gsVigUChQrVZV
ohS50KJYLHKvZDIZIsYVAh6Px2EwGDCZTMjDFS7Fer2G2+1GJBLBbrdTilLu
hRZ/iJyfImJcKWIhl8vRarX4mgtciv1+D6fTCYfDgcVioRClPAgtut0uZDIZ
kskkEeMqAU+lUpxQg8GAZ/4BPxwOsNvtcLlcF/ijgNdqNSiVSnQ6HV7cCxXv
UC6Xkc1m/55+v4/pdErH5ajbbLaLOt6ge7Tbbc4clUoFn88Hr9eLUCgEtVqN
QCAAvV4PjUbD9Vsul7f/aEENsFqt0Ol0lB69xfF4RKVSgd/vp2vGjdBoNCiN
26vpP6HX60Gr1XI+53I5rFYrIhHEbzabVFUMh0NEo1FxOb8CcozHY25NqECU
TDqdRqlUwmaz4aahJM/ii0t5a2UYjUZIJBIwmUycP0ajER6PB8Fg8GMJb9Vn
bLdbzOdzFAoFzjLKLRwOi1ON/yEmzG+Yakhi\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+a4PDESCbXL6hi+0HErSJZZj17fcY5mHqOCXLGXvj+/0T5bwypKwJa
l3HY9C+G/Q6Ifr8xdje63DdG3Q/fvm2okeFkbMKUAwLNsGlPXgRdxzDz9+/l
H/4CGSkWOGwFgi8XccncrTyNS+qBGuMeHFJPlXj9n2GXeifDdQmXiVHqGM6H
gQre27ikpjNNwiHzdweT7gcccocZOe7hkHopyDoBl2UBLBNxSZEMAF4x4ho=

               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVUz1rYkEUffqe60fWqFsriIViIKa1szJbLUoKQdFC4kJSLLu4ARVS+QvU
Qht7W+0EBQtBBBsTBcEvLFS0UQtRdkM8+2YyLE/cFDsww31zzj3v3jMzX8IP
d1+/hR/ub8Pmz9Hwj7v725/m6+9RcYuXcRxnItPMkRhiyBYTdr9+c5wR4pCd
xioSczy8Xi8EQUA6neYMJ7iA5XIJg8EAhUKBVCqll1DUjFKv1yGTyaBSqTAe
j3UnFAVeX19RLpchl8txeXmJzWbDnUt4Z6yaXC5HOZlM5gj/yPB4PA6tVovB
YMBpJbiW4YFAADabDb1e7y3nCBewWq1gNBqh0Wjw/Px8JqGcs1JnsxksFgv9
jcfjwXw+f2uD8XRMajKZwGq10s6r1aqUomfVjEYjJBIJtFqtI4lPDN9ut3h6
eqJfyhPXPuBwOODl5YXOQqFAXCNO8iw9EonA6XS+k85jt9vR6sTJyemqhN1u
h8/nQzabxXQ6xWKxwM3NDTXsVEP4q8EOTU42xMqKxSIeHx+pl2q1mlKSyeS/
FEgTwWAQSqUSw+FQYNvr9RqlUgmhUAiVSkWaqWGUbrcLvV6Pi4sLdDqd0/ui
QaPRoLeT1ECU2u029vs9QdFsNhGLxYh7UnUlc6dWq4EN0R2yqtHv9xGNRmEy
mcDzPBwOB1wuF66urmiL+Xz+yCUdOyjyAsQHBL/fT6+v2+0mhyulvvcO/zfm
ZH8AdD50MA==\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+S4NvNQmUGvqnYpLZHMzExKTAbf4YJ/PsLZTyxYGZiy9/7JoP1Fkzu
/lEIvUWNyWTGaxDrMrp5j7WFV/zG7oo/rkz5UOYvdLlzTOoQxqcSy90Ycqor
gKDeRpeJyQNN7pkqs5CQV11d5zM1Jn90Q++vBFM/M5j0nmB30v89TExbcUjN
5GQ//Q+7VL8Qxxwcug4LMRVgl/m5h5djHg4D1zCx4zLwqCA81NDAjzQWzoof
WKW+2zGxzcVh4BcmJlx2kQ4AH0TNuA==
               "], {{0, 28}, {28, 0}}, {0, 
               255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVUz1rYkEUferzK0E3arsBQdRCtDFFhGBnNghLfkAqCRtMsahZCyutrawE
BWOtkFKxUCuxCthYaWNhSKOVip/RszPj6D4xKfbBPC53zj333I/5GYgGf/0O
RB/vA+YfT4Fw8PH+j/k69ERcCpkgCOf0mAVqg5j8d47pYikI30E+2bGtprYg
YjKZQC6Xs5PL5QxHECVmsxm8Xi+DqFQqPD8/C2cSnIbhVJjP53h4eIAoitBq
tYjFYtSnl0BPeNZmswmDwcAoQ6GQFHLKIS8vL+xarVZTYbojiAqLxQK1Wg06
nQ4ajQb5fB6bzeZUAtVxtkajAaPRyBjD4bAUoueQVCrFIJSJJDyRQL7xTmSz
WVYZ1fT6+kqTbavnuDNORUXtmloul6UQLYMo0Ov1UCwWecCWntYTDAZZmMvl
wtvb23YIB41W4P39HVarFQqFQpBTzeTG7/cjHo+zk0wmGcZmszGu29vbz2ha
rRa7JlREQqFQIL5EIoGrqys4nU6B6Se+m5sb8I+I/JrHbreToWwLGo1GiEaj
8Hg8qFarx+lFfHx8wOfz7XZAzdmWy+U+m+qocUr0+304HA6YTCaqGavVSpDu
j1zSYLpme9WErVQq7ZtycXGBTCaDwWAg8pB2u/1poTtKMm6s1+t/0sgmkhnh
8vKSzmL/QEg1qNfrGA6HbJ5KpRLdbvegHB3nrFQquLu7Y63eNlyE2WxmfG63
G+PxWBq2XVY1ptMpOp0OIpEILBYLffLQ6/VIp9MHK/PV8/9fW5D9BRCyo1U=
\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9u4PoEB0YG3oNYZH62czOBgPBrDKnj4kxMadu+fhXgffYZTWq+GFPQ
XhAjfnNNAqrUN2nOuh9g1s1YZldUuRQmLzB9NYONSXUJqpwLE5dae/uptXKs
TEwtaNbtK3ZwcHDa+f+xOJPfNxxeXMYkeA2H1CFmprk4pF6ZMangMPGVLpPW
YxzanJlUcEldEOVYiEPqsxRTPQ6pnzFM/F9xyG1jYtqCQ+q9FZPSCxxyaUzc
93FI/ReVn4NLChsAAGMtyDs=
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1k7trYkEUxsfHNT5iVCQKeZggxkKwtbAKGndBWAtrRSWumGLZJaYM2gi2
/gFKCIhdKkWwUNBGsLJRsUohhKBFClF0m2/vjLPhsrfegRkOM7/znTNnznxL
PWS//0g93N2mLr/ep35l725zl19+3otbKgUh5JzOS0JtiCZfzrHZ/SbkDOJQ
7G0dtYkKx8fHuLi4QKVSIWbZuRqZTAZKpRIGgwGvr68mGSLg4+MDfr+fYU6n
E+/v7+RIwum5VKvVYgydzWZTjgjY7XaIxWIMMZlMWK/XxCjhDFxqtVrh5OSE
cYVCQYoccmQ0GrHLabVaPD8/H0oQI0eCwSBTcLlcmM/nBhkiYLFYwOv1Mszj
8VBsnyznjiScz+f7lNtsNvv6cM7EQ/b7fahUKsZVq1UpYuZIvV5nxxaLBZPJ
RCtBtPzRut0ucrkcrq+viZKtWgQCAbTbbUrQLGG325lMJBKh2RzIZNS4ublh
iF6vh9vtVqJUKonbw+EQLy8vcDgcEASBPZgYtFgsgg/xwvKk0uk0UwuHw/tz
osF4PEY2m4VGo2FnV1dXqNVqGpm7QHPE6ekpdDod8vk8ttstl1FjNpshHo+z
yoVCIan73yZ8enqCzWZjUaLRKDqdjui4d08kEmg0Gnh8fEQymZS663mig8Hg
s2J00rYX+1XJOlANs9kMo9GIt7c32ntSBQO/Pm1dsX70o4jp7EtmtVqxXC55
jH+76wDT6RTlcpm+IBQKBf2sLEyv1yPSdz/7DzZR/AG9gWng\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+a4OYUKQbGp9hk/ibxMjFFyezHlPlTy83kfvLrvx+/MKSe+zB57fmI
1aY7+l5zfoMYv5+0m3eiyokybQNRn7eVMTExbUCRamHJeP3+UJGCrCATk9B+
VBvnsAGVMztkbn3JyzQd3b4l+aeuXf///5Up0+zfWB30f4020wLsMv+v8jDN
+oNd6m2oUMVfHNqcmfpwyPzvYcn6hkNqpZTqYxxSXfxOH3BIdUsFPcIu83c5
j/pWHLouybLPwOXENbKFuKRIBwCamdHI
               "], {{0, 28}, {28, 0}}, {0, 
               255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVUztoYkEUHX1+kqhxFdKIgo1YpEglthJhhZBtAmnsTFjQwOLqBrFJJ4gf
rAKKSWERECGFjakCgXSmFIwEUuVDSEJQEcU16tk38ybwso8tduA97sw9c+ae
M3e+hfbD33+E9iO7IWcgHvoZjuz+cn6NxsUlQUUIcdDPSWgMMeQ/B0a/J4TY
IQ6VMtbTmAg4PT2Fw+FALBYjVkVeg1arxfJ6vR6lUsmigGgxm81QrVZhNBrh
drvRaDTIFxlukVPlcjnYbDZsbW3h7u7OLIMscUg2m4XZbMb6+jp6vd6yDGLg
kFqtxlhcLhfu7+9NMoiRQ/L5PDQaDfb29jAajYwyiInL9vv9UKvVKBQKRJnX
4u3tDdvb27BarUgmk1SjVCTHLXNcu91muilXuVzGdDqV9HKcmZdEbV5dXWW4
SqWyqLBHi5OTE0SjUVxdXeH6+hqdToeoee7l5QUej4dtPzo6wvv7u2Q/51jg
so6Pj6HT6ShO3Ev/CxAEAT6fD5FIhF4Nnp+fYTKZGFexWFTSLCGVSjEDw+Ew
Xl9f0e12cXl5iXg8DqfTyRrCYrFIJwjMpIuLC0wmE7HWv5UJWFlZYaednZ2J
Vkhrg8GAzpFIJMSZxFOv18GHOFM6dHt7i7W1NWxsbDCl1AUNz4kxHh4ekE6n
4fV6kclkPtUidZgOT09P2NzcZPVQnvPzc/T7fXkPGLgL4l3i4OAABoOBwQOB
AJrNJobDIebzOcbjMZUsN/CjveiT2NnZoT6TD5eCwSDsdjt16tPdmXllNzc3
ODw8ZM1NH7BKpcLj46Mc+q/H/L8xUf0BgamKvA==\
\>"]], "\[Rule]", "9"}], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+a4OvOODat7Vgkfk2yk2BSk2cMw5R64sDhWn7y/3nGegypp2o+L0H0
eQMMqds86e/AjE+zD6PL9TI++fr/85s35wMw7VvDyKjqLc3IYsPIvhFd7t/m
6UDw5ls1YyIWL4DBSd7wHzikztrI3sYh9dZc7j4OqQ/mSttwSP0NYVqDQ+pd
JGMDDqn/sYxZOJz4LY/J8zMOXZ2MIs9wSM1gEjmHQ2qCoBouXf9DVXDZRQYA
ALLv2oU=
               "], {{0, 28}, {28, 0}}, {0, 255},
               ColorFunction->GrayLevel],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> Automatic, Interleaving -> None],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{28, 28},
             PlotRange->{{0, 28}, {0, 28}},
             ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVk79rIkEUx3d146+sMR4WQs5ERC2s7GxEbLxDzIGFP7CIsIQjiXDekQQs
LLS1EMRGwX/BRgTF2srC+AeksFFBMCEokZyQfG9nMgd77F1xA7O8mfl837z3
5u0X6fby6zfp9upccn6+ln5cXp3fOD99v5a3tDzHcQ4ynRyxIZvs48D2547j
PkIevNrWE5vTIplMwu12Y7PZcB9U5wJqtRqsViu8Xi8Wi4VVgRgY0mw2odFo
YLPZcHd3d6hAjAypVCrgeZ4isheLCtnDdrtFPp+nnqLRKA3oQMHtM1dnZ2fU
VS6Xw8vLi/kvyOPjIzKZDMXK5bISERny+vqKRCJBb2u326ICMTPk6ekJgUAA
LpcLvV5vX4EcMOTh4YEix8fHmE6nJgViYch4PEYwGITD4cD9/b1RgRwyZDQa
wWw2I51Ok4wMquJo8fb2hm63i0ajIa/Idw+r1YoWrVgs0kwlSeLUWpGkR8/J
9Hg8iMViODo6omtBEGh0xNbr9eh0OnqVCx2q1SpFZrMZnp+fyS55Hw2JQU5g
MpkgHo9TJJVKqT0IJHWIooiLiwvyPHssr/V6jVarheFwyCllJiabz+e0805P
T7FcLgUmIxf6/X66UsreG8BE4wyHwzAYDIhEIigUCrTKZBAtCbRUKiml741h
xG63Q71eRygUgt1upw1CIjg5Ofmd3x9XWliJSFkGgwGy2Sx0Oh18Ph/6/b4S
/dev+L82x/8Cn6Ro+Q==\
\>"]], "\[Rule]", "9"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 8, 19877471393439776734, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 8, 19877471393439776734, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 8, 19877471393439776734, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[19877471393439776734 === $SessionID, 
   Out[8], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7023084513109827`*^9, 3.7069781870492477`*^9, 
  3.714835704612679*^9}],

Cell["\<\
We have a dataset. That\[CloseCurlyQuote]s good. \[LineSeparator]Now let\
\[CloseCurlyQuote]s construct Shallow Convolution Neural Network. Our network \
contains only two hidden Convolution Layers. 
You will see this architecture allows us to obtain great result. \
\>", "Text",
 CellChangeTimes->{{3.7069783753804283`*^9, 3.706978527400117*^9}},
 FontWeight->"Bold",
 Background->RGBColor[
  0.9990997177080949, 0.937270160982681, 0.1552452887769894]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"convNet", " ", "=", " ", 
  RowBox[{"NetChain", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"20", ",", " ", "5"}], "]"}], ",", " ", "Ramp", ",", " ", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{"2", ",", " ", "2"}], "]"}], ",", "  ", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"50", ",", " ", "5"}], "]"}], ",", " ", "Ramp", ",", " ", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{"2", ",", " ", "2"}], "]"}], ",", " ", "\n", "    ", 
      RowBox[{"FlattenLayer", "[", "]"}], ",", " ", "500", ",", " ", "Ramp", 
      ",", " ", "10", ",", " ", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", " ", 
    RowBox[{"\"\<Output\>\"", " ", "->", " ", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", " ", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", " ", "9"}], "]"}]}], "}"}], "]"}]}], ",", " ", 
    "\n", "   ", 
    RowBox[{"\"\<Input\>\"", " ", "->", " ", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Image\>\"", ",", " ", 
        RowBox[{"{", 
         RowBox[{"28", ",", " ", "28"}], "}"}], ",", " ", 
        "\"\<Grayscale\>\""}], "}"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7023089085143547`*^9, 3.702308935738771*^9}, 
   3.702308969765664*^9, {3.7023109044020348`*^9, 3.702310921647634*^9}, {
   3.702311082937572*^9, 3.7023111032353783`*^9}, {3.702316701196945*^9, 
   3.702316706520805*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = Association[
        "Type" -> "Chain", "Nodes" -> 
         Association[
          "1" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{20, 1, 5, 5}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], 
             "Parameters" -> 
             Association[
              "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {28, 28}, 
               "$OutputSize" -> {24, 24}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 24, 24}, NeuralNetworks`RealT]]], 
           "2" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 24, 24}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 24, 24}, NeuralNetworks`RealT]]], 
           "3" -> Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 20, "$InputSize" -> {24, 24}, 
               "$OutputSize" -> {12, 12}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 24, 24}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 12, 12}, NeuralNetworks`RealT]]], 
           "4" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{50, 20, 5, 5}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]]], 
             "Parameters" -> 
             Association[
              "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               20, "$GroupNumber" -> 1, "$InputSize" -> {12, 12}, 
               "$OutputSize" -> {8, 8}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 12, 12}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]]], 
           "5" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {50, 8, 8}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 8, 8}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]]], 
           "6" -> Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 50, "$InputSize" -> {8, 8}, 
               "$OutputSize" -> {4, 4}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 8, 8}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 4, 4}, NeuralNetworks`RealT]]], 
           "7" -> Association[
            "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Level" -> DirectedInfinity[1], "OutputSize" -> {800}, 
               "$InputSize" -> {50, 4, 4}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 4, 4}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]]], "8" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{500, 800}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {500}, "$OutputSize" -> 500, "$InputSize" -> 
               800, "$InputDimensions" -> {800}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], "9" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {500}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], "10" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{10, 500}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {10}, "$OutputSize" -> 10, "$InputSize" -> 
               500, "$InputDimensions" -> {500}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "11" -> 
           Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association["Level" -> -1], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "10", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "11", "Outputs", "Output"]}, 
         "Inputs" -> Association["Input" -> NetEncoder["Image", 
             Association[
             "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
              "ColorChannels" -> 1, "MeanImage" -> None, "VarianceImage" -> 
              None], 
             NeuralNetworks`TensorT[{1, 28, 28}, NeuralNetworks`RealT]]], 
         "Outputs" -> Association["Output" -> NetDecoder["Class", 
             Association[
             "Labels" -> {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, "Dimensions" -> 10], 
             
             NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
        NeuralNetworks`Private`NetChain`opart, 
        NeuralNetworks`Private`NetChain`part, 
        NeuralNetworks`Private`NetChain`selected = Null}, 
        DynamicBox[GridBox[{{
            NeuralNetworks`Private`NetChain`MouseClickBoxes[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Input\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"24\"", "\"24\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"24\"", "\"24\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"12\"", "\"12\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"8\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"8\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"4\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"800\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Output\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"class\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 ItemBox[
                  StyleBox["\"(uninitialized)\"", 
                   RGBColor[0.66, 0, 0], Small, StripOnInput -> False], 
                  Alignment -> Center, StripOnInput -> False], 
                 "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
             If[
              ListQ[NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
               If[NeuralNetworks`Private`NetChain`opart === 
                NeuralNetworks`Private`NetChain`part, 
                NeuralNetworks`Private`NetChain`selected = Null; 
                NeuralNetworks`Private`NetChain`opart = Null, 
                NeuralNetworks`Private`NetChain`selected = 
                 Part[NeuralNetworks`Private`NetChain`assoc3, 
                   Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                NeuralNetworks`Private`NetChain`opart = 
                 NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
           NeuralNetworks`Private`NetChain`fmtSelected[
           NeuralNetworks`Private`NetChain`selected, 
            NeuralNetworks`Private`NetChain`part]}, 
          GridBoxSpacings -> {"Columns" -> {{1}}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{244., {106.9169921875, 112.0830078125}},
         TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
        Initialization:>{NetChain}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{
  3.70230898026665*^9, {3.70231109579699*^9, 3.702311104960116*^9}, 
   3.702316717101832*^9, 3.706978556491691*^9, 3.714835671278212*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetGraph", "[", "convNet", "]"}]], "Input",
 CellChangeTimes->{{3.702308994042321*^9, 3.702309012452278*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetGraph", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetGraph`selection = 3}, 
        DynamicBox[GridBox[
          Map[List, {
            ToBoxes[
             
             NeuralNetworks`Private`NetGraph`netLayerPlot[{{1, 2}, {2, 3}, {3,
               4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8, 9}, {9, 10}, {10, 
              11}, {12, 1}, {11, 13}}, 
              Dynamic[NeuralNetworks`Private`NetGraph`selection], False, {
              "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
               "Input", "Output"}, {
               Hue[0.61, 0.75, 1], 
               RGBColor[0.29, 0.29, 0.83], 
               RGBColor[0.38759999999999994`, 0.57, 0.], 
               RGBColor[1., 0.4, 0.], 
               GrayLevel[0.4], 
               RGBColor[0.5, 0.32, 0.99], Null}, {1, 2, 3, 1, 2, 3, 4, 5, 2, 
              5, 6, 7, 7}, {
              ConvolutionLayer, Ramp, PoolingLayer, 
               FlattenLayer, $CellContext`LinearLayer, SoftmaxLayer, Null}, {
               NeuralNetworks`TensorT[{20, 24, 24}, NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{20, 24, 24}, NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{20, 12, 12}, NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{50, 4, 4}, NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{1, 28, 28}, NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]}, None]], 
            If[
             IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
             ItemBox[
              NeuralNetworks`Private`NetGraph`vpathInfo[
               Part[{
                 NeuralNetworks`NetPath["Nodes", "1"], 
                 NeuralNetworks`NetPath["Nodes", "2"], 
                 NeuralNetworks`NetPath["Nodes", "3"], 
                 NeuralNetworks`NetPath["Nodes", "4"], 
                 NeuralNetworks`NetPath["Nodes", "5"], 
                 NeuralNetworks`NetPath["Nodes", "6"], 
                 NeuralNetworks`NetPath["Nodes", "7"], 
                 NeuralNetworks`NetPath["Nodes", "8"], 
                 NeuralNetworks`NetPath["Nodes", "9"], 
                 NeuralNetworks`NetPath["Nodes", "10"], 
                 NeuralNetworks`NetPath["Nodes", "11"], 
                 NeuralNetworks`NetPath["Inputs", "Input"], 
                 NeuralNetworks`NetPath["Outputs", "Output"]}, 
                NeuralNetworks`Private`NetGraph`selection], 
               Association[
               "Input" -> 
                NeuralNetworks`TensorT[{1, 28, 28}, NeuralNetworks`RealT]], 
               Association[
               "Output" -> 
                NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
               Association[
               "1" -> Association[
                 "Type" -> "Convolution", "Arrays" -> 
                  Association[
                   "Weights" -> 
                    NeuralNetworks`TensorT[{20, 1, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], 
                  "Parameters" -> 
                  Association[
                   "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1, "$GroupNumber" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {24, 24}], 
                  "Inputs" -> 
                  Association[
                   "Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association[
                   "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> 
                Association[
                 "Type" -> "Elementwise", "Arrays" -> Association[], 
                  "Parameters" -> 
                  Association[
                   "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
                  Association[
                   "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association[
                   "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> 
                Association[
                 "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                  Association[
                   "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Channels" -> 20, 
                    "$InputSize" -> {24, 24}, "$OutputSize" -> {12, 12}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                  Association[
                   "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association[
                   "Output" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
                Association[
                 "Type" -> "Convolution", "Arrays" -> 
                  Association[
                   "Weights" -> 
                    NeuralNetworks`TensorT[{50, 20, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]]], 
                  "Parameters" -> 
                  Association[
                   "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 20, "$GroupNumber" -> 1, 
                    "$InputSize" -> {12, 12}, "$OutputSize" -> {8, 8}], 
                  "Inputs" -> 
                  Association[
                   "Input" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association[
                   "Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                Association[
                 "Type" -> "Elementwise", "Arrays" -> Association[], 
                  "Parameters" -> 
                  Association[
                   "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {50, 8, 8}], "Inputs" -> 
                  Association[
                   "Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                   "Outputs" -> 
                  Association[
                   "Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                Association[
                 "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                  Association[
                   "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Channels" -> 50, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {4, 4}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                  Association[
                   "Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                   "Outputs" -> 
                  Association[
                   "Output" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, 
                    NeuralNetworks`RealT]]], "7" -> 
                Association[
                 "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
                  Association[
                   "Level" -> DirectedInfinity[1], "OutputSize" -> {800}, 
                    "$InputSize" -> {50, 4, 4}], "Inputs" -> 
                  Association[
                   "Input" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, NeuralNetworks`RealT]],
                   "Outputs" -> 
                  Association[
                   "Output" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]]], 
                "8" -> Association[
                 "Type" -> "Linear", "Arrays" -> 
                  Association[
                   "Weights" -> 
                    NeuralNetworks`TensorT[{500, 800}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                  "Parameters" -> 
                  Association[
                   "OutputDimensions" -> {500}, "$OutputSize" -> 500, 
                    "$InputSize" -> 800, "$InputDimensions" -> {800}], 
                  "Inputs" -> 
                  Association[
                   "Input" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]], 
                  "Outputs" -> 
                  Association[
                   "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                "9" -> Association[
                 "Type" -> "Elementwise", "Arrays" -> Association[], 
                  "Parameters" -> 
                  Association[
                   "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {500}], "Inputs" -> 
                  Association[
                   "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                  "Outputs" -> 
                  Association[
                   "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                "10" -> Association[
                 "Type" -> "Linear", "Arrays" -> 
                  Association[
                   "Weights" -> 
                    NeuralNetworks`TensorT[{10, 500}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                  "Parameters" -> 
                  Association[
                   "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                  "Inputs" -> 
                  Association[
                   "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                  "Outputs" -> 
                  Association[
                   "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                "11" -> Association[
                 "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
                  Association[], "Inputs" -> 
                  Association[
                   "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                  "Outputs" -> 
                  Association[
                   "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]]], 
              Alignment -> Center], Nothing]}], 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{600., {148.4169921875, 153.5830078125}},
         TrackedSymbols:>{NeuralNetworks`Private`NetGraph`selection}],
        Initialization:>{NetGraph}],
       BaselinePosition->(Top -> Scaled[3])], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{3.70230901406984*^9, 3.7023111102087097`*^9, 
  3.7023167231294403`*^9, 3.706978560970627*^9}]
}, Open  ]],

Cell[TextData[{
 "Now it is time to train our network.\n",
 StyleBox["Here comes my question. How can I preserve learning curve plots? \
How can I visualize gradient flow? ",
  FontColor->RGBColor[1, 0, 0]]
}], "Text",
 CellChangeTimes->{{3.7069785929449472`*^9, 3.706978600709427*^9}, {
  3.7070502327833147`*^9, 3.7070502865399103`*^9}},
 Background->RGBColor[
  0.9990997177080949, 0.937270160982681, 0.1552452887769894]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedConvNet", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"convNet", ",", "trainingData", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "testData"}], ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "3"}], ",", " ", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", "\"\<ADAM\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.702310234280558*^9, 3.70231026955221*^9}, {
   3.702310409137998*^9, 3.702310439357635*^9}, 3.702311169757408*^9, {
   3.702311352806409*^9, 3.7023113592700367`*^9}, {3.702311528243677*^9, 
   3.702311529058833*^9}, 3.706978637250201*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Training Progress\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12,
          FontWeight->Bold],
         FrameMargins->{{10, 10}, {-5, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.93119, 0.93119, 0.93119],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        FrameBox[
         DynamicBox[ToBoxes[
           Grid[
            Apply[If[# === None, {#2, SpanFromLeft}, {
               NeuralNetworks`Private`NetTrain`keystyle[#], #2}]& , {
             None :> Item[
                ProgressIndicator[
                NeuralNetworks`Private`NetTrain`$progressFraction], Alignment -> 
                Center], "progress" :> Row[{
                 Round[NeuralNetworks`Private`NetTrain`$progressFraction 100],
                  "%"}], "round" :> 
              Row[{NeuralNetworks`Private`NetTrain`$round, " / ", 
                 NeuralNetworks`Private`NetTrain`maxTrainingRounds}], "batch" :> 
              Row[{NeuralNetworks`Private`NetTrain`$batch, " / ", 
                 NeuralNetworks`Private`NetTrain`$batchesPerRound}], 
              "inputs/second" :> 
              Round[NeuralNetworks`Private`NetTrain`$batchRate 
                NeuralNetworks`Private`NetTrain`batchSize], "time elapsed" :> 
              GeneralUtilities`TimeString[
               NeuralNetworks`Private`NetTrain`$timeElapsed], 
              "time remaining" :> 
              If[NeuralNetworks`Private`NetTrain`$timeElapsed < 0.1, "", 
                GeneralUtilities`TimeString[
                NeuralNetworks`Private`NetTrain`$timeRemaining]], 
              "batch size" -> 256, "batch loss" :> 
              ScientificForm[NeuralNetworks`Private`NetTrain`$batchLoss, 3], 
              "round loss" :> 
              ScientificForm[NeuralNetworks`Private`NetTrain`$roundLoss, 3], 
              "validation loss" :> 
              ScientificForm[
               NeuralNetworks`Private`NetTrain`$validationLoss, 3], None :> 
              RawBoxes[
               NeuralNetworks`Private`NetTrain`$lastLossEvolutionPlot], None -> 
              Button["Stop", 
                NeuralNetworks`Private`NetTrain`manualStop = (
                 NeuralNetworks`Private`NetTrain`stop = True), Appearance :> 
                FEPrivate`FrontEndResource[
                 "FEExpressions", "GrayButtonNinePatchAppearance"], 
                BaseStyle -> {FontSize -> 12}, ImageSize -> 87]}, {1}], 
            Dividers -> {{False, {
                Opacity[0.15]}, False}, {}}, ColumnWidths -> {Automatic, 15}, 
            ColumnAlignments -> {Right, Left}, ColumnSpacings -> {1.6, 2.5}, 
            RowSpacings -> 1.5, RowMinHeight -> 1.2], StandardForm],
          ImageSizeCache->{404., {140.400390625, 146.599609375}},
          TrackedSymbols:>{},
          UpdateInterval->0.4],
         FrameMargins->{{10, 10}, {10, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->Left,
        BaseStyle->{
         FontWeight -> "Light", FontFamily -> ".SF NS Text", NumberMarks -> 
          False, ScriptBaselineShifts -> {0, 0.5}, ScriptMinSize -> 8, 
          ScriptSizeMultipliers -> 0.5},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9802, 0.9802, 0.9802],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "PrintTemporary",
 CellChangeTimes->{3.714835705019697*^9}]
}, Open  ]],

Cell["\<\
Now I want to check the network performance. At first basic test. Let take a \
look at first 100 test events. \
\>", "Text",
 CellChangeTimes->{{3.7069833831983232`*^9, 3.706983440077145*^9}, {
  3.706983484010401*^9, 3.7069835586023083`*^9}, {3.70704944659921*^9, 
  3.707049490126133*^9}, {3.707049551072361*^9, 3.707049552968214*^9}, {
  3.707049679530552*^9, 3.7070496863917007`*^9}},
 FontWeight->"Bold",
 Background->RGBColor[
  0.9990997177080949, 0.937270160982681, 0.1552452887769894]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"imgs", "=", 
   RowBox[{"Keys", "@", 
    RowBox[{"RandomSample", "[", 
     RowBox[{"testData", ",", "100"}], "]"}]}]}], ";", 
  RowBox[{"Thread", "[", 
   RowBox[{"imgs", "\[Rule]", 
    RowBox[{"trainedConvNet", "[", "imgs", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.702312574779585*^9, 3.7023126183532543`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9IME+Frwe7zII8FkZGxohf2OQCGcFAPR9D5ncDEyMjt3sII2MRhtxH
oBanPf/zGCd+wZB7ycjIeun/3wxGrdcYcumMjNH//z8G6p6GIbeIkZFpyv/l
QLkQrPZxSHNhlftznhXiB8ZKLP5rMOQESYk8wSL3//+2NgZGxgysUv//n2PE
L2f2Dl00bw5MzvI9ugZuJqW41asdgPZFo0fEcUY46EQ38gIfTCryN4YrVoP9
JiCacg6LE3d2+TMW3sfhfvoAAEdwlFw=
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "9"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x984BjTKdxyzMw45fIhcufjrV5iyIVB5IqYmevRpR4xMTGB5ZiYoHIT
3sPkXorC9T0GCzxVfAyTe4Eud4m/GyZXz8xsCqKXwOw7xlwCk4PZ85QbYu81
daZiuBwz8wy4ez8dS2JiZu5BkiuByeXoMTMziXW+QZK7/v9pX18jD1CcmZnZ
cRLCf0D7mBiAmBGEOVxikP1+WB+iHoQT9qEFzKeC8PDw2uPHZzMzm6MHGgz8
MGEWvIlL0o2JcTUuub2cTJNwyf3PZNJ4g1NyhulPnHKUAwDu25hY
       "], {{0, 28}, {28,
        0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QMInxHB65ejxyy/DI7cYpV4BHzhuH3J51//9b4ZCLYv76XwGHnBzj
F1xmvuDi/PaVBST35y263AlGzlprRsaCzZsnCX1Gk5vDCAfS31Glvolz98ya
xcRoGxycexRN23fnOiDJjMfv+ORsyAgzEIhjwC23gbETp9wtxhKccrQHAF16
1ek=
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9A8C2MsfoVDrnVTExMC3HIGeOWu8bJyMS0ALvcYTY8ZgYraOKU+/+f
jWw5HG6hwExWWpjJSJaZH3Hqe5CnxcSUeRar3EomRkYmRl+scm8mpjEzMc3G
6RiaAwDvYtpo
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+84Nf02iAGBpNtGBJ/rpfLMYGB6Q80qU+NIGEOERERZqa1KDK/p6mC
ZGq2A9lqTAdQpNpBmsy3gzlTmT4jSb0ESUnXPwOxP+aYI8t9UwdKye8Fsz94
AdlIcreAXMWdYOZ7byBb4itc6m8skPsELHPcB2RvD0LbDyA37uuBAwfSjMHe
y/uFKsdpxgQDq38iufLvTCYEkK5CDZR7vgi5erTg+v/7SkfkqtUgKdfv6HIg
8M4NKCV7DpvUB1eQ1HlsUv+XAqVksEs94gDKbcYq9T+LiUly0h+sUp8KmcQv
Y9dFVQAAeOCAHA==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "9"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x824JOD/eenfWexyj1iZvIyZ07Mket+jC51yYSZiRkIgITFsfuoctuY
4XLMzGl/UOSsmJkdE2FyTE+QpXKY+A8AqQXFDExAwFD/DEnOl3kOhLE0Qgyk
2QLJQV3Mq2HMKztkgAbDuf8383BtRSi8IMQMMwYI+phtkG3vY2ZWgHN6maqQ
5XqZmBBmfn7yE02f3n8coI9ZeTcuOQNkd6IBJjxyDMhuwdC3+RtuuShcUv/l
2Lxxyv3PPYFbDg4A9d+p7A==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "7"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8Q8GBxerpdevUZbHLpzExgeA2L3MFDQNFrQUyiD3GZfIaZ6SxWiWt9
6ZpMJq+xypmA7MMu9d+EkYmRSRSrS4H6QoA6xVuwya0Fuf+gCWPwK1xOfR3M
XIhL7v8rE0YtnJKHtLCGDgRc49F8gFPShCkDl4WaTAzY5a7FKAB9uRNNMJYh
OE2MgQkEMXwRywSNQybtQxjGtZiAdWnNxBrgGRnBZ89+xel+mgMAqBm81A==

       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x848POuHAMTUwU2qb1OzMxMzMycSzFlXNmYwXLMPJfQpOq5px4Ib3v+
9WsaM/MJNLlqKygjBI+cHqbcLrOzYPq+JKbc/5cvwdQeLG6BgWxm5hgcUo94
mHnO4pAzZGIKwyE1hYlZ9hp2qQdiTMxp2KXuhTEzxT/DKnVflZlZ/wlWqZ0a
wHDuW3YSU+bfZHZmcDxwK7a2fkCVW8rMzAyNI2bmGlS5M2BBN38pLHJ/6pkz
Cg/9+v9iM7t04Vbs/qA5AAB60KdW
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6ctmCZj3voMu1QCEzMzs+x6LDJ/F4uzuvAyM8vfx5R7ycys8/+MBDPT
AUy5T2r6G/7/X4dVDgLCmBhwyb0XZ1Z8j0PuATNzDy4j05iZ7+CQ2sHGrI9L
2yomppU4pD64MTNfxSFXwsxS+RuHnCqzBC7bqpnULuCQ+qLCEP7//+1p2cky
2TVfUKS+hzAzSTg68oIiipmpEEUOGA8QYWZeCTa+idjkLFavvvp/J1rg/O4T
ccgpvfoDl0sHGgAAQ1i4Rg==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cd+HyiIS8vbxs2qS/eTExMjEwN2OQ82JKnnjwZHoVNLuYAiMxTx22p
sBpuOZFqnFIHWLG6BQzymZbjlIthuo1Tzkn1Ey6p14w9OLWVM05G4j26hcT5
68oI5/686crHhCR3hsn0F5jxcUmKKTB0nZHkIhhNt21bX1vjycjIyMCoNh3Z
OgtgPIAjAwiCln1DcYorVE7cZDmGN5+vyD988uSKky9wemRIAgBREcu4
       "], {{0, 
       28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9gcD7/GTbh53v27OlhZFqMRapMjgkIGJkuY8h8E2FlAss5/cWQm80E
AYwumCZC5GR5GXXfY8jNB8qwB1xWYpTH4k4zvdDT/z/KMGq9w+YHIEhg4l6L
Q+q1GpMSDqkfOoyMeRDmqyxGhPiTJj8/byYmfyg3hYkJLjVHBuK9Agj3lBCT
LkzqsRoTCydIjq393ZsXLyYKMGm9hsnlMzF1u4E1MkgKgijupXAjJZiYvJiY
uLZKAMMaBFiXI1wCFtHZ+P99JA8vMxOL8UMk14uAjIGqXTtnI4rPZkky+Sz9
jwO8uIcZbXQHABGwhG0=
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cpeHUAl8y/OWbC+Tg05TMzV+PQNoeZmXkHdqlpvMzM2V+xSr1XZGYO
xC71fxLQxIM4bJvIxOSAQ+q/GDPzZCTu1W3bEH5lQpJ7f6tYiYmZby6SnCOU
udoBaDeQzwyTs2diYgIHyjYmJgYmofzVyUxMMLmNQO8JBRz4f98AqEciDUzD
LTzoDTSFz0sbZN7m/6+AtASS7x2ZofYwJeQbMjFLXET2x4F8RaBdTFC8Hc2X
zzp0gPqAWLfjDmYAPtixYwcQP8AVRkMQAABGuZq5
       "], {{0, 28}, {28, 0}}, {0, 
       255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "6"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/s4KcVE065S8zMKPwNpxHsClS5CaxCCCMNmW2RpD4oMvPBObeZmTuQ
5F4wM5vAOa3Mcq+Q5PyZ2R/C2L8VmEORpNax8yyHyexyZuY6iZA6y8fcDWMf
Z2ZmDkTS1sPMcxbMOLdxghhQbg5C6jwT05H/+wpimZgYmJhkjZmikLQVMHv8
6RZmZhZ3dXFdcFqWGdmRrswiekLMRivBLu1lVv2EJGfNzCxhuPYnhFPNPAVJ
6v/Z5ct/w9gvDdXf/McBXJmtcEndl2Rmn4tDroqZWeUlDrktAsJncJn5f+dd
nFJUAQDGLLQp
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x848C3kGU65Z/Y5OOWuMQrdxyX3UoWxHKfGRsYsnHJVjOY45f6zMu3C
KafDuACnXBBjDU65TEbbQSM3k8H8Ny65D8rCT3DJ/dA2+YlL7gyj3leccgy4
3fKlDLccHQAApYXw9A==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+sYKbojr709PQzXzGlXpkwMYNhDaZcHxMjk7yJiQID00wMuR3MTCGv
//9/zcSMIXdNFKjvIJBmYCrE0Hcmg0n70P+1PFj0AYGd1qsWRiZGLWye6GdW
AOqqweKH//+rgTaaHMIm86oQ6Lfa19ik1jIycfMwnsUmE8PDpH3dhAmLHNAm
sZb//wsZ+zFs8mBiDn4IZMxkykCTOqjJxL0OzJrJiC5XCLQJwsLUZyIPdfh2
MUb0+DExAVMtwPgLRg+TmQxMaemawDDhjr2G7szXNeD4FptwHdNzVAYALLWi
Og==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "8"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8wcEH6BU65bUy38citwynXz5T+///N+k2/scjNAZp5T9qM/yQ2My3+
f5ZmeBuv/wpTLsny/xumyr9XmLZjysVY/r/P9On/TwPscpOYgLQFdrkiXHJO
Fv/NGYG0eTmmnKjlK0ncZt5iCvj//xIXDrnY/7/NxN9jytUC5eb+X8HUjyn1
fxvjFpXaC3zGr7HIHWOTkOTQ4LuLRer//z4mJibJbVil/n/e484U9xG73P//
P8uVJuOSowMAABQnzgY=
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "6"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+E4KFk/M6vOORe1KsLSjpEVFdXP8cmffd4Y2amPaMrTrOvMRrilPvj
gFvuKx59mxgDcEl9C2Y8hktuIaPvHxxSz4RZT+HSFseQiUvqLDf7IhxSf0MZ
/XBpW8UocgaH1H0hxtW4tPkzzsYldYjF9DUOqV/2jJtxaXvDKI41VkHgs4MV
TjkqAgATGemS
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "7"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzNUjsOwjAMfWJi5AB44BZkZGQt8gGoKBVLkVIkxCFykFwkB/FFQtKmEm3C
xoClfJ/tPD9nV9+r6wpAvw5TdX4etD6/Tptw4K6/tV1zOXaPpm30vo5u2zT8
35rTUOyKkNHh3pLOEWGTVs4wNfkLyfItmnY2UwQTBxe1nIfhE5onTYmcAtSy
ChdzigKZJZFgDDGAzYGBDFCKiWag8AWKOrqSXF7sUJGU/gElDgXMJL1KcWYM
E6IcG7V0lDXAx35ay6G8AhPvNYPtl+p+am/GhNNj
       "], {{0, 28}, {28, 0}}, {0, 
       255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "8"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+c4MdxY0bGEKxStyKZQKAVzPmNIjVdlolJNWNZkvhTIGd5EYoUGxNL
/fv//z/Me/X/ba1DMrJcBRNTI5R5RozJ/DWy3H1hptsQ1lNOJrM3qE7JYbIG
05fVmbjOojnzgy1z1Z//39caMvFuwfDDBS6mZf+jmZjYN2Px4B5lJl0mJt6t
WKT+/18F9DobpoEg8B1oIFM2Vqn/a0FBlopV6gwnE+9kd+YDWKT+hjAxbfqf
xeSJRe40E5PMV6CcHRa5x0xM3ne2GWGV+5kAjj6mdmxu+ZPMxMTI5H8Nq0Pf
pLGrL/iCVYp6AACf96wi
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "8"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+WoIKRgbENTaxXynEGkJrKJmZhqXEDRWoDI5ci39P/3xW5z/3//wlF
6rsdY9v3s///H2JKxrBlNZPpLxCty3QSXeqLBuNeMEOY5wa6XBtTOJjezWz1
e4XxLBTbdJnq/n+/detWDJOIMpMxirEnmJjEzHWYmJgYmbhFpr1GMfJ9VqwM
o1hsrC2j2DkMZ0LBEQYLXFL/lzD24JSbzrgZp5wX4y08cm9xSb1hZMAtx+T6
F7fcdJzWvWE6jVPuswxOKXQAABLGyKg=
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cWOJeAS+Zzc98mHFKXvBkdD+KQm8Bo/BK7zIWZOimfcOiap7sApxMr
Oefhkjov4vUDh9T9CN2zuLRN4r2LS+q5rx2I+nDnKxbJg/qf/j9qMlF07Me0
dQ1j02MjBkZGNpupGGa6Mfqw8acmhN654Yahr56R0e8niLG1G13qpRCj2xuw
X7Qfocvtk7Ayevv//6t3mqUYRpbcXsUd+3KXAKMLphfuvXl/VZKfkTHuNxb/
AcGbGPOZf7BLDWYAAGs82bI=
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "6"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+s4PCBxQEMDnOwyLyyZ2ZkZOTltsMi58ooLGGVe+PSD0ypcCbPS3/+
YrXrDJvjNRzOeCsq8hiXE9cxNuGSOifB2NYNBCtev/6ILneUEQ7Ee9Dknk2E
glgjIZaTuEz/X8N4DJfUD1ncck8YxZ/ikHoTwRiAS9sORsbjOKSuCTM3/cEi
vvTQ//OajBFY9fgFf+phlH2DVU6HS4KRcTN2u0oZGdkX/cLlSCoBAL8DzAg=

       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "5"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+iYIauT1bZcQzhq41yl/9/d2RkZGRJ+YAi8yKBg5Fx4f//r2LFgbL2
H5GkzioBRaT7wKpWBjIytiGkLvIzMtptg5n0M4kxAC71S5CRJeMTQulbRkY4
O4KReS2y5asYWWDMx+yME5ClzokwRsLYZYya35Ck1gkxMK+CcZQYVyNkbsSx
MrJ1wblijO/gMgVCjIwcyxFKIxjn/QTRr1ZbcoO8uRTJgo3MjEY1NTWWoBBh
lFr2Ftld/x0YYUA84sh/VPBBESzBHbnm9X8M8GFijHBk4U1MiaEAAMHBqFM=

       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+C4OtmXQaGWqxS28x5rBRZjbFJ7Zetefj//1VZLFI3LdvAdMIlTDnX
yh9gelUdhtS1qg8QhoAmhhMd10AYa1gF0OUWmH6GMBI1MeR8EqAMhUAMOYGJ
EPohrzyGfQLrIXQ9A9cWDDNLwNRvO857GF5YL9T3DUiVM2ZiSP3/v1hV2qQg
bLrMBCxy/3+83/v+638DrHIQYNCPRw6fPnxyIb9xyi2Sv41bI7EAAJkd3wA=

       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "9"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+S4FRNjD8jIwNjzHt0mcPu7IxMhpaWQQpcV1Blzvqws7rvuv3r//8v
diGoUhtEmSRmQpgeTMtRpH4YMJqdgzDnMpq9QJGLYPS8AWFdYmR4iyK1ks3r
B4T1Sp4p8i+KnBHTdiirnonpIorUb2WY3HEuJk1UR76Xgcp1sjMxzUWV+6/K
2Lxt27Z+GwZGRhE0qf9b+ZgYmZjYLDOZmDLR5f7vSXRIbDj1v4NJ9DqGHARc
F2XSxSH1P4WR6SAOqZvSDBa4tE1iYlyAQ+qnLZPaN+xSX7KYmApxaMtjYlJ+
iss6UgAA4760Nw==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "9"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9G4IIYExMDEwQfQJObxMzMzATF+ahSr3Rwyr0yBAoxTwYCTLlbYCkw
Uw2bnPIHEKuCg5l5OorcfQ0NjZkgxjSgmdk4vJLPxCxxEbvUHKD/1HBo8wL6
YQl2qVPizEw+r7HLPdBhZurAYeR/TyYGbxxSr8yAZuKQ28ZMntxVRaD/tmOX
O8AL9N8OHHJ8zEx8h3AY6oXbPjQAANnFoic=
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "7"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+K4G0dI2MfVpkrEaKMcljlfp/mYuTa9BSb3N1QRq5J//9PxyZXy2i8
D0g5YJNbX/wSRFnicAsBuW+6uOVuMqodwSU3mXESTuvsGfNxyskyRuOS+iPD
uAqXXB0jx2NcclqMgTitY2Q8jlOOQeYdLqljjOo4tS1grMAp90wlGaccKQAA
MxjhZg==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "7"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YUF/vAHRE/X4Mif0gcQjAkIRKgbWiawMbVg8yGVOuHm4rgwMuB+3H
HSRAKVzagC6pxy5Tj1MG5MP9uG3CLgXUhEMGZBMO5+3H6bz99dAg3F9fj2bw
fmjIg2h0gxmQAKYroAAzUiHx5oAltsE6sTuRzgAAlhysgg==
       "], {{0, 28}, {28, 
       0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cZaGv7hFOOiZmvfgMOuaf2zMxcshWTsxYu/IUh+S7RihkMmJZ9w9T6
brmbNUiOeeUXbCZ/2bu3XI6ZuQyXq45xMQfjktvBxWz+GKvMv49MzBy3sOv6
CHRLInapJUxMDGuwypzh52C2+fQPm5S3ODMz/2esuiZwMzML7sAq5Q2U6jn1
EpvUMX5m5t5X2F34X5aZ2W7GsptAFqbeanZQLHDEx8Xrx8fH73ryFFlyabGg
ID+3ID+nICtIlcBHNM2fzv7/f+D/rA4wwGH5AAEAIemyIw==
       "], {{0, 28}, {28, 
       0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9u4OPyqAhGBjN04ccHFqWL8DCCgDma1I9QkCiXsXFxNxu63BsNGdW4
SfeArOus6HL/n3+E0H+dGdNwOecKI8srHFKfJBgbcWmrYZT4jkPqISvLVVza
khhTcEnd5JT+hEPqVxrjJFzaDjNKvcch9UJb4DAubQ2MqbikNnIq4QqRv4G8
O3BpW8sYhEvqf6XKc1xS3/U34NSGDQAAhqrbUQ==
       "], {{0, 28}, {28, 0}}, {0, 
       255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "7"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9IMN1sPy6pS8LM3bjkdjKTJ/dDB7fcTTEmnHLPFHDr+29AAzl93G75
X4VHnz+zBR77JPHI8S3A7RYGA1xyrsxMhrjkFuGRO8LNFI3TMY3e33HK0R4A
ADC655U=
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzNUTsOwjAMfWJi5AB44BZkZGQtygFaESqWILlIiEPkIL5IDtKLlLhidDpU
DFiKpejF7xMfukdz2wAYtqU17evE3L4vu3Lxcbj3MVzP8Rn6wMdOn+2/Z/pF
jcRVTOCrGC9gfgEjSF2OVsk5VCNkIK+RmxNke5SQhAAaTTkCJWeZFV2nBjFY
FSt0cIYcz2OCZNokbTCsTAmkNu3fhlZlEcmRtwj/vj4Hec90
       "], {{0, 28}, {28, 
       0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "6"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9gcCNCXvwaFvGDFby8HIyMjEvRJR6WhAGFGZVV/B79QZN6oMnIazep
48TnLxjG/Qpnir2Nwwmf5MRxu0+D4yJOuQZGtc245E6ZMLJpr8El6SrHyO63
AofshyQ+Rrag4zhkT8ZwMTKFvcMhe7ebmUn4DS5HPSxkVP2MJvbzKpTxp54x
DU3uhSCUMU+bsQlN7odhwof/369NtOFh5NyKJvcpkFHeUAMUTRxdGI742QqK
V0aeZqwBu1WNMav+FS4P0B4AAIy9wkw=
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "5"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6ca+MAxF5fUWwdGJxxS/yYwMi7CIbeCkbEAh9Q+NUaFH9gNvCPLmPsO
u653jIxROAycZsHI2IRd6iIrIyPvc+xyHYwsta+xSy0XZbT4/7+wbtEaDKkf
EoyMs1IFGBkZmXTuo8mlMSJABqrUbV6wqN/M8+c50OWyQTJhX/8AmVxocr8V
gVIR4NB6ysGAKvcTrAvEeqbPKH0ZRe4XHyOjRBEQWLEwsmxDc+Z+IZgjrbZj
+O9xib6avUb4kpvYo2gwAwC8f6km
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "6"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x984N8xGQbRXCC4iil3kwkKONx3o0nd8Wdisjslx8Rqys7MF30DWepH
OhOT65f/21kn/v+/25BJ5uA/hFw7ExP/ZSBtqfb2//9ntUxMWxFyuUxMvSD6
tU4mkPyzlln4NpIcK8SOgwfBVD7TFiQ5dhSnTWfqR5LLRpE7zKz6BsbexBSD
Jsc0BeFzUxS5QiamPBj7pTzLKSSpnxpMTEthnE8GTDOR5JYwMRl8gvN28xk+
g3NeCDIxeSApTWfy+wNjz2NiYt2OJPfXnakeylzAysSUg+K0p8nM+c+B9LdA
Liam8Fcocv9v6TBFLL+3nQcYh1y3/qOB7zLQ6DU+ji4FdF8SWEr7JaYU9QAA
yqGVfA==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cO2MjggkvqlRSTKy65Nmb+vTikZrEyT8UhtV6VWRqXiQnMzMdxSFWy
MOu+wy51UoJZ7il2qXeSzMyBOEzcwcxs+wmHXBUTUyeY8fEuhsnVzMyvgNQp
f0Nm4dI7qHIBILkHNiLMIFCDIvWNhzni8yQuZiYhlzYDNLnZzMwemczM0hVP
/v+PYjZBkXvJDTJL7hKQeVwUTe5/OUiu9vPnzycEWaO/oMq9UQW7gomZmb0H
w4MfMjjBcs77sXl/TRxzcsHen9ikBjUAAPuzrm4=
       "], {{0, 28}, {28, 0}}, {0, 
       255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "6"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9m4LgAA1PZHywS2/z42DkdNBlVP2FIbeFi5HW68f+zI6PPazSpzTyM
qltBjOfsjBNQpW7xMPr+A9J/j6oyMnahyjUyar8CyiywZwSCO+hyKf9PTnVm
ZFRaz44px8zKzMgXcvzPf050uXm8jKI2BcdAjmJCl/v/7MErqCpGuXdYfA8C
/7wZzXFI/f/FSH25v6a45f4vwyO3jlHmLS65y6zs93Fq5LTBKfWf8zxuOSQA
AKURwWg=
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "9"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+04M88RSamL9jlnjMDQTeZcrroolN99O4D7QsDykmiyvyIZ2KQBsr9
j2ViYpJAldvJzMxkCGLEYeqDyf1wBcrlospFQ+WwudMdKCdzH7ucGxMTA9AV
EMKh8x2y3BxuZiaQFijhgaLxeJC7BxAoguQ4PKrQfQ8CpSC5q9hkoHLYpf6X
AJ3iiEMuAaitDIccE265BSC5+djlvpgxM4f/xWEmdQAALMiQmg==
       "], {{0, 28}, {28,
        0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9G4NXREldWINBveoIhV84IA2rr0eVcRCPmbN9eGmHEyMiNLnf1EoT+
fTOSaQZOm7/reqEKnO6FMw8Kosm93fH//7tzILDRmHkLmkkXqw0VoQ41QJPq
EYf7gZHjOIrUFhZGJMBe9RVJzpKR0TkSKOqz8PTaaHZGxqDfCDkGRkYnRkad
mU9BnNtZHIyWF+FyEUA9sivgJt22ZeRthXHmC/seeYhkx99jx479HxYAAHMX
rWc=
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+O4L6p9U0Uge8NeXkLTwDB1kQeJsZ6FLlbTEyMTEwwwhJVX42IiAg3
UJhXsYGJ0R7Tptvbt29/8H8SE+MVHE754sEo+gmHXDETUxwOqSZ2JgMc2m7K
Mwkewi51T5qJfxEOEz0ZGGfhkHJlZ8z8g11qKRdT8EvsUr+VmTRf4zCxnYlp
Lg6pV3yM6k9xyDUxMR3GIfWfj0npOy45DiYpXC75v812Cy4pbAAAxqnHaw==

       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "7"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x84cKNJjpGRIRubVAErEwgwsy/AlNNgggLxixhyDV5MwVnyIEl5TI3f
n/38//aZLxMT3xXsDrrGg13j///7+xVBhtZhyhzw4QU7hmMzppwpxJ2cs7CY
CJWLx2ZbCj9YTuw5NskTsyYvEGZiskIWexk6HcY8Ls3EJIos18mkMg0hhS7H
pHru1///32pBUqzlyHJTmYFCIcnJXmC3aKI6go8JDlizrqPKxXLCpFgqMFx/
vksSZC5z+nxsfvs/LSarBUuU0xEAAJBrgSo=
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9AsCjgG045V8YzeOT88MgxbcEtx2iLR06CnnKX8MgVMzKyL8ZtJmMt
DrmzeOTu00DuAQsjo+5zHJLVQI1ueOQycMid5uOf/RmHHB0AAEgZ1tc=
       "], {{0, 
       28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8E4HsLl9wdHHIbmbNfYZf5mcbFHIZDVyUzk8R77FJvBZiFT2ITf/v/
vxMT0zIsUjXqi/7P5mAOwpT5vZiF+ewNDmbBC5hyJczMwg96mZlXY0pVMzFb
7F0mzOz4EU3iQ4kqEyPTq0cBDEzovr6vw8zMzMRsIw4iHB0dHGsRcleYwXJA
oNkIBA2NTxByH2OcOlavLmZm9sTiMxC4LcfseRW71FtdJgVcEVPExIzF02DQ
z8ba9Re71Ac55h4cuv6/ZG7DJUU/AABOWLjH
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6ce2O+A07R6BwaGehxSDDhdAZJywGEX2VL7cduFXea/AzlWkef2/wxQ
F4LVoDoV4ngQCQYOaNrqwVbWAwGqT8BcuGmYcgzQmMFwlQPMIjAD1TFwV8Dc
i+J1uM56HL4cxAAAn3mSIQ==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "6"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8u4N/N9txcKUYGBkaP3Jdocj+ZECDxGarcaZAgM58eOzuQrkeV+xOp
azRzN5DxzZ2JyeI7DpvfqzIxNeNyVgpQ4x8ccnOBNv7CLRf4F4fcNCamTFz2
GWJ4Ag5eKjBJPsEh183E5IND6oM8E8dBHHITmZjccEid5WVimoJDro2JSRpH
aC7lYmLai13qTyATk80/7HLvgEFpi8O2P3VMzo9wyGEAAK1Hv3U=
       "], {{0, 28}, {28,
        0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "7"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x848GKJhRT/ImwyfzcpioRMOhqARep6PFPgAyD9AVNqsynr/J/YrXrI
x7QMlzOqGQPh7F/zV6PIWTPpv4Yyv5szh6PILWdiEu7/BmI9t2RaiGrmzzY2
Riatwl3Xbyow7cT0QyoTELBzM3X8w+KeO+2+PAyMjNFfsDv3tQpQr9NXrHIf
BGQOGjC5PMEmd4eR7er3FEYdbHJnGZm2///vwxKORe4ZA6P73//vGQ2xaeRm
Ykr8e4bJCJtcER8Tk7sFUxRWl3YCJRmZ1mKV+7/bjolt2h/scrQGAPIRuk0=

       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "8"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6c5uKfEoI9LroGJyQCHVCMLTrl7CkxM4iewS2kxMTGxt2GVW8kEAuyV
9zClHugzQUAlppwFVIqJA8PYDRxAYZFVVkBSBpu2eVf+X10E1LgeU1v0JyDj
tigTUxWqXA0Tk/0nMGszE5MoqpwIE1MehHUAXe6tIBPTTTDruye6XD8TTA6o
DYvc6f8fXz1pkweylFHkZjAzMalkmkiCPS99BdUt0rBQYWJJvorm9fOizGAZ
ZoU5/zHB5EigVMpcLDKDAQAA622H5w==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "6"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9+4GWl8jQswn/+fnsVzc3IuBVd4t00b2MHRklGdibGV+hyzoyMDIyc
NhPuycp/QpfLYQwq2XMXyJCdhGHZz84PEAYWORi4wr4Dp9wJxmc45RbgkSsl
U24CuWbyvcEplyD5Aaecucg7nHJqKl9xyila45TCK2e7ErccCgAAlc3mYQ==

       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "7"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YUKp3DZfUfm7GZbjk3BgZ3+OQ+qnN6PYHh9xWRsb9uIx0Z2B8jEvO
kdHkHw6pHxqMebi0vWNkXIFLbh0jw3VccnMZGcmS24ZH7h1+uW145Goe/cUu
95GHkasQR1j/NmLEGZ4/1BgVPuOy8JTFIVxS9AAAB4Pn8A==
       "], {{0, 28}, {28, 
       0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9IcE19BS6pk4pM/PYnsEr9FGJiYmI0fYlNbhuT7fZyRqZEbHKn4j79
/7+KjXE9Tvd4MOXjlMsjU86PCad9NYwJuKSuazBNQRN6fgsCNqsxej1HkxNl
AgUJhJCtnzRxEhDA5BiR5GAETI5B9Pb8GAZGRvZsTy8g0PcKX4VkpqAQUDUX
NIp+INt3TgJoCE/1ZaxuP5Of338Dl8cGOwAAyOCzuQ==
       "], {{0, 28}, {28, 0}}, {
       0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6c1OGXNGIdD6qooExPLTqxSXwKYgGAiVrlKoIwYq9pLLFJPuZkE5v13
Y0rElPrtwcRU9P//C26+sxhyD4Em/gbSYUxBGHI+TEzR/4B0D5PqF3Q5Kabc
WyD6Mg/TfDTbspmYFkCY8kztqHKvmJg8/sDkLFDlLjMx7foPk1NBlVvHxH8T
wrovyKSKKtfOpABlzWVCl6uDyf31ZWTSQ5XLYkoD02/CgEGwHFWujckPSP7Y
ZMrExJr8F1VuFRNn59JIU1AkdfxHA69AooxAzNLzF13u12pukCxz2h50mUEC
AI7upPs=
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9o8J6RYQsuublMTFtxyfWQKHc6sOgukHprg0UuionJ+P//fy1MTOE/
0OUCmZi0/v/vZ2JieohhTzsTE8uKRBamwPN/MeTeWjKBgMFXbA58yg+UyvyN
1fFPQHKO2OXqmJgkmZjssEn9UmcKfM7NpPQci9wWJqbz/3fyM0VikdvMxPTx
//8UJv5vWPUB5aYxMXVjyv1UZWr8BpLzwO5O48VJ2OUe8YEDhmUbNl9cNwFK
SU7FJkUfAAC48LHT
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "8"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6c16LVm1NuGVeZnExMTDzffbmxyUUx8U/5/Fjd/gynVx8y0A0h18tT/
xZBbxcT0G0Q3Mb1Gl3qsyzbxH4hxh+kBulwdkzeE8ZSpHV3OjekIhHGNaT+6
XBrTaQijEdO+P78hzrvKjykHA9uZXH6jCV3tT0hoAbrzriL7MTSpF3xMQKCx
6H8bkzS6Se1MhqtXtzIz1/IxVaLLtTE1A8lzUoxMDui2/V8GltsjwMTUi+G6
tzxeX//v42ZiZCp7XPkFTbKEycBJgMlnv5OwktwnNLk/mfJMjI4v//cwSf3A
9PTp0pNA/z3wmoApNQgAANAHtzA=
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/U4Iyd/Gtccv3MCrjkXgUx4dRXyMQci0PqgRiD1jUcclrMTLU4pFoY
mTwOYZday8PEvA671DVNJsYMHCauZWLWeohdqo+JUQyHG9eKMYstwS71wI6R
aS0Oy4A+W4pDCuizGBzhCPRZLQ4poM/kcYTH/xYm5us4pBYzieLwM1COeclX
XHLUBQCAT947
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/EYM+ez2C6xg9VfKauri4jk+p8ENuZCVWuhomJiRGIQx79///9K4pU
LSeT8MxMIaBkA7pNl3mZmMr+/18ClLP+jir1CqhB/+f//3fEgJIvUeUmMjGx
rAUxdDHktrAwMcWDWfXocg81mJg0noKZs9HlfBkZOc5DmLMYGBk7kaROSTKx
z4Gy0c3MZ2JyhjKfyDAxqXxCkmNlYvoAZry25mRiYpuBbB0wpI4AtRwv4wWF
WSOKD9SBii0s5MDhqXLkDYrcVaChEMATdf8/GpirJ87EJK4XMAddAgzu7N17
F6vE4AAAdGmS2g==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x84UMQUilOOiUXuOC65lUwMTLjkVrEwseDTh8tGkL5wPPosH2OXe2zN
xMK0BofGXkYmRpwuZcLjUks8+kAu7cUlB9QXhkcfLh8ek8Ot7384nrgIA/pw
NQ6540AfWuMyFKgPp1wJizWO0KYDAADDfdBM
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+UYM1lKOOpjsAZFJlHRuwqUOZEZuY4FLk9zMxsC8CsZzrMzIIocj7M
zMxTYap4FiFL7edjZpZ4CZOTQ9G2Dqh4MoQ5H03ugy8zszaUbc7MbIwk9dmb
GS53RoyZGdm6XqAUs8hJEPNXAjOz0g0kh3CC5Jj9qw78P+YHZGxA0tbGBAMM
YHI9ktxODmbVILBWJhAhdRHZmc/mvf3RBJJl0uZlZs76jwF+3ACCPnZmiUuY
cmAwhZnZDYfUU33ccsAowCkHcmcIDjlgIFi+xCF3LKD6DQ4pKgEA9GyOsA==

       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6c9+OjTh0vqXy4j7zMccjsYGT2+4JBLl136GYfUPgFbnC4xYz6OS2on
kz9ObY6MC3DK2Qg/wCX1XNINh8y/n6sZp+FyCCMjYz0OuXdBjIwcWov/YJfl
Z7RgZAzCIcfwdUcCUw1Wnfwuf/+/TWZ8iFWuDUhsZtyFVU7yxv9jxtj1tXOz
GbIw9/zF6piOVNva09jdOeAAAAA33pA=
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "6"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/cYLVewBkswnfT2djYmBgZ+E6jy8xX5mRklDh978g0RhFUmTxhZkbG
oPYPQObfRMZJyFJazIxK3c9+gtmHHBi7kOWEVbpfQZmbeBlZt6DIJUMZh6fy
cSbcQrHORugJiHozlY+x/RqaIzdzxH75//+4J6PxgjcYfqtn3L7Aik8g9i0W
f89hFONh1FuDRQYkxyg49x02mVcRBprJErexSb0xYwz/8sjY5QYWuQ7GGd/+
/9/FvgWrHNjhPQonsclN+wSiXcx/Ysj1MTJqP/z7//dmxjxMjf2C7KwppSEM
jDXYnPr/kkOztIv8HaxyVAMAngizCA==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "8"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+sYIsWI4PpMWwyP9K5GYGAfwsWuSagBHssB+NKTKnXeoyeF3//F2HZ
gym3QZRxE9BKlnXY7DvFceb/FwnG09jkXkpv/b+DUf8lVi/UJP+2ZbyDVep/
t1Q7Y9hP7HKvBBi5cGj7/9+Xkf8XDqmPUow4zZzEqJOIyy0pjDs/MPZglbot
wPjxl7kvVrndjD5/P3I2Y5XLYgy+bs54HYecvCYj4xuscrOB8aex7w9WuXtm
CtM/Y5WhIgAATS/IqQ==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "8"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cx+NXquBOH1LcwZmZJ7FJfIpmZmadjl0sDSoXgMNKOmVn2CnapdYLM
zKexS70zYmZWfo9d7hwzTm0guYDf/09NnDRpOTa5iP+n+JiYmVk9MOSYmMKP
8TIxMAHBXjS5TmZmdSFmZqYwT25mpceocguYQUBk/rX/wJA7j+lO5uTLQBZQ
bhqq3MdgoNwLIOOEFIa+/x8MmJktN24rkmRmlriL7tIdwkCdTCCjSzC9nwCR
E234hin3PRwkF/EGUwYIzvDZNnz5hVVqwAEAnMugdA==
       "], {{0, 28}, {28, 0}}, {
       0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "6"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8FEHCx/TsuqVNmjEl3Tp2fMSU01EpjLrLMpRI2RijgkjcKy0CSeqMA
FGRgZLQImnjmOZqBmSANKZewWjYNJMcgtRub3L+7IOAVj9MT96UzMMRcLoPI
32ei2WdjyMnwBM6cWWfHyJCDadaxFGaQU/gD32Oz6fKujo7erzgdMmQBAEEB
2Aw=
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "5"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QcDqUkZEx9hKmxIHJvJxMILAIQ2orLxMjE3a5OwJMTIz+zTf0sMg9
dHXtPvXn/38zbGZCgRkT11YcUp/0mLRwaVvAhFPuhBATUwUOuWgmJrmb2CT2
t7IDg6UMi8xnNw6Q36t/Y0rt82ICh8spDJljmnxMOOReujDxTGrALufDxNR7
HKIvA90uoIFTApiYGJZrMll9QZVbCIkbgYW/gKy9WOS4Ys/+/39dgSn3M4rc
JTEmprjLYOZNOdxhTWsAAAJgk0g=
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cXWMykdRurxPfP/0NZWBZilStYuL4fq9z+1Ur2nzscscnNZmJhWfb/
sDSLzh10qWYmBr4N///PZ2KqQ5N53s/NwrcIyJjPwvIATQ5oC8sGECMQXe56
MzeLyDIg430sE0vxbxQpNbAzQE5lYWJpRHcGk9EbKCsORWo+NwuTAciS30AH
eb1HlnrvxMLCdBDEAgYJSyKKtu1AkbrvIAOBDnJ+g+78dCBVkgh0kDOqz4AB
wbTg/+f5opBwQQGruVlYehdbAQ0GhwtmkACNg4YLKjgDkbNehin1/3MQUK56
4WcsUoMEAAAj95Qz
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+s4GMdA1PUEexyl7T6GBlZr2DXt1WPkZHRAZvUVV1GQTdzRnNMme/T
JFhzH/yrZ1yCKdfOGHTi/79NjCyvMOUCjX8eCsxmZHTFlPrGLDMxAugSiW+Y
ckCLgIBVjX09Flc+VWbkbHr0uYP7DqbcPEaNCyCacwKG1CVhhYf/scv9q2Ze
9R+H3BrGYqi17KfR5SKV/kAY6xhfokm9kkiBmp2t/hVN7q2MOIRxhnEfhjPj
mXtA6t9aqv3CkLutyKgZMsNflWM7htT//w/LlRgZeRLPY5GiJgAALua9BQ==

       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "8"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cP+GDt9hKH1N9M/pjXOOQWMjL24JA6rsqY8xW71Gt+RvZrOLQFMDKW
45DqZGTU+o7TRLbjOLRlMMrdwGUiC2MZDqnnAgxhOKQe6jIyzvqJVWovDyMQ
dGGT+qDHyCjCzBiNTW42UNMUQexy3YyM9ls4GVuxywluM2RkXINDHycjo84d
HHKMjO5fsHrhd0RIw/t/WKUGAwAAM+XMVw==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "6"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+CYCNjIE65FCbukzik1vEyefTrnsYm9S+GifvXKglfbHKrmZg6/v/X
lcAmF89k/wOH3G8xlu3////RxiY3ickRSO5hErn0FV3qnTrTnP//vwQzMZnc
RJf7bsgkqqQky8Qk+hnTzBtajIxyMgyMR7C58/emTV/vMrn/xiYHAo1Mqbik
/rMy5eOS2sbg+gGXXBbjJlxS21kEruOS28ikhNMlJ7klnuOUbOK/jFOOBAAA
NirSYQ==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "9"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YMJepF5fUAVHmPlxyYczMz3DLmeKSesTEVI9TjlnsJS65LuZwXFL/
+fDIMTDhlmPCo49cOTrbdwCPfX1MzC73ccg9Y2JmlsalMY1ZcylOx9AeAABI
WeTH
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9a4HZMGCODaeb7UzUajIyMDIx80rUwqavmTExMFmxMAuyMQAYTmIDJ
xTCJLr/dxsokpN6w5TYI9DoshMlpMGX8386oPucBFutqmaReP93+C6tTTrEx
6m/D5c7ZQMuX/8Yu971BnIlRueE7dtmH/kCXG2/CYe72ZH4mpuQbOGQ/2jEy
iK7FIfm9R5SJeyYuB5+zZJL/gkvyjBBTFqrIqY1wZjoT0z0UuROM+hegzAWM
jHtR5H5nM3H4HgJ6/f0UCyYxNGt+bnFgZFJUU5NmYmItwXTFySQhYLSyKWL3
w5cJseXHcHmAeAAAQyajNA==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "5"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9e4Ny8KH8GJrtvmDJ/0tgYGTndIhi7MeWWMvK3zn7x/7cQx2sMuUJG
NbBpjYx70aW+qjFm/gYxljFOQJc7xKj6B8wIY5yMLmfG8QzCCJP4gC63dSmE
Psgch+lOKPBjnItL6qkybrksRu4XOKReKzFOw6UtjVH9OQ6pD/KMO3BpS2FM
/IND6pOk8FNc2rIYZ+OS+i4oj8sh/yczrsYl9b+O8QFOOQwAAGxW3Ec=
       "], {{0, 
       28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "7"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9gsN8B6AgHLBL1IAkQ2I+hhQEBsEo5ALVgGloPM8wBi5lAsXqoflwO
xeFOqG48Upi2IaRwaMMltb8e4kEsMrDgwpSsRwqv/dg17ce0EaYL5hxkbQzw
YIZIYmirh3P3o+tDdQGKRlxS9AQAGpeJ7Q==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8w8KlBkJGh5BM2qStqjCILY5jtvmDIfEgUNlj04f//JuaWv2hSv3QY
rd6DWeqMz9DkXjNKvIOwtrM8vDLtF7LcckbNH1CmpRYjxw1kuR+KjCVgyZ85
HIxGF1ANvaTAGPkdqCaBUWTer/9oYIc2o/GeU66MJvex+O+xHRcjI6PGOyxS
QLAWKBn8E7vcUg4pKUZjbGb+/6HNeeG+JaM6NslMxkygHxIY1R5gylmLvgKS
P10YbX5jyimDqV96jD0Ycnl868D0Qz7Z7+hyp7WEO0Exu59T7BuGxnWCjBwB
MXqsjHVYXHplVqgmI6PhdvTYpRcAAP2FtP8=
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "8"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x98IIzhPk45EaYEGPP9VAw503dQZpLgRXQ5pptQZgzTdFxyt7lxy61g
4t6DKufAxJT1/zLYxUwyaG6ZxsQkqCce8Pr/BxtsckzqTEwaxy4yYZNzeezN
xKRdglUu/P+bPiYmFQcMudXsTEX//7/xZuKXxJD7v3PjZyD51pgJ00wY8ADK
GeCQmwOUm4dD7hR+OdHrOOSeajEp45D6/1yHSQmX3P+JTGk45agBALFcr/Y=

       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+W4MqqVQ6Ojo4zUUXfb2loyBPnZWZmYuaVcEGW2B8mzgwSZhZ2cpx4
FVnPSVeQMDNzTv/VB6imfW/hYmKynXpw6ltM+5OYmSXW43AbEzN3YUN9g7e4
eP35l+/R5SDOABNGX1DkopiZZXPqroJAGzdzHU6/1zMJ45QzZM7BJbWCBafc
TUNm5k3YpS4JMzNb/EAXPZH9/8P8QCYGprg7GDrCmB10QP6b+AvTtFUKTMws
Ro2vsEj9/3/HcSIOR1ATAABhQK2h
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "5"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6chuOPNwKibeRarnA4TCIiXHsSU+izEpKSmpsbJpLkOQ+7lxjnfgdRC
VSbx57isfaTDZPAJl+R+Nqa5OB08h0nxJy65+0xMa+gpNwm33ANuTLnrFe4C
qQICiv5MTL6/UGSeeLIzwUHTUxQ5L6CQiJgYVFJvI7IcN5P3mq//f2tBJTWQ
5fiZer4cLlZhYmIOuX17RckmZLktUA0SrZgu/3HRholJOufiY1y+HnAAAH+P
pAE=
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9mYEFYH5i+vzbsMprUZinmcCjNLI0q1cjGZPoGQsuUlCDLvK9nYvK/
CWTsZGKSvYmi6Yw6M7MpSOiHCzMzqtR0TiZmeZCB//cyMzegSM3iZGbKAEv9
L2JmfowstZiJiWkWlF3ExP0MWQ5k11MoOxLiD2Q5ZoXgVSDwlYm5FkVuQxQz
MxMzGEszMUs09S5HdU1vqZycrJwcKwOTBBAbfvqPCeSYnN5sWZ2wDovUfznu
49iEQeCmUAAuqf+rmHpxy6GFJTJ4g9M2agEAKwavbg==
       "], {{0, 28}, {28, 0}}, {
       0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9oMD+bKbwXXXD3lCmTY/j52ZiZmQVRJJ61yvIwMzMxQwDrFGQ5H7AY
TI7vDbKcOUROngtMm6CYGczMrNq6d+8hcZCU8WMUuVcbNjwCUpYgKfmN2Nwf
xwHS9QiLzL/VILcYPsYi9aEE7M5T2AxcwsTEwAQEqTMxpN5ZwPzHmnIJTe4a
kt/l0OR+1CDkBNHk/v88BQY6QDm2BXDRMyehwMXV1VUQpLEDJjWdHWoUIh5m
w+RgInA5kQK4kZzIcuyCulNvIBxxrKNDglneyanDybGjYy22YKETAACYBEnp

       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9O4M0Oe0ZGRr36Hxgyf7bJM0GAzR90uRKgqLGzc1SQIZPjTVSpbTxM
HM3fQaydTExGqHIqTEyzwIxfMUxMquhyAWA3fG9lwiIX8RxI/Y1mwpQzZmLi
cS8pUWZiqZVAl7sN9YHthJ2MTCro/jteZmIy9flfkDvbMHwPBZlMTBtxyYUx
Mr3GIXWUj0ntCw65HiamXFxGRjPx3cQhtYWXSRqH1L9gJqYWHHLXmJjMvuOQ
m8bE0ofLJc/U43FJoQMAtPmszQ==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "9"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x964FC2GZNe9q4bmDIvg5iYgYCJWXA/utQXU6AwS/zafEFmDueDaNqY
ZWWY44GMx4XMzAJ9aHJHspkbQazfV1WZwlHk3ipezWZyhrDDGVHl/r//sotZ
AsT4nsLLVI3hUm2W2v8vy0WZudN/YXhjFbNEGBMzR+w5TB/+/ygM9J/aEiwy
/78nMTExZWKT+f+/BRQuRVilvnExh1wQF7+GTc6fyfrHfzc0b0OBDtN6YBAw
mXzDlLopDHYGA9MrTLn3SlOBZDeT/EdsZhq+3GLFxpSA3T6QH1KxGPn//wag
nGfOW2xSJAIA5vqnyQ==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "8"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cK8OE+i0vqMDdTNC45f2YmQxxSx7hxyr00YmZmmolV6k8oExPTVOza
OpmZmZOwS91nYmZ2+4lV6q4qE7MMds/dj2JmYq5FcJMk4ezbikxMDKr3obzn
84BcmNQvX6A72LZAODczgDYzM8PkToA4PWCJJe78zChy3kC2LoixSgwkDJRT
nQyTA3J0X/5/2a3LygSRC78DdwoDE5NOqSkwWJgYQITEAiQfJEBNYk4Cme57
Fdl372SAQo7Mprt+TgEyTqJ6/dGl5cd/Xbr3//8HFWZmnQX/sYNjzObmX3DI
DVYAANTwiN8=
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "6"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/0IBSLG4+thEpZYkj1MsiCqEcMDMfQpVZCxUIhSpABTDlQySNMKYht
wJBEl5KFSvVimAiXgmvHNBDTIY/g1q/E0CYLtB7oxpUrj4Gi7RGaHBzIorv/
f2hoKNDpvdik/sMtwyV1DEs4YvgDm1QRWbpw2QV0Ii5d1AUA0HzC+g==
       "], {{0, 
       28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8Y8GlxURGfffcPLFJvbJmYmZmZmLMwJd84MBuGh4erMzN3Y8hN0Vz6
CUhdY2YuQZd6KncWwghlMsHloB8uzH44pG6mMmOX+9RnLgRyq+ZyTLnFTExM
DGAc9RhdroiZWaZy9eoqE2ZmjTNocpfD1z8AuyeLmVkOp2NNmFnNn+GSjWFg
2oVLbjkTcziKwNf4iRdgbHS5R8zMjlDmGXS5T6UcTD4bgFH0Y68DA9NUNGuC
gfHnEhbmAoxHpzdocm/sIPHLzGyLLgU0dkmJNDOTX8n1T7h8QGMAANTEpus=

       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+M4Pf0Ij4Gpqgln7DI1TMzMzMBscFaTLnwRXrM4fJAef51mJJPFZn/
v+nmZ2IOx5QLZSoGUYxM6u/Rpd7IMe8D0b7MzI/R5fYyu/4E0aeYmbvR5Ryg
9jxiZr6OLsfIBJVjYsIwk4l5EZieziz2ElPuOJguwuIHJuapKPZis4+RKRmL
PpcfQGoWzGxkoM4M8vseTqZQzJgoYmZ2/L9Zl5nvAobU/6fcTEyMTExMszCl
/v8PA8dfBjap/wdEmZmsa39ilfufw+z7DbsMFQEAJNysPA==
       "], {{0, 28}, {28, 
       0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9iYLHPAwgj7zKG3ASRzB9gRr7LDwzJUKbHEH1QGhmEQcXCMOUeMTCC
xR6pMWLITWOCqI9kwtRXxCT3Bkg1MGKVCweSNwXrfTHlUtnP/v9/SdLnKRem
fQxWQClZ0ZdvZDH1MVr93ywpevD/Iyz2GSv2Cjoc+Y9VrpCRkfcMyH+MmPYd
trI6AqK/WmEJMxgIxSPXjkfuGGMRbjmmYrLk7ktdxylHJAAAyZfMqA==
       "], {{0, 
       28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+y4NTJkx+ufEcXvb7EKa3biZmJyV+9GU2qQIwJCDTPXbhwoVjhOLLM
cm1mkJTWEzBPhR8u8e9nPQsTOxNr2ZrZYP5fZRaY1N9+JiYu7+UxV2ECq5kq
YMybTEyKa/4vR1iAJFfOxLQPxVkTEHIyTEKXUOTMmGbDmAxM5ihSJ7jUv8DY
N5jYLF8hyQUxmcMD5psVE5P+uh8Qzo9X6czBfxAK73MDvW3x8OH7hw/XmBqz
221HtuGwPxcoVLRBhGzEfzRwNMARJMEkX/8QXQoI/p4CAWwygxwAAMpOsQ8=

       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+KYE+CTd5Vh8iTWKSy2ZgYmXiZmJwwZL5XsjCxuZkwMTFZYMitZWLi
3vS/BihXgC51kIdJbsN/kJzeb3Q5Dyamp//BckkYRoow2f0BUpZMFj8x5DSZ
woFkOzPLdEwPzGfSe/r/Cz9TDBbPPTRnEpwbzShwGIvc/4+6jIyMDK3YpP7/
/5rDxKTyHLvc/3AmJoGXOOS4mZgYl2CX2scGlMNu3zcdpmxjHHJvmJhimRiX
YpU7CYwBJrvPuPQx8Z7D7pRfsaoG+7BLkQgARuOwOg==
       "], {{0, 28}, {28, 0}}, {
       0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "8"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8w8HGHo1AmdqmvboyMjEwdWOVaRdbMzWf0wyo36cr//1NwyIFAPmM4
HjkcjgGCKJbduKR2MfPj1NbLGIxTzperC4fM7xn8et9wyHUAw0UlqO09Nrnl
EowgkPABm+TzU6eOqjEyrsTlnI3kyf3rZGQ7jV3qUw8jzzbsUl/6GBk3YZc6
rcXIVvcLl0voAAC+n9rA
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9GYDUTEEyc9ADIfD9p4qRJFxBS99WYgYCJWUZNVU0RSDNPRsgdZYbI
wTFC7t9csNxkcSxylUAB5Wtg5pr/XsxMUDYILOQASl2C2mzFy8xUirDtgjiz
RAuE+aoOaETqVyS57OyLUClDoF3hWH15v46JgSngIFa5HqAbnc5glTogxMwc
8BWr1P88oBx2Azc4MDCpYdd0AOgvp4fYZP7d8mJmFkrDqms10Mvh2O16P4mJ
SSgfu2UbmZklsBv4/6oZM3Midqn//9uZJ3/AJYcVAABjvpWb
       "], {{0, 28}, {28, 
       0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "7"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/MYNUpnFJfFK1+I3NnvkFw7jMxvkWSy2SyQnAmocpNK1DHKff/BONJ
uPkajAyockxwueNMYowzUeVqYMx67gbGychyZ1g1oKyHWslLGG+heKqNfTWY
PuJh+z5F+jOK3Ec7xm2//v8sUxRc8obR8z8qOMbEKCQiJGZx5P9Npjg0uT+z
GvJM2l+A/bfkPy6AT+4yUzNOuR8GaO5EBnWMrTjlPulzLXiFS/KOo5BkPE6t
X7ZfxClHKQAAQNPR/A==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4GslA6PCHWwyf89qCal4MllgkzvLxH/94U8LLWxyBnK7////ooZN
bg33RiC5gMkfU+qFmg6I6mRcgCk3l7EeSD5WU/+KTe4GkGxgCsRi3VxG9+t/
/oewTsAid5iRicmindEGmw/+B0swMjIyxLzFJvft+a40JkYm2V1Ydf6fzWTE
x8R3DaucKNOa5zpM2FwDlPP7/38Wkx1WOZGq//83MKZg15cNlGPCIcf04FYY
UyNWucVMvDxM/b+wyn2rYjRYjl2KagAA8DDEkQ==
       "], {{0, 28}, {28, 0}}, {0, 
       255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "8"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+a4NqMzkDxoD9YZN7MVGRk5BRnPI8h828OP6NI7qFbrxgPo0s99GIU
jbgLZLxiVEGTnKPL6P8GxPhlysg4F0WqgFl05k8wK4WRsQjFMd1Mrp/BjD91
jJxz/6JoixB4CaLez9ViVF6A5pBORp9ExxJHM6AX5qM78rY+IwOjgKYnI+MW
TG9/v379+rP/0YyR2MIEBFaL813AIfXLnTH/Gw65vaJy13FIfdVlnIVLKpEx
/hMOuXpGLVxSO5gxowYKPgYzpuCQ+t/AqP8DlxypAABiD8Tn
       "], {{0, 28}, {28, 
       0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "9"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzVkjEOAiEQRYmVpQew8RaWY7ntGg+wG3FjgwlrYqzmaHM0BAbiBn+zpT+B
BB4wM585jI/+tjHGzNs49cPr5P3wPu/i4uLm++TstXNPO1l/HNOxfRnh7yRs
VMQtMQs1MG8xx9tMTdW8eK1locaShATHo4joJ8+aJkBf3JagoswEIdFw6J7k
UJCJ7kJGmiBiXNxAbVKcElReeYtRd6kfDDuP0zdAM0P9CWxmdpMxWqcPV++L
Jg==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "8"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+kYFM9EwMTEKTORJd5Uc/BzMzEDAKs+SgyDy3EQaIQOWa2BchSRhBB
jeDgYBEgrXgTLvXIECzD7vYYyLkaBWSmwuWmgKWMD0J4H0GScDlLkJT8Ixj3
GpLcJz6QnPZ/bHL1zLjlmNDkJiDJgULDUboPxn2qA+Qj6zv+Fa5tIpDbiCx3
Ci71TIeZmWMLVrmn1sjawHJToZIT1YEcro1wOTmQMwXnnzx5stOVC8jk8YNL
/b/JzQwFYN8oTv6PBPLZkOQkjvxHAQtU2aBy/I0v/6ODBTlAJ3S0d3zGkKEq
AAB/REhB
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6ctODAxk4mJgYmJaeIHDLl8JmZmZjBOwJQT0tCortJQYmbywZA7eBBM
3cImBwVeuOVemeGWWwh0SyJ2qQNCzMwOmH4AgxCg/7DLnEphYuabh1UqWZyZ
iW8mVqk8kF2bsMm8dwCGpQM2mfs9isxMTpuxufCVDjCM1R5i0zXNECgVjk3m
ghjQU0xqUN6GSQcW1k2GyU1iBgEONVU1NSDmZRbkYEaTg8YrCCtrLIabOVkH
LjcZBHCE50ACACUYkRY=
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+c4NPLlz+wy7yfrMrMHLofm9Q3V2YmZiBYhkWunkl4ypOTLkxCtzDl
FjPLAsn9zEwHMOX+LlkLJH9qYpODAh3ccic5ccs1MmXikpovzvwEl5Qohwt2
mSeN4hxzsYi/nTrVX5qJ2XrqVEw5RiYgABMMTEx6UdnZ2a0rYHLhINAUrisR
7gEKVGDIWoejaf/y/v/vVxCAI7aGHAAA0XvKhQ==
       "], {{0, 28}, {28, 0}}, {0, 
       255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8wsJiBUS2l9xU2qXsKTCBQBmRO9PyDKjeLiYnH2ZlPfMn//91MGSiS
b3mYjO78/z+Bc9KH12aM/n+R5X5YgI37f7ZePJCJsRLFyC8aTJ0Qe5WZmNzv
o8h9tGWq/QWkL/MwMSreQHPnLwmmSf8flxgyMYX1fkP3RAqTUocREyNT7A9M
Dx6VBfmPd8tfTKmZbGC/d2PKvJ8sD5RgZGKSSFiELneQBSgVfqOTi4lpKZrU
n/m8TKr9QD/cYGLS+Ywq94WJUf4piPGvm9XxE6rcD1WmMLDT/66XYZqLKvdN
hlGnsvLalip1oHOuoFl4lY8J4k4gWogm91SDkYkRLKd7BcPzT0/muwB1BqU9
x/Q8vQAAYd6Hag==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "8"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+UYK2TQvqj/09dK35iSLXorL2azDLj/WzxKnSp3fxn////N49ny/8+
7gNoct7uYGqD/LI/yk6oUkeZz0EYB8IXzmNZiSJ3kf8dnP1JNAxFbr0GEkcx
EFUfspyqBKqc7HcEJ1n2E7LcPManSHKMF1HkGJDkJrHeQTGTcSmCUyrwGVVu
CZKZhihu+S1cieB4oPrvf4LwKxjzk2g9qlwfYzuMWSv4HFXuqRrrHAjrjGjE
fzRwU4q1B0SfErV5ii73/6kti/uKae6sEW8wpP7//xXGyMhotxuLDBUBAHQu
zuQ=
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "0"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/C4MfRVauuYgr7VtbXuyowMTHVY0hdtgEKMzFqG2vkoEsdF2GU8vSM
ybj86im61EsFRo41WF3w50sYk+dz7K7bqMjE1Idd6rUK0BU1sy9glTQBO1Fk
Bza5+ztu//+/llHwK3Zz//+fyyX0EE3o934w9aPbgrXoB6rUcS3WSiB1VJNJ
ajm6SRJsgnwz03S4mVIw/WfPKsjIyMDI6InFBc+ivJmZGJk4D2N34CE3Rsn9
uFz//+M3nFJ0AgDohMSe
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "5"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+M4MvzS6ViTA6lU35hSN20Y2IGAiDh9wFN6gw/s8bEXUCQysx8Ek3u
cselV2DGN2vmMpz2ujOvwiV1jInpBS65OGbmlzikfrgyy7zHJrH7zKLJzMzC
M1IM/N+hSJxqkOTkZYZ4UqLsGULiKTBIGJiAgIGJQ1IyfAGypgvMzBIGhi2T
eJm456Lb9GnXrltAahEzUwsORz41YeY6ikOulZnZF5c2RSamU9ilfpUDHYRD
23NmZpnzOOQ6mZk7cEj9v8tc/huXHPUAAI7mtq4=
       "], {{0, 28}, {28, 0}}, {0, 
       255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "7"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+EYGUEIyODvr5+411MuSwmKOBM/oQu9zqemYWd3b7Eg4nJ4xeGzg2n
gcSjUKDWPqy2nhYHSik/wCb12wtk4RwsMs+32QOl1LHq0gc5s+gxVst8gFIT
fmCV+n9aByhZ+ge75OdSszhhh4fYJf//+H9CUgOrY8DgMZPKI9xyqOGyJR7u
vP22aHKKTPsgjJ/lgujhqcg0CcJIBnlf+xWy3Ckrtcv3uoqi2YAyrDkoUkBb
hKExa+CxHdN1y7XVHTTDl2LEObUBALE2p54=
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "3"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.702312577290224*^9, 3.702312619205348*^9}, 
   3.7023178533156147`*^9, 3.706980497788026*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Above test is a very naive. We are not able to look at each of the \
test examples. We need to do something a little bit smarter. \n",
  FontWeight->"Bold"],
 StyleBox["We can based our judgment on classifier performance measurement \
metrics ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["accuracy",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[". \n",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["Accuracy is a description of systematic errors, a measure of \
statistical bias; as these cause a difference between a result and a \
\[OpenCurlyDoubleQuote]true\[CloseCurlyDoubleQuote] value. \nIn other words \
it gives you a ratio of correctly classified example to all of the test \
examples. So the best possible value, perfect classification, is 1.",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.7070497077250757`*^9, 3.707049849180019*^9}, {
  3.7070501584811783`*^9, 3.7070502038677607`*^9}, {3.707050365093542*^9, 
  3.7070503661478233`*^9}, {3.707050419020132*^9, 3.707050477883541*^9}, {
  3.707050533214675*^9, 3.7070505379657297`*^9}, {3.707050588792541*^9, 
  3.707050680943596*^9}, {3.7070507128111*^9, 3.707050723145636*^9}, {
  3.7070538759870977`*^9, 3.7070539020491123`*^9}},
 Background->RGBColor[
  0.9990997177080949, 0.937270160982681, 0.1552452887769894]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"cm", "=", 
    RowBox[{"ClassifierMeasurements", "[", 
     RowBox[{"trainedConvNet", ",", "testData"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.702316601062022*^9, 3.702316636954451*^9}, 
   3.706980509355296*^9, {3.707049701939501*^9, 3.707049704787504*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "[", "\"\<Accuracy\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7023166391113577`*^9, 3.702316686210011*^9}, {
  3.702319542392024*^9, 3.702319545807534*^9}, {3.702319610853882*^9, 
  3.702319616311676*^9}}],

Cell[BoxData["0.9887`"], "Output",
 CellChangeTimes->{3.702318026774338*^9, 3.7023195513082237`*^9, 
  3.702319616893827*^9, 3.706980555963683*^9}]
}, Open  ]],

Cell["\<\
What does this result mean? 
It basically  tells you that this classifier in roughly 99%  returns correct \
prediction. 
Another way of looking at the classifier performance is so called confusion \
matrix. Each column of the matrix represents the instances in a predicted \
class while each row represents the instances in an actual class.The name \
stems from the fact that it makes it easy to see if the system is confusing \
two classes (i.e. commonly mislabelling one as another).\
\>", "Text",
 CellChangeTimes->{{3.707050732105494*^9, 3.707050881781893*^9}, {
  3.7070509154737*^9, 3.70705092232584*^9}, {3.707053908034937*^9, 
  3.707053953592791*^9}},
 FontWeight->"Bold",
 Background->RGBColor[
  0.9990997177080949, 0.937270160982681, 0.1552452887769894]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "[", "\"\<ConfusionMatrixPlot\>\"", "]"}]], "Input",
 CellChangeTimes->{3.7023180342938967`*^9}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggmIQGwI+2FNKb+d0ynFpeGfv0bzzsYvCO/v/vcpH1sS8
tg/74xo25fJb+323HJ7vnPza/m4614Go3U/s3WOFFlhJvrN3/Mf76+WsN/YK
F7bufJv+HKf553R0qtO/vbWvz1n+IVD8jf0/6Qc2SwSf4RSfdjHopnLRW/vD
1kWXQ7/ctz//KPfyE7cCe5sLdy69jn1nP5tR+3X1vLf2XEtWHhDnfoXTXlzq
cfkXlzm4/IvLHFziT06xbTTjemO/okdowtb4h/b+7E+r5tlUkhyeh6aVW062
fmf/rn7Op00yb+1Fd+nvbdr5Aqc4qe4kNf30xOQFRlW+s++YvOF86su79g+k
9p1iKE7GGf64xHG5n9R4J5XGlc5jTim1PGh/bS8zw63R++lD+wZbDsUdp+tJ
jhdc6qkV/rjyES7174TfbO+89Nq+fD3/+9Paj+0t3iyUz+HdRvN0Qi1zcNH/
w1huLPr+xv4Nc4nCneIH9q9URLinBheTXD6Qqp7UeCc1fL49lA+4+e+t/bx4
NdsTd+7Zi83nskrsyRywcCY1HHCJzzuxN3LH83f2mpfkNBT47tofYJ2yecGL
aKrld1zhQK9y5mGVyDr3h7egfAYGWscLrfPvvjNX9E52vbH/uPie+t/7D+zV
V61wduIso5r7SfUXteplXPYCAFZGTv4=
   "], {{0, 0}, {10, 10}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["973", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "973", "\" examples of \"", "0", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9898270600203459`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9928571428571429`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9913397860417729`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{973, " examples of ", 0, " correctly classified"}], 
         Row[{"Precision = ", 0.9898270600203459}], 
         Row[{"Recall = ", 0.9928571428571429}], 
         Row[{"FScore = ", 0.9913397860417729}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "1", "\" misclassified as \"", "0"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 1, " misclassified as ", 0}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["3", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "3", "\" examples of \"", "2", "\" misclassified as \"", "0"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.003051881993896236`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0029069767441860465`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{3, " examples of ", 2, " misclassified as ", 0}], 
         Row[{"Column fraction = ", 0.003051881993896236}], 
         Row[{"Row fraction = ", 0.0029069767441860465`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "3", "\" misclassified as \"", "0"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 3, " misclassified as ", 0}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "4", "\" misclassified as \"", "0"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.001017293997965412`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0010183299389002036`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 4, " misclassified as ", 0}], 
         Row[{"Column fraction = ", 0.001017293997965412}], 
         Row[{"Row fraction = ", 0.0010183299389002036`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "5", "\" misclassified as \"", "0"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.001017293997965412`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0011210762331838565`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 5, " misclassified as ", 0}], 
         Row[{"Column fraction = ", 0.001017293997965412}], 
         Row[{"Row fraction = ", 0.0011210762331838565`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["3", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "3", "\" examples of \"", "6", "\" misclassified as \"", "0"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.003051881993896236`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.003131524008350731`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{3, " examples of ", 6, " misclassified as ", 0}], 
         Row[{"Column fraction = ", 0.003051881993896236}], 
         Row[{"Row fraction = ", 0.003131524008350731}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "7", "\" misclassified as \"", "0"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 7, " misclassified as ", 0}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "8", "\" misclassified as \"", "0"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.002034587995930824`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.002053388090349076`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{2, " examples of ", 8, " misclassified as ", 0}], 
         Row[{"Column fraction = ", 0.002034587995930824}], 
         Row[{"Row fraction = ", 0.002053388090349076}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "9", "\" misclassified as \"", "0"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 9, " misclassified as ", 0}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "0", "\" misclassified as \"", "1"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 0, " misclassified as ", 1}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1132", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1132", "\" examples of \"", "1", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9929824561403509`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9973568281938326`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9951648351648353`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1132, " examples of ", 1, " correctly classified"}], 
         Row[{"Precision = ", 0.9929824561403509}], 
         Row[{"Recall = ", 0.9973568281938326}], 
         Row[{"FScore = ", 0.9951648351648353}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["3", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "3", "\" examples of \"", "2", "\" misclassified as \"", "1"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.002631578947368421`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0029069767441860465`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{3, " examples of ", 2, " misclassified as ", 1}], 
         Row[{"Column fraction = ", 0.002631578947368421}], 
         Row[{"Row fraction = ", 0.0029069767441860465`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "3", "\" misclassified as \"", "1"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 3, " misclassified as ", 1}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "4", "\" misclassified as \"", "1"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 4, " misclassified as ", 1}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "5", "\" misclassified as \"", "1"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 5, " misclassified as ", 1}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "6", "\" misclassified as \"", "1"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0017543859649122807`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0020876826722338203`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{2, " examples of ", 6, " misclassified as ", 1}], 
         Row[{"Column fraction = ", 0.0017543859649122807`}], 
         Row[{"Row fraction = ", 0.0020876826722338203`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["3", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "3", "\" examples of \"", "7", "\" misclassified as \"", "1"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.002631578947368421`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0029182879377431907`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{3, " examples of ", 7, " misclassified as ", 1}], 
         Row[{"Column fraction = ", 0.002631578947368421}], 
         Row[{"Row fraction = ", 0.0029182879377431907`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "8", "\" misclassified as \"", "1"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 8, " misclassified as ", 1}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "9", "\" misclassified as \"", "1"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 9, " misclassified as ", 1}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "0", "\" misclassified as \"", "2"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 0, " misclassified as ", 2}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "1", "\" misclassified as \"", "2"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.000975609756097561`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.000881057268722467`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 1, " misclassified as ", 2}], 
         Row[{"Column fraction = ", 0.000975609756097561}], 
         Row[{"Row fraction = ", 0.000881057268722467}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1018", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1018", "\" examples of \"", "2", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9931707317073171`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9864341085271318`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.989790957705396`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1018, " examples of ", 2, " correctly classified"}], 
         Row[{"Precision = ", 0.9931707317073171}], 
         Row[{"Recall = ", 0.9864341085271318}], 
         Row[{"FScore = ", 0.989790957705396}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "3", "\" misclassified as \"", "2"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.000975609756097561`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0009900990099009901`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 3, " misclassified as ", 2}], 
         Row[{"Column fraction = ", 0.000975609756097561}], 
         Row[{"Row fraction = ", 0.0009900990099009901}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "4", "\" misclassified as \"", "2"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 4, " misclassified as ", 2}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "5", "\" misclassified as \"", "2"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 5, " misclassified as ", 2}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "6", "\" misclassified as \"", "2"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 6, " misclassified as ", 2}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["3", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "3", "\" examples of \"", "7", "\" misclassified as \"", "2"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.002926829268292683`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0029182879377431907`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{3, " examples of ", 7, " misclassified as ", 2}], 
         Row[{"Column fraction = ", 0.002926829268292683}], 
         Row[{"Row fraction = ", 0.0029182879377431907`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "8", "\" misclassified as \"", "2"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.001951219512195122`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.002053388090349076`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{2, " examples of ", 8, " misclassified as ", 2}], 
         Row[{"Column fraction = ", 0.001951219512195122}], 
         Row[{"Row fraction = ", 0.002053388090349076}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "9", "\" misclassified as \"", "2"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 9, " misclassified as ", 2}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "0", "\" misclassified as \"", "3"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 0, " misclassified as ", 3}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "1", "\" misclassified as \"", "3"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 1, " misclassified as ", 3}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "2", "\" misclassified as \"", "3"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0019665683382497543`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.001937984496124031`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{2, " examples of ", 2, " misclassified as ", 3}], 
         Row[{"Column fraction = ", 0.0019665683382497543`}], 
         Row[{"Row fraction = ", 0.001937984496124031}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1006", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1006", "\" examples of \"", "3", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9891838741396264`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.996039603960396`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9925999013320178`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1006, " examples of ", 3, " correctly classified"}], 
         Row[{"Precision = ", 0.9891838741396264}], 
         Row[{"Recall = ", 0.996039603960396}], 
         Row[{"FScore = ", 0.9925999013320178}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "4", "\" misclassified as \"", "3"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 4, " misclassified as ", 3}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["6", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "6", "\" examples of \"", "5", "\" misclassified as \"", "3"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0058997050147492625`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.006726457399103139`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{6, " examples of ", 5, " misclassified as ", 3}], 
         Row[{"Column fraction = ", 0.0058997050147492625`}], 
         Row[{"Row fraction = ", 0.006726457399103139}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "6", "\" misclassified as \"", "3"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 6, " misclassified as ", 3}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "7", "\" misclassified as \"", "3"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0009832841691248771`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0009727626459143969`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 7, " misclassified as ", 3}], 
         Row[{"Column fraction = ", 0.0009832841691248771}], 
         Row[{"Row fraction = ", 0.0009727626459143969}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "8", "\" misclassified as \"", "3"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0009832841691248771`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.001026694045174538`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 8, " misclassified as ", 3}], 
         Row[{"Column fraction = ", 0.0009832841691248771}], 
         Row[{"Row fraction = ", 0.001026694045174538}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "9", "\" misclassified as \"", "3"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0009832841691248771`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0009910802775024777`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 9, " misclassified as ", 3}], 
         Row[{"Column fraction = ", 0.0009832841691248771}], 
         Row[{"Row fraction = ", 0.0009910802775024777}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "0", "\" misclassified as \"", "4"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 0, " misclassified as ", 4}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "1", "\" misclassified as \"", "4"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 1, " misclassified as ", 4}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "2", "\" misclassified as \"", "4"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 2, " misclassified as ", 4}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "3", "\" misclassified as \"", "4"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 3, " misclassified as ", 4}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["974", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "974", "\" examples of \"", "4", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9908443540183113`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9918533604887984`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9913486005089058`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{974, " examples of ", 4, " correctly classified"}], 
         Row[{"Precision = ", 0.9908443540183113}], 
         Row[{"Recall = ", 0.9918533604887984}], 
         Row[{"FScore = ", 0.9913486005089058}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "5", "\" misclassified as \"", "4"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 5, " misclassified as ", 4}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "6", "\" misclassified as \"", "4"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 6, " misclassified as ", 4}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "7", "\" misclassified as \"", "4"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.001017293997965412`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0009727626459143969`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 7, " misclassified as ", 4}], 
         Row[{"Column fraction = ", 0.001017293997965412}], 
         Row[{"Row fraction = ", 0.0009727626459143969}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "8", "\" misclassified as \"", "4"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 8, " misclassified as ", 4}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["8", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "8", "\" examples of \"", "9", "\" misclassified as \"", "4"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.008138351983723296`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.007928642220019821`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{8, " examples of ", 9, " misclassified as ", 4}], 
         Row[{"Column fraction = ", 0.008138351983723296}], 
         Row[{"Row fraction = ", 0.007928642220019821}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "0", "\" misclassified as \"", "5"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0011098779134295228`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0010204081632653062`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 0, " misclassified as ", 5}], 
         Row[{"Column fraction = ", 0.0011098779134295228`}], 
         Row[{"Row fraction = ", 0.0010204081632653062`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "1", "\" misclassified as \"", "5"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 1, " misclassified as ", 5}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "2", "\" misclassified as \"", "5"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 2, " misclassified as ", 5}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "3", "\" misclassified as \"", "5"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0011098779134295228`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0009900990099009901`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 3, " misclassified as ", 5}], 
         Row[{"Column fraction = ", 0.0011098779134295228`}], 
         Row[{"Row fraction = ", 0.0009900990099009901}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "4", "\" misclassified as \"", "5"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 4, " misclassified as ", 5}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["883", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "883", "\" examples of \"", "5", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9800221975582686`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9899103139013453`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9849414389291691`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{883, " examples of ", 5, " correctly classified"}], 
         Row[{"Precision = ", 0.9800221975582686}], 
         Row[{"Recall = ", 0.9899103139013453}], 
         Row[{"FScore = ", 0.9849414389291691}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["8", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "8", "\" examples of \"", "6", "\" misclassified as \"", "5"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.008879023307436182`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.008350730688935281`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{8, " examples of ", 6, " misclassified as ", 5}], 
         Row[{"Column fraction = ", 0.008879023307436182}], 
         Row[{"Row fraction = ", 0.008350730688935281}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "7", "\" misclassified as \"", "5"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 7, " misclassified as ", 5}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["4", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "4", "\" examples of \"", "8", "\" misclassified as \"", "5"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.004439511653718091`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.004106776180698152`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{4, " examples of ", 8, " misclassified as ", 5}], 
         Row[{"Column fraction = ", 0.004439511653718091}], 
         Row[{"Row fraction = ", 0.004106776180698152}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["4", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {5.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "4", "\" examples of \"", "9", "\" misclassified as \"", "5"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.004439511653718091`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.003964321110009911`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{4, " examples of ", 9, " misclassified as ", 5}], 
         Row[{"Column fraction = ", 0.004439511653718091}], 
         Row[{"Row fraction = ", 0.003964321110009911}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["4", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "4", "\" examples of \"", "0", "\" misclassified as \"", "6"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.004201680672268907`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.004081632653061225`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{4, " examples of ", 0, " misclassified as ", 6}], 
         Row[{"Column fraction = ", 0.004201680672268907}], 
         Row[{"Row fraction = ", 0.004081632653061225}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "1", "\" misclassified as \"", "6"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0010504201680672268`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.000881057268722467`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 1, " misclassified as ", 6}], 
         Row[{"Column fraction = ", 0.0010504201680672268`}], 
         Row[{"Row fraction = ", 0.000881057268722467}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "2", "\" misclassified as \"", "6"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0010504201680672268`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0009689922480620155`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 2, " misclassified as ", 6}], 
         Row[{"Column fraction = ", 0.0010504201680672268`}], 
         Row[{"Row fraction = ", 0.0009689922480620155}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "3", "\" misclassified as \"", "6"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 3, " misclassified as ", 6}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "4", "\" misclassified as \"", "6"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0021008403361344537`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.002036659877800407`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{2, " examples of ", 4, " misclassified as ", 6}], 
         Row[{"Column fraction = ", 0.0021008403361344537`}], 
         Row[{"Row fraction = ", 0.002036659877800407}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "5", "\" misclassified as \"", "6"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0010504201680672268`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.0011210762331838565`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 5, " misclassified as ", 6}], 
         Row[{"Column fraction = ", 0.0010504201680672268`}], 
         Row[{"Row fraction = ", 0.0011210762331838565`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["942", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "942", "\" examples of \"", "6", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9894957983193278`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9832985386221295`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9863874345549739`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{942, " examples of ", 6, " correctly classified"}], 
         Row[{"Precision = ", 0.9894957983193278}], 
         Row[{"Recall = ", 0.9832985386221295}], 
         Row[{"FScore = ", 0.9863874345549739}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "7", "\" misclassified as \"", "6"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 7, " misclassified as ", 6}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "8", "\" misclassified as \"", "6"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0010504201680672268`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.001026694045174538`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 8, " misclassified as ", 6}], 
         Row[{"Column fraction = ", 0.0010504201680672268`}], 
         Row[{"Row fraction = ", 0.001026694045174538}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {6.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "9", "\" misclassified as \"", "6"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 9, " misclassified as ", 6}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "0", "\" misclassified as \"", "7"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0009718172983479105`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0010204081632653062`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 0, " misclassified as ", 7}], 
         Row[{"Column fraction = ", 0.0009718172983479105}], 
         Row[{"Row fraction = ", 0.0010204081632653062`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "1", "\" misclassified as \"", "7"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0009718172983479105`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.000881057268722467`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 1, " misclassified as ", 7}], 
         Row[{"Column fraction = ", 0.0009718172983479105}], 
         Row[{"Row fraction = ", 0.000881057268722467}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["3", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "3", "\" examples of \"", "2", "\" misclassified as \"", "7"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0029154518950437317`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0029069767441860465`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{3, " examples of ", 2, " misclassified as ", 7}], 
         Row[{"Column fraction = ", 0.0029154518950437317`}], 
         Row[{"Row fraction = ", 0.0029069767441860465`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "3", "\" misclassified as \"", "7"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 3, " misclassified as ", 7}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "4", "\" misclassified as \"", "7"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 4, " misclassified as ", 7}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "5", "\" misclassified as \"", "7"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0009718172983479105`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0011210762331838565`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 5, " misclassified as ", 7}], 
         Row[{"Column fraction = ", 0.0009718172983479105}], 
         Row[{"Row fraction = ", 0.0011210762331838565`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "6", "\" misclassified as \"", "7"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 6, " misclassified as ", 7}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1016", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1016", "\" examples of \"", "7", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9873663751214772`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9883268482490273`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9878463782207099`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1016, " examples of ", 7, " correctly classified"}], 
         Row[{"Precision = ", 0.9873663751214772}], 
         Row[{"Recall = ", 0.9883268482490273}], 
         Row[{"FScore = ", 0.9878463782207099}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "8", "\" misclassified as \"", "7"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0009718172983479105`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.001026694045174538`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 8, " misclassified as ", 7}], 
         Row[{"Column fraction = ", 0.0009718172983479105}], 
         Row[{"Row fraction = ", 0.001026694045174538}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["6", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {7.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "6", "\" examples of \"", "9", "\" misclassified as \"", "7"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0058309037900874635`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.005946481665014866`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{6, " examples of ", 9, " misclassified as ", 7}], 
         Row[{"Column fraction = ", 0.0058309037900874635`}], 
         Row[{"Row fraction = ", 0.005946481665014866}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "0", "\" misclassified as \"", "8"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0010256410256410256`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0010204081632653062`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", 0, " misclassified as ", 8}], 
         Row[{"Column fraction = ", 0.0010256410256410256`}], 
         Row[{"Row fraction = ", 0.0010204081632653062`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "1", "\" misclassified as \"", "8"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 1, " misclassified as ", 8}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "2", "\" misclassified as \"", "8"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0020512820512820513`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.001937984496124031`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{2, " examples of ", 2, " misclassified as ", 8}], 
         Row[{"Column fraction = ", 0.0020512820512820513`}], 
         Row[{"Row fraction = ", 0.001937984496124031}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "3", "\" misclassified as \"", "8"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 3, " misclassified as ", 8}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "4", "\" misclassified as \"", "8"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0020512820512820513`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.002036659877800407`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{2, " examples of ", 4, " misclassified as ", 8}], 
         Row[{"Column fraction = ", 0.0020512820512820513`}], 
         Row[{"Row fraction = ", 0.002036659877800407}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "5", "\" misclassified as \"", "8"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 5, " misclassified as ", 8}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["3", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "3", "\" examples of \"", "6", "\" misclassified as \"", "8"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.003076923076923077`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.003131524008350731`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{3, " examples of ", 6, " misclassified as ", 8}], 
         Row[{"Column fraction = ", 0.003076923076923077}], 
         Row[{"Row fraction = ", 0.003131524008350731}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "7", "\" misclassified as \"", "8"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0020512820512820513`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0019455252918287938`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{2, " examples of ", 7, " misclassified as ", 8}], 
         Row[{"Column fraction = ", 0.0020512820512820513`}], 
         Row[{"Row fraction = ", 0.0019455252918287938`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["959", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "959", "\" examples of \"", "8", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9835897435897436`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9845995893223819`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9840944073884043`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{959, " examples of ", 8, " correctly classified"}], 
         Row[{"Precision = ", 0.9835897435897436}], 
         Row[{"Recall = ", 0.9845995893223819}], 
         Row[{"FScore = ", 0.9840944073884043}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["6", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {8.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "6", "\" examples of \"", "9", "\" misclassified as \"", "8"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.006153846153846154`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.005946481665014866`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{6, " examples of ", 9, " misclassified as ", 8}], 
         Row[{"Column fraction = ", 0.006153846153846154}], 
         Row[{"Row fraction = ", 0.005946481665014866}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 9.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "0", "\" misclassified as \"", "9"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 0, " misclassified as ", 9}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 8.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "1", "\" misclassified as \"", "9"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 1, " misclassified as ", 9}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 7.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "2", "\" misclassified as \"", "9"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 2, " misclassified as ", 9}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 6.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "3", "\" misclassified as \"", "9"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0020100502512562816`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0019801980198019802`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{2, " examples of ", 3, " misclassified as ", 9}], 
         Row[{"Column fraction = ", 0.0020100502512562816`}], 
         Row[{"Row fraction = ", 0.0019801980198019802`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["3", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 5.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "3", "\" examples of \"", "4", "\" misclassified as \"", "9"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.003015075376884422`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.003054989816700611`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{3, " examples of ", 4, " misclassified as ", 9}], 
         Row[{"Column fraction = ", 0.003015075376884422}], 
         Row[{"Row fraction = ", 0.003054989816700611}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "5", "\" misclassified as \"", "9"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 5, " misclassified as ", 9}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "6", "\" misclassified as \"", "9"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 6, " misclassified as ", 9}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["2", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "2", "\" examples of \"", "7", "\" misclassified as \"", "9"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0020100502512562816`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0019455252918287938`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{2, " examples of ", 7, " misclassified as ", 9}], 
         Row[{"Column fraction = ", 0.0020100502512562816`}], 
         Row[{"Row fraction = ", 0.0019455252918287938`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["4", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "4", "\" examples of \"", "8", "\" misclassified as \"", "9"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.004020100502512563`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.004106776180698152`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{4, " examples of ", 8, " misclassified as ", 9}], 
         Row[{"Column fraction = ", 0.004020100502512563}], 
         Row[{"Row fraction = ", 0.004106776180698152}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["984", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {9.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "984", "\" examples of \"", "9", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9889447236180905`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9752229930624381`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9820359281437127`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{984, " examples of ", 9, " correctly classified"}], 
         Row[{"Precision = ", 0.9889447236180905}], 
         Row[{"Recall = ", 0.9752229930624381}], 
         Row[{"FScore = ", 0.9820359281437127}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {10.5, 9.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{"980", "\" example\"", "\"s\"", "\" of class \"", "0"},
            "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9928571428571429`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{980, " example", "s", " of class ", 0}], 
        Row[{"Recall = ", 0.9928571428571429}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {10.5, 8.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1135", "\" example\"", "\"s\"", "\" of class \"", "1"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9973568281938326`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1135, " example", "s", " of class ", 1}], 
        Row[{"Recall = ", 0.9973568281938326}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {10.5, 7.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1032", "\" example\"", "\"s\"", "\" of class \"", "2"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9864341085271318`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1032, " example", "s", " of class ", 2}], 
        Row[{"Recall = ", 0.9864341085271318}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {10.5, 6.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1010", "\" example\"", "\"s\"", "\" of class \"", "3"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.996039603960396`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1010, " example", "s", " of class ", 3}], 
        Row[{"Recall = ", 0.996039603960396}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {10.5, 5.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{"982", "\" example\"", "\"s\"", "\" of class \"", "4"},
            "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9918533604887984`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{982, " example", "s", " of class ", 4}], 
        Row[{"Recall = ", 0.9918533604887984}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {10.5, 4.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{"892", "\" example\"", "\"s\"", "\" of class \"", "5"},
            "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9899103139013453`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{892, " example", "s", " of class ", 5}], 
        Row[{"Recall = ", 0.9899103139013453}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {10.5, 3.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{"958", "\" example\"", "\"s\"", "\" of class \"", "6"},
            "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9832985386221295`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{958, " example", "s", " of class ", 6}], 
        Row[{"Recall = ", 0.9832985386221295}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {10.5, 2.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1028", "\" example\"", "\"s\"", "\" of class \"", "7"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9883268482490273`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1028, " example", "s", " of class ", 7}], 
        Row[{"Recall = ", 0.9883268482490273}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {10.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{"974", "\" example\"", "\"s\"", "\" of class \"", "8"},
            "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9845995893223819`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{974, " example", "s", " of class ", 8}], 
        Row[{"Recall = ", 0.9845995893223819}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {10.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1009", "\" example\"", "\"s\"", "\" of class \"", "9"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9752229930624381`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1009, " example", "s", " of class ", 9}], 
        Row[{"Recall = ", 0.9752229930624381}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "983", "\" example\"", "\"s\"", "\" classified as \"", "0"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9898270600203459`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{983, " example", "s", " classified as ", 0}], 
        Row[{"Precision = ", 0.9898270600203459}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1140", "\" example\"", "\"s\"", "\" classified as \"", "1"}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.9929824561403509`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1140, " example", "s", " classified as ", 1}], 
        Row[{"Precision = ", 0.9929824561403509}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1025", "\" example\"", "\"s\"", "\" classified as \"", "2"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9931707317073171`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1025, " example", "s", " classified as ", 2}], 
        Row[{"Precision = ", 0.9931707317073171}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1017", "\" example\"", "\"s\"", "\" classified as \"", "3"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9891838741396264`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1017, " example", "s", " classified as ", 3}], 
        Row[{"Precision = ", 0.9891838741396264}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {4.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "983", "\" example\"", "\"s\"", "\" classified as \"", "4"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9908443540183113`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{983, " example", "s", " classified as ", 4}], 
        Row[{"Precision = ", 0.9908443540183113}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "901", "\" example\"", "\"s\"", "\" classified as \"", "5"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9800221975582686`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{901, " example", "s", " classified as ", 5}], 
        Row[{"Precision = ", 0.9800221975582686}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {6.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "952", "\" example\"", "\"s\"", "\" classified as \"", "6"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9894957983193278`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{952, " example", "s", " classified as ", 6}], 
        Row[{"Precision = ", 0.9894957983193278}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {7.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1029", "\" example\"", "\"s\"", "\" classified as \"", "7"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9873663751214772`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1029, " example", "s", " classified as ", 7}], 
        Row[{"Precision = ", 0.9873663751214772}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {8.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "975", "\" example\"", "\"s\"", "\" classified as \"", "8"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9835897435897436`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{975, " example", "s", " classified as ", 8}], 
        Row[{"Precision = ", 0.9835897435897436}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {9.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          TemplateBox[{
           "995", "\" example\"", "\"s\"", "\" classified as \"", "9"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9889447236180905`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{995, " example", "s", " classified as ", 9}], 
        Row[{"Precision = ", 0.9889447236180905}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{9.5, 
       FormBox[
        RotationBox["0", BoxRotation -> 0.], TraditionalForm]}, {8.5, 
       FormBox[
        RotationBox["1", BoxRotation -> 0.], TraditionalForm]}, {7.5, 
       FormBox[
        RotationBox["2", BoxRotation -> 0.], TraditionalForm]}, {6.5, 
       FormBox[
        RotationBox["3", BoxRotation -> 0.], TraditionalForm]}, {5.5, 
       FormBox[
        RotationBox["4", BoxRotation -> 0.], TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["5", BoxRotation -> 0.], TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["6", BoxRotation -> 0.], TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["7", BoxRotation -> 0.], TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["8", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
       FormBox[
        RotationBox["9", BoxRotation -> 0.], TraditionalForm]}}, {{9.5, 
       FormBox["980", TraditionalForm]}, {8.5, 
       FormBox["1135", TraditionalForm]}, {7.5, 
       FormBox["1032", TraditionalForm]}, {6.5, 
       FormBox["1010", TraditionalForm]}, {5.5, 
       FormBox["982", TraditionalForm]}, {4.5, 
       FormBox["892", TraditionalForm]}, {3.5, 
       FormBox["958", TraditionalForm]}, {2.5, 
       FormBox["1028", TraditionalForm]}, {1.5, 
       FormBox["974", TraditionalForm]}, {0.5, 
       FormBox["1009", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["983", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["1140", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["1025", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["1017", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["983", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {5.5, 
       FormBox[
        RotationBox["901", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {6.5, 
       FormBox[
        RotationBox["952", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {7.5, 
       FormBox[
        RotationBox["1029", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {8.5, 
       FormBox[
        RotationBox["975", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {9.5, 
       FormBox[
        RotationBox["995", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["0", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["1", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["2", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["3", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["4", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {5.5, 
       FormBox[
        RotationBox["5", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {6.5, 
       FormBox[
        RotationBox["6", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {7.5, 
       FormBox[
        RotationBox["7", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {8.5, 
       FormBox[
        RotationBox["8", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {9.5, 
       FormBox[
        RotationBox["9", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->12,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{457.6875, Automatic},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.702318036128734*^9, 3.7069805653844852`*^9}]
}, Open  ]]
},
CellGrouping->Manual,
WindowSize->{808, 751},
WindowMargins->{{716, -84}, {-95, 195}},
DockedCells->{},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 7, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 14188, 244, 70, "Text",ExpressionUUID->"ba5b01e2-ed6e-4298-abd1-ca257188e1b6"],
Cell[14771, 268, 271, 5, 70, "Text",ExpressionUUID->"b37c484e-35ef-4a9e-a659-c9a7689b9392"],
Cell[15045, 275, 979, 15, 70, "Input",ExpressionUUID->"8d3360df-8379-4c93-9c3d-a1b672900889"]
}, Open  ]],
Cell[16039, 293, 318, 6, 70, "Input",ExpressionUUID->"c3184f1a-5f71-44ea-83dd-81144660908e"],
Cell[16360, 301, 796, 12, 70, "Text",ExpressionUUID->"046f9740-f6b6-4b45-b41b-8cec3a769134"],
Cell[17159, 315, 28076, 466, 70, "Input",ExpressionUUID->"d57778e3-8c86-4ac0-aa74-487c095ce7e7"],
Cell[45238, 783, 513, 8, 70, "Input",ExpressionUUID->"b6a7992c-718e-45c0-8683-fc26655c0898"],
Cell[45754, 793, 341, 6, 70, "Text",ExpressionUUID->"35e53ca3-362e-4e49-8c60-48f54d15bb2c"],
Cell[46098, 801, 1300, 35, 70, "Text",ExpressionUUID->"e0951b13-435a-48ce-86fe-41a2f9faa483"],
Cell[47401, 838, 645, 20, 70, "DisplayFormulaNumbered",ExpressionUUID->"8d94b826-08c4-48bc-9e33-cae1b5942209"],
Cell[48049, 860, 655, 10, 70, "Text",ExpressionUUID->"c3e236da-00e6-409f-ab86-2a58539b92db"],
Cell[48707, 872, 87258, 1436, 70, "Input",ExpressionUUID->"d6c10255-0fa2-4877-87ee-8b8a8627cd5f"],
Cell[135968, 2310, 1657, 35, 70, "Text",ExpressionUUID->"b572070b-ca30-4f99-af05-838dd20231d7"],
Cell[137628, 2347, 690, 11, 70, "Text",ExpressionUUID->"a62c846c-15eb-43c8-a19a-5338482d17e6"],
Cell[138321, 2360, 368, 8, 70, "Text",ExpressionUUID->"12ad7559-b0eb-43b8-974c-216caaed2174"],
Cell[138692, 2370, 754, 18, 70, "Text",ExpressionUUID->"02a31844-5d34-485c-ae2e-e6e65416391d"],
Cell[139449, 2390, 1013, 17, 70, "Text",ExpressionUUID->"a22115ed-8841-4e0e-a128-c7eab866da35"],
Cell[140465, 2409, 2060, 64, 70, "DisplayFormulaNumbered",ExpressionUUID->"5de6e2dc-d82f-4c9e-8dfb-402198389dbe"],
Cell[142528, 2475, 655, 17, 70, "Text",ExpressionUUID->"a561155c-2680-40cf-a1e7-8c129cb4b411",
 InitializationCell->True],
Cell[143186, 2494, 634, 13, 70, "Text",ExpressionUUID->"de17b514-7f19-4d40-8c9d-ccdacd15a57d"],
Cell[CellGroupData[{
Cell[143845, 2511, 324, 8, 70, "Input",ExpressionUUID->"6ffa8eb8-b1d4-42ac-a419-0d58efee1ac6"],
Cell[144172, 2521, 151188, 2486, 70, "Output",ExpressionUUID->"caa81370-8469-4d14-8964-cfc371392cda"]
}, Open  ]],
Cell[295375, 5010, 218, 4, 70, "Text",ExpressionUUID->"0bbc9841-ade3-465b-bc4e-339dc5aeb41f"],
Cell[CellGroupData[{
Cell[295618, 5018, 354, 11, 70, "Input",ExpressionUUID->"dccf5ec1-8d90-4525-8841-17b9a29ed5b0"],
Cell[295975, 5031, 212152, 3485, 70, "Output",ExpressionUUID->"d735a0a5-20e5-4070-bbc6-9a688cad9852"]
}, Open  ]],
Cell[508142, 8519, 301, 5, 70, "Text",ExpressionUUID->"bef344af-a618-4ac9-8023-6b497f51bc48"],
Cell[508446, 8526, 157, 4, 70, "Text",ExpressionUUID->"c2a4f06d-4257-4a51-8d56-f33f33121c20"],
Cell[CellGroupData[{
Cell[508628, 8534, 485, 12, 70, "Input",ExpressionUUID->"3c998353-d095-4540-ab0d-a929859fd54b"],
Cell[509116, 8548, 4404, 79, 70, "Output",ExpressionUUID->"71cf4474-08ec-4989-95a6-a45d1c0bf3de"]
}, Open  ]],
Cell[513535, 8630, 94, 1, 70, "Input",ExpressionUUID->"a7cb44d3-06b2-44b4-aa8a-71bd0c4edf39"],
Cell[513632, 8633, 675, 12, 70, "Text",ExpressionUUID->"5cb5e75e-0878-46d9-86b2-71f83d6fb4be"],
Cell[CellGroupData[{
Cell[514332, 8649, 1414, 31, 70, "Input",ExpressionUUID->"ff7cfeec-4b3f-4e06-8a86-136832293145"],
Cell[CellGroupData[{
Cell[515771, 8684, 2689, 51, 70, "Output",ExpressionUUID->"aae5d550-699c-426f-95ea-e4f8ec67e1e1"],
Cell[518463, 8737, 263, 6, 70, "Message",ExpressionUUID->"ca24cf3e-a822-407b-bc6b-ad3c3178bb6f"],
Cell[518729, 8745, 432, 9, 70, "Message",ExpressionUUID->"d8f9e54c-0865-4c86-9cfe-39d5e9266534"]
}, Open  ]]
}, Open  ]],
Cell[519188, 8758, 321, 7, 70, "Text",ExpressionUUID->"b1c2741d-c991-404e-be83-8d9b6f8e6d92"],
Cell[519512, 8767, 886, 15, 70, "Text",ExpressionUUID->"0ed2b8d9-4a5c-401b-bfea-b0bc28820e6a"],
Cell[520401, 8784, 111519, 1834, 70, "Input",ExpressionUUID->"39a139ab-9102-452c-9182-04c4b0169312"],
Cell[631923, 10620, 247, 6, 70, "Text",ExpressionUUID->"8a6230ea-3fd2-40ad-b15b-6fb9dc0e2c95"],
Cell[632173, 10628, 441, 10, 70, "Text",ExpressionUUID->"36612b44-6afc-40ec-a442-14b8d0c310a3"],
Cell[632617, 10640, 584, 15, 70, "Input",ExpressionUUID->"396057ab-8851-4132-8266-5bf49f63a203"],
Cell[633204, 10657, 106, 1, 70, "Input",ExpressionUUID->"ff23ee84-89ff-442b-8fbd-e6de39376e27"],
Cell[633313, 10660, 136748, 2814, 70, "Output",ExpressionUUID->"f5ebd6a8-45d8-450e-9d53-d0ad2753b3f6"],
Cell[770064, 13476, 463, 9, 70, "Text",ExpressionUUID->"c4f118d3-5252-4847-b000-4937a6382f77"],
Cell[CellGroupData[{
Cell[770552, 13489, 1521, 34, 70, "Input",ExpressionUUID->"83406e5b-e8b8-4991-84c1-fb59e646651e"],
Cell[772076, 13525, 28197, 589, 70, "Output",ExpressionUUID->"9c435d1f-48e8-46f8-a206-d057861f93c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[800310, 14119, 133, 2, 70, "Input",ExpressionUUID->"26013c95-0603-4395-a81f-63fb53a0a0af"],
Cell[800446, 14123, 12593, 256, 70, "Output",ExpressionUUID->"926b2fb4-3d90-4501-a728-f7c8b487e92b"]
}, Open  ]],
Cell[813054, 14382, 424, 9, 70, "Text",ExpressionUUID->"afee4d5d-24a0-46ad-bdf9-eaec81ae72a5"],
Cell[CellGroupData[{
Cell[813503, 14395, 604, 11, 70, "Input",ExpressionUUID->"51e36e38-c965-4135-98b1-29352d521edb"],
Cell[814110, 14408, 4568, 105, 70, "PrintTemporary",ExpressionUUID->"a9cf5fdd-d045-46be-aaf8-e95eacd39a4d"]
}, Open  ]],
Cell[818693, 14516, 504, 10, 70, "Text",ExpressionUUID->"b0c67b9c-9a17-443a-b9b9-5d5a2efd4842"],
Cell[CellGroupData[{
Cell[819222, 14530, 358, 9, 70, "Input",ExpressionUUID->"26db8f5b-2f1f-4241-942f-ab15061bf6f9"],
Cell[819583, 14541, 71080, 1713, 70, "Output",ExpressionUUID->"12047fef-849c-4134-b440-f2b869d7fc32"]
}, Open  ]],
Cell[890678, 16257, 1383, 29, 70, "Text",ExpressionUUID->"308634e4-db45-41a9-8fb4-a15813d95d86"],
Cell[892064, 16288, 343, 8, 70, "Input",ExpressionUUID->"3dc2232e-7470-417d-a66b-39c12c7c145b"],
Cell[CellGroupData[{
Cell[892432, 16300, 236, 4, 70, "Input",ExpressionUUID->"376e0cbe-34c2-4728-bc39-ceb952c6d1df"],
Cell[892671, 16306, 147, 2, 70, "Output",ExpressionUUID->"38ef1d24-fe59-4c8a-abae-b57b1413ddc9"]
}, Open  ]],
Cell[892833, 16311, 776, 15, 70, "Text",ExpressionUUID->"da15803a-4bb7-4a64-9000-c21b27ebeac1"],
Cell[CellGroupData[{
Cell[893634, 16330, 125, 2, 70, "Input",ExpressionUUID->"887a3ba6-0bfc-4381-8174-72f0f717a358"],
Cell[893762, 16334, 128532, 3359, 70, "Output",ExpressionUUID->"65027c5b-fda1-4e22-83d9-42e2476041c0"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
